javascript javascript  is a highlevel dynamic untyped and interpreted programming language it has been standardized in the ecmascript language specification alongside html and css it is one of the three core technologies of world wide web content production the majority of websites employ it and it is supported by all modern web browsers without plugins javascript is prototypebased with firstclass functions making it a multiparadigm language supporting objectoriented imperative and functional programming styles it has an api for working with text arrays dates and regular expressions but does not include any io such as networking storage or graphics facilities relying for these upon the host environment in which it is embedded although there are strong outward similarities between javascript and java including language name syntax and respective standard libraries the two are distinct languages and differ greatly in their design javascript was influenced by programming languages such as self and scheme javascript is also used in environments that are not webbased such as pdf documents sitespecific browsers and desktop widgets newer and faster javascript virtual machines vms and platforms built upon them have also increased the popularity of javascript for serverside web applications on the client side javascript has been traditionally implemented as an interpreted language but more recent browsers perform justintime compilation it is also used in game development the creation of desktop and mobile applications and serverside network programming with runtime environments such as nodejs history beginnings at netscape in  the national center for supercomputing applications ncsa a unit of the university of illinois at urbanachampaign released ncsa mosaic the first popular graphical web browser which played an important part in expanding the growth of the nascent world wide web in  a company called mosaic communications was founded in mountain view california and employed many of the original ncsa mosaic authors to create mosaic netscape however it intentionally shared no code with ncsa mosaic the internal codename for the companys browser was mozilla which stood for mosaic killer as the companys goal was to displace ncsa mosaic as the worlds number one web browser the first version of the web browser mosaic netscape  was released in late  within four months it had already taken threequarters of the browser market and became the main browser for internet in the s to avoid trademark ownership problems with the ncsa the browser was subsequently renamed netscape navigator in the same year and the company took the name netscape communications netscape communications realized that the web needed to become more dynamic marc andreessen the founder of the company believed that html needed a glue language that was easy to use by web designers and parttime programmers to assemble components such as images and plugins where the code could be written directly in the web page markup in  the company recruited brendan eich with the goal of embedding the scheme programming language into its netscape navigator before he could get started netscape communications collaborated with sun microsystems to include in netscape navigator suns more static programming language java in order to compete with microsoft for user adoption of web technologies and platforms netscape communications then decided that the scripting language they wanted to create would complement java and should have a similar syntax which excluded adopting other languages such as perl python tcl or scheme to defend the idea of javascript against competing proposals the company needed a prototype eich wrote one in  days in may  although it was developed under the name mocha the language was officially called livescript when it first shipped in beta releases of netscape navigator  in september  but it was renamed javascript when it was deployed in the netscape navigator  beta  in december the final choice of name caused confusion giving the impression that the language was a spinoff of the java programming language and the choice has been characterized as a marketing ploy by netscape to give javascript the cachet of what was then the hot new web programming language there is a common misconception that javascript was influenced by an earlier web page scripting language developed by nombas named c not to be confused with the later c created in  brendan eich however had never heard of c before he created livescript nombas did pitch their embedded web page scripting to netscape though web page scripting was not a new concept as shown by the violawww web browser nombas later switched to offering javascript instead of c in their scriptease product and was part of the tc group that standardized ecmascript serverside javascript netscape introduced an implementation of the language for serverside scripting with netscape enterprise server in december  soon after releasing javascript for browsers since the mids there has been a resurgence of serverside javascript implementations such as nodejs and marklogic adoption by microsoft microsoft script technologies including vbscript and jscript were released in  jscript a reverseengineered implementation of netscapes javascript was part of internet explorer  as well as being available serverside in internet information server internet explorer  also included microsofts first support for css and various extensions to html but in each case the implementation was noticeably different to that found in netscape navigator at the time these differences made it difficult for designers and programmers to make a single website work well in both browsers leading to the use of best viewed in netscape and best viewed in internet explorer logos that characterized these early years of the browser wars javascript began to acquire a reputation for being one of the roadblocks to a crossplatform and standardsdriven web some developers took on the difficult task of trying to make their sites work in both major browsers but many could not afford the time with the release of internet explorer  microsoft introduced the concept of dynamic html but the differences in language implementations and the different and proprietary document object models remained and were obstacles to widespread takeup of javascript on the web standardization in november  netscape submitted javascript to ecma international to carve out a standard specification which other browser vendors could then implement based on the work done at netscape this led to the official release of the language specification ecmascript published in the first edition of the ecma standard in june  with javascript being the most well known of the implementations actionscript and jscript are other wellknown implementations of ecmascript with extensions the standards process continued in cycles with the release of ecmascript  in june  which brings some modifications to conform to the isoiec  international standard the release of ecmascript  followed in december  which is the baseline for modern day javascript the original ecmascript  work led by waldemar horwat then at netscape now at google started in  and at first microsoft seemed to participate and even implemented some of the proposals in their jscript net language over time it was clear though that microsoft had no intention of cooperating or implementing proper javascript in internet explorer even though they had no competing proposal and they had a partial and diverged at this point implementation on the net server side so by  the original ecmascript  work was mothballed the next major event was in  with two major happenings in javascripts history first brendan eich and mozilla rejoined ecma international as a notforprofit member and work started on ecmascript for xml ex the ecma standard which came from exmicrosoft employees at bea systems originally acquired as crossgain this led to working jointly with macromedia later acquired by adobe systems who were implementing ex in actionscript  actionscript  was a fork of original ecmascript  so along with macromedia work restarted on ecmascript  with the goal of standardizing what was in actionscript  to this end adobe systems released the actionscript virtual machine  code named tamarin as an open source project but tamarin and actionscript  were too different from web javascript to converge as was realized by the parties in  and  alas there was still turmoil between the various players douglas crockfordthen at yahoojoined forces with microsoft in  to oppose ecmascript  which led to the ecmascript  effort the development of ecmascript  was never completed but that work influenced subsequent versions while all of this was happening the open source and developer communities set to work to revolutionize what could be done with javascript this community effort was sparked in  when jesse james garrett released a white paper in which he coined the term ajax and described a set of technologies of which javascript was the backbone used to create web applications where data can be loaded in the background avoiding the need for full page reloads and leading to more dynamic applications this resulted in a renaissance period of javascript usage spearheaded by open source libraries and the communities that formed around them with libraries such as prototype jquery dojo toolkit mootools and others being released in july  the disparate parties on either side came together in oslo this led to the eventual agreement in early  to rename ecmascript  to ecmascript  and drive the language forward using an agenda that is known as harmony ecmascript  was finally released in december  in june  ecmascript  was released to fully align with the third edition of the isoiec  international standard ecmascript  was released in june  the current version is ecmascript  released in june  later developments javascript has become one of the most popular programming languages on the web initially however many professional programmers denigrated the language because among other reasons its target audience consisted of web authors and other such amateurs the advent of ajax returned javascript to the spotlight and brought more professional programming attention the result was a proliferation of comprehensive frameworks and libraries improved javascript programming practices and increased usage of javascript outside web browsers as seen by the proliferation of serverside javascript platforms in january  the commonjs project was founded with the goal of specifying a common standard library mainly for javascript development outside the browser with the rise of singlepage applications and javascriptheavy sites it is increasingly being used as a compile target for sourcetosource compilers from both dynamic languages and static languages trademark javascript is a trademark of oracle corporation it is used under license for technology invented and implemented by netscape communications and current entities such as the mozilla foundation features the following features are common to all conforming ecmascript implementations unless explicitly specified otherwise imperative and structured javascript supports much of the structured programming syntax from c eg if statements while loops switch statements do while loops etc one partial exception is scoping javascript originally had only function scoping with var ecmascript  added a let keyword for block scoping meaning javascript now has both function and block scoping like c javascript makes a distinction between expressions and statements one syntactic difference from c is automatic semicolon insertion which allows the semicolons that would normally terminate statements to be omitted prototypebased objectoriented javascript is almost entirely objectbased in javascript an object is an associative array augmented with a prototype see below each string key provides the name for an object property and there are two syntactical ways to specify such a name dot notation objx and bracket notation objx a property may be added rebound or deleted at runtime most properties of an object and any property that belongs to an objects prototype inheritance chain can be enumerated using a forin loop javascript has a small number of builtin objects including and  functional a function is firstclass a function is considered to be an object as such a function may have properties and methods such as call and bind a nested function is a function defined within another function it is created each time the outer function is invoked in addition each nested function forms a lexical closure the lexical scope of the outer function including any constant local variable or argument value becomes part of the internal state of each inner function object even after execution of the outer function concludes javascript also supports anonymous functions delegative javascript supports implicit and explicit delegation vendorspecific extensions javascript is officially managed by mozilla foundation and new language features are added periodically however only some javascript engines support these new features syntax simple examples variables in javascript can be defined using the var keyword var x  defines the variable x and assigns to it the special value undefined not to be confused with an undefined value var y    defines the variable y and assigns to it the value  note the comments in the example above both of which were preceded with two forward slashes there is no builtin io functionality in javascript the runtime environment provides that the ecmascript specification in edition  mentions  indeed there are no provisions in this specification for input of external data or output of computed results however most runtime environments have a console object that can be used to print output here is a minimalist hello world program consoleloghello world a simple recursive function function factorialn  multiplication of two numbers an anonymous function or lambda function counter   var closure  counter closure  returns  closure  returns  closure  returns  this example shows that in javascript function closures captures their nonlocal variables by reference variadic function demonstration arguments is a special variable function sum  sum   returns  sum    returns  immediatelyinvoked function expressions are often used to create modules as before ecmascript  there was not builtin construct in the language modules allow gathering properties and methods in a namespace and making some of them private var counter  function     module counterget  shows  counterset counterincrement  shows  counterincrement  shows  more advanced example this sample code displays various javascript features  finds the lowest common multiple lcm of two numbers  function lcmcalculatorx y   constructor function  the prototype of object instances created by a constructor is  that constructors prototype property lcmcalculatorprototype    object literal   define generic output function this implementation only works for web browsers function outputx   note arrays map and foreach are defined in javascript   they are used here to demonstrate javascripts inherent functional nature        mapfunction pair   array literal  mapping function sortfunction a b   sort with this comparative function foreachfunction obj  the following output should be displayed in the browser window lcmcalculator a   b   gcd   lcm   lcmcalculator a   b   gcd   lcm   lcmcalculator a   b   gcd   lcm   lcmcalculator a   b   gcd   lcm   use in web pages the most common use of javascript is to add clientside behavior to html pages also known as dynamic html dhtml scripts are embedded in or included from html pages and interact with the document object model dom of the page some simple examples of this usage are because javascript code can run locally in a users browser rather than on a remote server the browser can respond to user actions quickly making an application more responsive furthermore javascript code can detect user actions that html alone cannot such as individual keystrokes applications such as gmail take advantage of this much of the userinterface logic is written in javascript and javascript dispatches requests for information such as the content of an email message to the server the wider trend of ajax programming similarly exploits this strength a javascript engine also known as javascript interpreter or javascript implementation is an interpreter that interprets javascript source code and executes the script accordingly the first javascript engine was created by brendan eich at netscape for the netscape navigator web browser the engine codenamed spidermonkey is implemented in c it has since been updated in javascript  to conform to ecmascript  the rhino engine created primarily by norris boyd formerly at netscape now at google is a javascript implementation in java rhino like spidermonkey is ecmascript  compliant a web browser is by far the most common host environment for javascript web browsers typically create host objects to represent the dom in javascript the web server is another common host environment a javascript web server would typically expose host objects representing http request and response objects which a javascript program could then interrogate and manipulate to dynamically generate web pages because javascript is the only language that the most popular browsers share support for it has become a target language for many frameworks in other languages even though javascript was never intended to be such a language despite the performance limitations inherent to its dynamic nature the increasing speed of javascript engines has made the language a surprisingly feasible compilation target example script below is a minimal example of a standardsconforming web page containing javascript using html  syntax and the dom compatibility considerations because javascript runs in widely varying environments an important part of testing and debugging is to test and verify that the javascript works across multiple browsers the dom interfaces for manipulating web pages are not part of the ecmascript standard or of javascript itself officially the dom interfaces are defined by a separate standardization effort by the wc in practice browser implementations differ from the standards and from each other and not all browsers execute javascript to deal with these differences javascript authors can attempt to write standardscompliant code that will also be executed correctly by most browsers failing that they can write code that checks for the presence of certain browser features and behaves differently if they are not available in some cases two browsers may both implement a feature but with different behavior and authors may find it practical to detect what browser is running and change their scripts behavior to match programmers may also use libraries or toolkits that take browser differences into account furthermore scripts may not work for some users for example a user may to support these users web authors can try to create pages that degrade gracefully on user agents browsers that do not support the pages javascript in particular the page should remain usable albeit without the extra features that the javascript would have added an alternative approach that many find preferable is to first author content using basic technologies that work in all browsers then enhance the content for users that have javascript enabled this is known as progressive enhancement security javascript and the dom provide the potential for malicious authors to deliver scripts to run on a client computer via the web browser authors contain this risk using two restrictions first scripts run in a sandbox in which they can only perform webrelated actions not generalpurpose programming tasks like creating files second scripts are constrained by the same origin policy scripts from one web site do not have access to information such as usernames passwords or cookies sent to another site most javascriptrelated security bugs are breaches of either the same origin policy or the sandbox there are subsets of general javascriptadsafe secure ecmascript sesthat provide greater level of security especially on code created by third parties such as advertisements caja is another project for safe embedding and isolation of thirdparty javascript and html content security policy is the main intended method of ensuring that only trusted code is executed on a web page crosssite vulnerabilities a common javascriptrelated security problem is crosssite scripting xss a violation of the sameorigin policy xss vulnerabilities occur when an attacker is able to cause a target web site such as an online banking website to include a malicious script in the webpage presented to a victim the script in this example can then access the banking application with the privileges of the victim potentially disclosing secret information or transferring money without the victims authorization a solution to xss vulnerabilities is to use html escaping whenever displaying untrusted data some browsers include partial protection against reflected xss attacks in which the attacker provides a url including malicious script however even users of those browsers are vulnerable to other xss attacks such as those where the malicious code is stored in a database only correct design of web applications on the server side can fully prevent xss xss vulnerabilities can also occur because of implementation mistakes by browser authors another crosssite vulnerability is crosssite request forgery csrf in csrf code on an attackers site tricks the victims browser into taking actions the user didnt intend at a target site like transferring money at a bank it works because if the target site relies only on cookies to authenticate requests then requests initiated by code on the attackers site will carry the same legitimate login credentials as requests initiated by the user in general the solution to csrf is to require an authentication value in a hidden form field and not only in the cookies to authenticate any request that might have lasting effects checking the http referrer header can also help javascript hijacking is a type of csrf attack in which a tag on an attackers site exploits a page on the victims site that returns private information such as json or javascript possible solutions include misplaced trust in the client developers of clientserver applications must recognize that untrusted clients may be under the control of attackers the application author cannot assume that his javascript code will run as intended or at all because any secret embedded in the code could be extracted by a determined adversary some implications are browser and plugin coding errors javascript provides an interface to a wide range of browser capabilities some of which may have flaws such as buffer overflows these flaws can allow attackers to write scripts that would run any code they wish on the users system this code is not by any means limited to another javascript application for example a buffer overrun exploit can allow an attacker to gain access to the operating systems api with superuser privileges these flaws have affected major browsers including firefox internet explorer and safari plugins such as video players adobe flash and the wide range of activex controls enabled by default in microsoft internet explorer may also have flaws exploitable via javascript such flaws have been exploited in the past in windows vista microsoft has attempted to contain the risks of bugs such as buffer overflows by running the internet explorer process with limited privileges google chrome similarly confines its page renderers to their own sandbox sandbox implementation errors web browsers are capable of running javascript outside the sandbox with the privileges necessary to for example create or delete files of course such privileges arent meant to be granted to code from the web incorrectly granting privileges to javascript from the web has played a role in vulnerabilities in both internet explorer and firefox in windows xp service pack  microsoft demoted jscripts privileges in internet explorer microsoft windows allows javascript source files on a computers hard drive to be launched as generalpurpose nonsandboxed programs see windows script host this makes javascript like vbscript a theoretically viable vector for a trojan horse although javascript trojan horses are uncommon in practice uses outside web pages in addition to web browsers and servers javascript interpreters are embedded in a number of tools each of these applications provides its own object model that provides access to the host environment the core javascript language remains mostly the same in each application development tools within javascript access to a debugger becomes invaluable when developing large nontrivial programs because there can be implementation differences between the various browsers particularly within the dom it is useful to have access to a debugger for each of the browsers that a web application targets script debuggers are integrated within internet explorer firefox safari google chrome opera and nodejs in addition to the native internet explorer developer tools three debuggers are available for internet explorer microsoft visual studio is the richest of the three closely followed by microsoft script editor a component of microsoft office and finally the free microsoft script debugger that is far more basic than the other two the free microsoft visual web developer express provides a limited version of the javascript debugging functionality in microsoft visual studio internet explorer has included developer tools since version  in comparison to internet explorer firefox has a more comprehensive set of developer tools which include a debugger as well old versions of firefox without these tools used a firefox addon called firebug or the older venkman debugger also webkits web inspector includes a javascript debugger which is used in safari a modified version called blink devtools is used in google chrome nodejs has node inspector an interactive debugger that integrates with the blink devtools available in google chrome opera includes a set of tools called dragonfly in addition to the native computer software there are online javascript ides debugging aids that are themselves written in javascript and built to run on the web an example is the program jslint developed by douglas crockford who has written extensively on the language jslint scans javascript code for conformance to a set of standards and guidelines many libraries for javascript such as threejs provide links to demonstration code that can be edited by users they are also used as a pedagogical tool by institutions such as khan academy to allow students to experience writing code in an environment where they can see the output of their programs without needing any setup beyond a web browser version history javascript was initially developed in  for use in the netscape navigator web browser in the same year microsoft released an implementation for internet explorer this implementation was called jscript due to trademark issues in  the first standardized version of the language was released under the name ecmascript in the first edition of the ecma standard the explicit versioning and optin of language features was mozillaspecific and has been removed firefox  was the last version which referred to a javascript version  with new editions of the ecma standard javascript language features are now often mentioned with their initial definition in the ecma editions the following table is based on information from multiple sources related languages and features json or javascript object notation is a generalpurpose data interchange format that is defined as a subset of javascripts object literal syntax like much of javascript regexps and anonymous functions as st class elements closures flexible classes use strict json except for replacing perls keyvalue operator  by an rfc  inspired  is syntactically pure perl jquery is a popular javascript library designed to simplify domoriented clientside html scripting along with offering crossbrowser compatibility because various browsers respond differently to certain vanilla javascript code underscorejs is a utility javascript library for data manipulation that is used in both clientside and serverside network applications mozilla browsers currently support liveconnect a feature that allows javascript and java to intercommunicate on the web however mozillaspecific support for liveconnect is scheduled to be phased out in the future in favor of passing on the liveconnect handling via npapi to the java  plugin not yet supported on the mac  most browser inspection tools such as firebug in firefox include javascript interpreters that can act on the visible pages dom asmjs is a subset of javascript that can be run in any javascript engine or run faster in an aheadoftime aot compiling engine jsfuck is an esoteric programming language programs are written using only six different characters but are still valid javascript code pjs is an object oriented javascript library designed for artists and designers it is based on the ideas of the processing project but is for the web use as an intermediate language as javascript is the most widely supported clientside language that can run within a web browser it has become an intermediate language for other languages to target this has included both newly created languages and ports of existing languages some of these include as javascript has unusual limitations  such as no separate integer type using floating point  languages that compile to javascript commonly have slightly different behavior than in other environments javascript and java a common misconception is that javascript is similar or closely related to java it is true that both have a clike syntax the c language being their most immediate common ancestor language they also are both typically sandboxed when used inside a browser and javascript was designed with javas syntax and standard library in mind in particular all java keywords were reserved in original javascript javascripts standard library follows javas naming conventions and javascripts math and date objects are based on classes from java  but the similarities end there java and javascript both first appeared on  may  but java was developed by james gosling of sun microsystems and javascript by brendan eich of netscape communications the differences between the two languages are more prominent than their similarities java has static typing while javascripts typing is dynamic java is loaded from compiled bytecode while javascript is loaded as humanreadable source code javas objects are classbased while javascripts are prototypebased finally java did not support functional programming until java  while javascript has done so from the beginning being influenced by scheme