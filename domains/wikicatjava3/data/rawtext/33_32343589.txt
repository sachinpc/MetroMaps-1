webcl webcl web computing language is a javascript binding to opencl for heterogeneous parallel computing within any compatible web browser without the use of plugins first announced in march  it is developed on similar grounds as opencl and is considered as a browser version of the latter primarily webcl allows web applications to actualize speed with multicore cpus and gpus with the growing popularity of applications that need parallel processing like image editing augmented reality applications and sophisticated gaming it has become more important to improve the computational speed with these background reasons a nonprofit khronos group designed and developed webcl which is a javascript binding to opencl with a portable kernel programming enabling parallel computing on web browsers across a wide range of devices in short webcl consists of two parts one being kernel programming which runs on the processors devices and the other being javascript which binds the web application to opencl the completed and ratified specification for webcl  was released on march   since opencl is also used for parallel computing webcl is built to extend that to web browser both opencl and webcl will have updates coming up which can be a problem if the apis of webcl arent in sync with opencl also starting an entirely new api would mean building everything from scratch considering the compatibility issues which might take long as there could be many bugs implementation currently no browsers natively support webcl however nonnative addons are used to implement webcl for example nokia developed a webcl extension mozilla does not plan to implement webcl in favor of opengl es  compute shaders example code the basic unit of a parallel program is kernel a kernel is any parallelizable task used to perform a specific job more often functions can be realized as kernels a program can be composed of one or more kernels in order to realize a kernel it is essential that a task is parallelizable data dependencies and order of execution play a vital role in producing efficient parallelized algorithms a simple example can be thought of the case of loop unrolling performed by c compilers where a statement like fori   i   i can be unrolled into c  a  b c  a  b c  a  b above statements can be parallelized and can be made to run simultaneously a kernel follows a similar approach where only the snapshot of the i iteration is captured inside kernel lets rewrite the above code using a kernel kernel addglobal float a global float b global floatc running a webcl application involves the following steps further details about the same can be found at exceptions list webcl being java based implementation doesnt send an error message as a return value but throws exceptions the most common among them being outofresources outofhostmemory or the webclspecific webclimplementationfailure the exception describes the name and message of the error the syntax is as follows exception webclexception  domexception  from the code above it can be observed that the message field can be a null value list of few other exceptions more information on exceptions can be found in the specs document there is another exception that is raised upon trying to call an object that is released on using the release method the object doesnt get deleted permanently but it frees the resources associated with that object in order to avoid this exception releaseall method can be used which not only frees the resources but also deletes all the associated objects created security webcl being an openended software developed for web applications there is lot of scope for vulnerabilities in the design and development fields too this forced the developers working on webcl to give security the utmost importance few concerns that were addressed are