java web start in computing java web start also known as javaws javaws or jaws is a framework developed by sun microsystems now oracle that allows users to start application software for the java platform directly from the internet using a web browser some key benefits of this technology include seamless version updating for globally distributed applications and greater control of memory allocation to the java virtual machine functionality unlike java applets web start applications do not run inside the browser by default they run in the same sandbox as applets with several minor extensions like allowing to load and save the file that is explicitly selected by the user through the file selection dialog only signed applications can be configured to have additional permissions web start has an advantage over applets in that it overcomes many compatibility problems with browsers java plugins and different jvm versions web start programs are no longer an integrated part of the web page they are independent applications that run in a separate frame web start can also launch unmodified applets that are packaged inside jar files by writing the appropriate jnlp file this file can also pass the applet parameters such applets also run in a separate frame applet launcher may not support some specific cases like loading class as resource like applets java web start is crossplatform implementation the developer prepares a special xml file with jnlp extension this file describes the application requirements code location parameters and additional permissions if any the browser downloads this file as any other and following its mime type codice opens it with web start tool web start tool downloads all necessary resources and launches the application java web start provides a series of classes in the codice package which provide various services to the application sun designed most of these services with the aim of allowing carefully controlled access to resources such as files and the system clipboard while restricting the application to authorized operations sun introduced version  of web start in march  while bit windows support was added only in java  later than bit java was first available since jse  web start comes as a default part of java runtime environment jre called codice computer administrators no longer have to install it separately java network launching protocol jnlp programmers often speak of the java network launching protocol jnlp interchangeably with the term web start the jnlp protocol defined with an xml schema specifies how to launch java web start applications jnlp consists of a set of rules defining how exactly to implement the launching mechanism jnlp files include information such as the location of the jar package file and the name of the main class for the application in addition to any other parameters for the program a properly configured browser passes jnlp files to a java runtime environment jre which in turn downloads the application onto the users machine and starts executing it the development of jnlp took place under the java community process as jsr  important web start features include the ability to automatically download and install a jre in the case where the user does not have java installed and for programmers to specify which jre version a given program needs in order to execute the user does not have to remain connected to the internet to execute the downloaded programs because they execute from a locally maintained cache updates of the software download from the web and become available when the user has a connection to the internet thus easing the burden of deployment any computer user can use jnlp simply by installing a jnlp client most commonly java web start the installation can occur automatically such that the enduser sees the client launcher downloading and installing the java application when first executed jnlp works in a similar fashion to how httphtml works for the web for rendering an html webpage after the user clicks on a weblink the browser submits a url to a webserver which replies with an html file the browser then requests the resources referred to by this file images css and finally renders the page once it has received enough information page rendering usually starts before all resources have downloaded some resources not critical to the layout of the page such as images can follow on afterwards jnlp mirrors this process in the same way that a web browser renders a webpage a jnlp client renders a java app after the user clicks on a weblink the browser submits an url to a webserver which replies with a jnlp file instead of a html file for the application the jnlp client parses this file requests the resources specified jar files waits for the retrieval of all required resources and then launches the application the jnlp file can list resources as lazy which informs the jnlp client that the application does not need those resources to start but can retrieve them later on whenif the application requests them example the example below gives a simple jnlp file to launch the applet specifying code base source main class and window size such file contains all necessary references and is selfsufficient to launch the application as no permissions are requested the code will run in a sandbox jnlp also states that this application can run offline if already cached and should be updated as a background process pack compression to reduce the size of a java web start application sun microsystems introduced a compression system called pack in java  it can compress a large jar file to oneninth of its original size if it contains only java classes java web start has supported pack since it first appeared but initially this feature required serverside cooperation and a certain amount of expertise to set up when sun introduced java se u pack support became available without the need for special server support application designers can enable or disable this feature within jnlp files on slow connections pack gives a performance boost in application startup time and download time signed web start applications by default java web start applications run restricted which means that they do not have access to some system resources such as local files but publishers can remove these restrictions by signing their web start applications with the codice tool that comes with the jdk alternatives the opensource icedtea project provides an alternative jnlp implementation in icedteaweb jnlp implementations other than suns reference implementation