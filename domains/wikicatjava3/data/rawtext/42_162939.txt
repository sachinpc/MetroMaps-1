gnu compiler for java the gnu compiler for java gcj was a free compiler for the java programming language and part of the gnu compiler collection gcj could compile java source code to java virtual machine bytecode or to machine code for a number of cpu architectures it could also compile class files and whole jars that contain bytecode into machine code history the gcj runtimelibraries original source is from gnu classpath project but there is a code difference between the codice libraries gcj  uses the eclipse compiler for java as a frontend in  a lot of work was done to implement support for javas two graphical apis in gnu classpath awt and swing software support for awt is still in development once awt support is working then swing support can be considered there is at least one freesoftware partial implementations of swing that may be usable the gnu classpath was never completed to even java  status and now appears to have been abandoned completely as of  there were no new developments announced from gcj and the product was in deep maintenance mode in  gcj was in the process of being removed from gcc and was deleted in october performance the compilation function in gcj should have a faster startup time than the equivalent bytecode launched in a jvm when compiling java code into machine code compiled native interface cni the compiled native interface cni previously named cygnus native interface is a software framework for the gcj that allows java code to call and be called by native applications programs specific to a hardware and operatingsystem platform and libraries written in c cni closely resembles the jni java native interface framework which comes as a standard with various java virtual machines comparison of language use the authors of cni claim for various advantages over jni cni depends on java classes appearing as c classes for example given a java class one can use the class thus