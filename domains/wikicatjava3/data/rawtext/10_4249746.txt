oxygene programming language oxygene formerly known as chrome is a programming language developed by remobjects software for microsofts common language infrastructure the java platform and cocoa oxygene is object pascalbased but also has influences from c eiffel java f and other languages compared to the now deprecated delphinet oxygene does not emphasize total backward compatibility but is designed to be a reinvention of the language be a good citizen on the managed development platforms and leverage all the features and technologies provided by the net and java runtimes oxygene is commercial product and offers full integration into microsofts visual studio ide on windows as well as its own ide fire for use on macos the command line compiler is available free oxygene is one of three languages supported by the underlying elements compiler toolchain next to c and swift from  to  remobjects software has licensed its compiler and ide technology to embarcadero to be used in their embarcadero prism product starting in the fall of  oxygene became available in two separate editions with the second edition adding support for the java and android runtimes starting with the release of xe embarcadero prism is no longer part of the rad studio sku numerous support and upgrade paths for prism customers exist to migrate to oxygene as of  there is only one edition of oxygene which allows development on windows or macos and which can create executables for windows net ios android java and macos the language the oxygene language has its origins in object pascal in general and delphi in particular but was designed to reflect the guidelines of net programming and to create fully clrcompliant assemblies therefore some minor language features known from object pascal  delphi have been dropped or revised while a slew of new and more modern features such as generics or sequences and queries have been added to the language oxygene is an objectoriented language which means it uses classes which can hold data and execute code to design programs classes are prototypes for objects like the idea of an apple is the prototype for the apple one can actually buy in a shop it is known that an apple has a colour and that it can be peeled those are the data and executable code for the apple class oxygene provides languagelevel support for some features of parallel programming the goal is to use all cores or processors of a computer to improve performance to reach this goal tasks have to be distributed among several threads the net frameworks codice class offered a way to efficiently work with several threads the task parallel library tpl was introduced in net  to provide more features for parallel programming operators can be overloaded in oxygene using the codice syntax note that for operator overloading each operator has a name that has to be used in the operator overloading syntax because for example  would not be a valid method name in oxygene program structure oxygene does not use units like delphi does but uses netnamespaces to organize and group types a namespace can span multiple files and assemblies but one file can only contain types of one namespace this namespace is defined at the very top of the file oxygene files are separated into an interface and an implementation section which is the structure known from delphi the interface section follows the declaration of the namespace it contains the codiceclause which in oxygene imports types from other namespaces imported namespaces have to be in the project itself or in referenced assemblies unlike in c in oxygene alias names cannot be defined for namespaces only for single type names see below following the codiceclause a file contains type declarations like they are known from delphi as in c the mainmethod is the entry point for every program it can have a parameter codice for passing command line arguments to the program more types can be declared without repeating the codicekeyword the implementation of the declared methods is placed in the implementation section files are always ended with codice types as a net language oxygene uses the net type system there are value types like structs and reference types like arrays or classes although it does not introduce own predefined types oxygene offers more pascalish generic names for some of them so that for example the codice can be used as codice and codice codice codice codice codice codice join the family of pascaltypenames too the struct character of these types which is part of net is fully preserved as in all net languages types in oxygene have a visibility in oxygene the default visibility is codice which is equivalent to the codice visibility in c the other possible type visibility is codice the visibility can be set for every type defined classes interfaces records  an alias name can be defined for types which can be used locally or in other oxygene assemblies public type aliases wont be visible for other languages records records are what netstructs are called in oxygene they are declared just like classes but with the codice keyword as theyre just netstructs records can have fields methods and properties but do not have inheritance and cannot implement interfaces interfaces interfaces are very important concept in the net world the framework itself makes heavy use of them interfaces are the specification of a small set of methods properties and events a class has to implement when implementing the interface for example contains the interface codice specifies the codice method which is used to iterate over sequences interfaces are declared just like classes please notice that for properties the getter and setter are not explicitly specified delegates delegates define signatures for methods so that these methods can be passed in parameters eg callbacks or stored in variables etc theyre the typesafe netequivalent to function pointers theyre also used in events when assigning a method to a delegate one has to use the codice operator so the compiler knows that one doesnt want to call the method but just assign it oxygene can create anonymous delegates for example methods can be passed to the codice method of a control without declaring the delegate an anonymous delegate with the signature of the method codice will be created by the compiler oxygene supports polymorphic delegates which means that delegates which have parameters of descending types are assignment compatible assume two classes codice and codice then in the following code codice is assignment compatible to codice fields can be used to delegate the implementation of an interface if the type theyre of implements this interface in this example the compiler will create public methods and properties in codice which call the methods  properties of codice to implement the members of imyinterface this can be used to provide mixinlike functionality anonymous methods anonymous methods are implemented inside other methods they are not accessible outside of the method unless stored inside a delegate field anonymous methods can use the local variables of the method theyre implemented in and the fields of the class they belong to anonymous methods are especially useful when working with code that is supposed to be executed in a gui thread which is done in net by passing a method do the codice method codice in winforms codice in wpf anonymous methods can have parameters too both source codes use anonymous delegates property notification property notification is used mainly for data binding when the gui has to know when the value of a property changes the net framework provides the interfaces codice and codice in net  for this purpose these interfaces define events which have to be fired when a property is changed  was changed oxygene provides the codice modifier which can be used on properties if this modifier is used the compiler will add the interfaces to the class implement them and create code to raise the events when the property changes  was changed the modifier can be used on properties which have a setter method the code to raise the events will then be added to this method during compile time code examples generic method program output criticism some people would like to port their win delphi code to oxygene without making major changes this is not possible because while oxygene looks like delphi there are enough changes so as to make it incompatible for a simple recompile while the name gives it the appearance of another version of delphi that is not completely true on top of the language difference the visual component library framework is not available in delphi prism this makes porting even more difficult because classic delphi code relies heavily on the vcl