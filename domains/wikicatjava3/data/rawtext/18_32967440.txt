comparison of java and android api this article compares the java and android api and virtual machines while most android applications are written in javalike language there are some differences between the java api and the android api and android does not run java bytecode by a traditional java virtual machine but dalvik virtual machine is used in older versions of android but android runtime art is used in recent versions that compiles the same code that dalvik runs to elf executables containing machine code java bytecode in jarfiles is not executed by android devices instead java classes are compiled into a proprietary bytecode format and run on dalvik or compiled version of with newer art a specialized virtual machine vm designed specifically for android unlike java vms which are stack machines the dalvik vm is a registerbased architecture dalvik has some specific characteristics that differentiate it from other standard vms because the bytecode loaded by the dalvik virtual machine is not java bytecode and due to the specific way dalvik loads classes it is not possible to load libraries packages as jjarfiles a different procedure must be used to load android libraries in which the content of the underlying dex file must be copied in the application private internal storage area before it is loaded system properties as is the case for the java se class  the android class allows the retrieval of system properties however some mandatory properties defined with the java virtual machine have no meaning or a different meaning on android for example class library current versions of android use the latest java language and its libraries but not full gui frameworks not the apache harmony java implementation that older versions used java  source code that works in latest version of android can be made to work in older versions of android javalang package by default the default output stream and do not output anything and developers are encouraged to use the class which logs strings on the logcat tool this has changed at least from honeycomb and they now output to the log console as well graphics and widget library android does not use the abstract window toolkit nor the swing library user interface is built using view objects android uses a framework similar to swingbased around s rather than s however android widgets are not javabeans the android application must be provided to the widget at creation look and feel android widget library does not support a pluggable look and feel architecture the look and feel of android widgets must be embedded in the widgets themselves there is however a limited capability to set styles and themes for an application layout manager contrary to swing where layout managers can be applied to any container widget android layout behavior is encoded in the containers javabeans package android includes only a small subset of the javabeans package  and related classes