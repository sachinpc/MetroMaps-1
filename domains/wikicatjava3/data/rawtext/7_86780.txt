pike programming language pike is an interpreted generalpurpose highlevel crossplatform dynamic programming language with a syntax similar to that of c unlike many other dynamic languages pike is both statically and dynamically typed and requires explicit type definitions it features a flexible type system that allows the rapid development and flexible code of dynamically typed languages while still providing some of the benefits of a statically typed language pike features garbage collection advanced data types and firstclass anonymous functions with support for many programming paradigms including objectoriented functional and imperative programming pike is free software released under the gpl lgpl and mpl licenses history pike has its roots in lpc which was a language developed for muds programmers at lysator in linkping sweden most notably fredrik hbinette and per hedbor separated the language and virtual machine from the rest of the mud driver and used it as a rapid prototyping language for various applications calling it lpc lpcs license did not allow use for commercial purposes and so a new gpl implementation was written in  called lpc micro lpc in  lpc was renamed to pike in order to provide a more commercially viable name although the name of the company has changed over the years the company now known as roxen internet software employed many pike developers and provided resources for pikes development roxen is also the name of a web server developed by the company in pike in  the programming environment laboratory at linkping university took over maintenance of pike from roxen several pike programmers have found their way to the linkping office of opera software where the language plays a central role in the servergateway parts of the opera mini application syntax highlights hello world int main  the syntax above requires some explanation those who are familiar with c or c should pick it up right away data types the following list shows all the standard data types that pike provides advanced data types such as sequences queues heaps stacks etc are available in the adt module which is included with pike basic data types container types other types pike requires explicit type definitions for all variables it uses this information to report type errors at compile time the following code will cause a compile error because the value of the variable number must be an integer but the code is attempting to assign floating point and string values to it int number  integer variable it only accepts integers number     is a floating point value error number     is a string not the integer value  error that kind of behavior is traditionally considered restrictive and limiting by proponents of dynamically typed languages however unlike c c and java pike uses a more flexible type systemspecifically a system of tagged unions the system allows programmers to declare variables that may contain values of multiple types something impossible in most of the cfamily languages without straying from the bounds of safe usage the following demonstrates a variable that can hold either an integer or a floating point number intfloat number  integer or float variable number    this is legal number    this is also legal because a variable can be declared as holding many different data types functions are provided to determine what type of data is currently stored these functions are all of the form typenamep as in intp floatp stringp etc intfloat number number   intpnumber  returns true because number holds an int floatpnumber  returns false number   floatpnumber  returns true because number now holds a float additionally there is a special mixed data type that definition allows a variable to hold any kind of data type mixed anything anything    anything is now the integer value  anything    anything is now the float value  anything    anything is now the string value  in order to convert a value from one type to another pike can use an explicit cast mixed anything anything  int  anything is now the integer value  anything  stringanything  anything is now the string value 