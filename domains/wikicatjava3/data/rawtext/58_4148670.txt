mule software mule is a lightweight enterprise service bus esb and integration framework the platform is javabased but can broker interactions between other platforms such as net using web services or sockets the architecture is a scalable distributable object broker that can handle interactions across legacy systems inhouse applications and almost all modern transports and protocols mule has an integration engine but the community edition lacks the support for advanced management interfaces mulesoft offers an enterprise edition of mule that provides a management console a service registry and higher availability supporting tools management tools cloudhub cloudhub is mulesofts cloudbased integration platform for integration to connect apps data and devices with integration connectors like one to twitter etc platform as a service ipaas mule esb and messaging amqp support amqp advanced message queuing protocol support is based on the rabbitmq java client and supports amqp up to  jms support jms java message service is a message oriented middleware api provided by oracle for communication between different components of an application this provides reliable loosely coupled and asynchronous messagebased communication supporting two models pointtopoint queues and publishsubscribe topics mule supports all functionality of jms specification versions b and  and provides an endpoint for the same wmq support wmq or websphere mq is ibm message oriented middleware product for communication of distributed system mule also provides support for wmq called mule wmq transport which works with   and  versions and provides endpoint for the same universal message object the universal message object application programming interface is part of highlevel design methodologies used to describe and define aspects of a data object used in conjunction with the mule esb the idea is to by staged events wrap the work into sensible bundles and process it in stages that can conform to models of transactionbased processing that are useful in time or missioncritical applications such as financial transactions where subsequent successful outcomes are required to permit the desired outcome but if the user fails to supply needed data or a runtime error occurs then the model will allow for stateful backoff meaning no harm done the user may then complete a transaction without losing too much work or canceling an entire transaction universal message object defines the parameters that the program will use for internal messaging communications and its components to set and get variables based upon the users needs and the programs functionality