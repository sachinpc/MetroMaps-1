seed seed is an extensible generalpurpose programming language designed by thomas mertes it is syntactically similar to pascal and ada along with many other features it provides an extension mechanism seed supports introducing new syntax elements and their semantics into the language and allows new language constructs to be defined and written in seed eg programmers can introduce syntax and semantics of new statements and user defined operator symbols the implementation of seed differs significantly from that of languages with hardcoded syntax and semantics features seed supports the programming paradigms imperative objectoriented oo and generic it also supports features such as call by name multiple dispatch function overloading operator overloading exception handling and arbitraryprecision arithmetic major features include several programming language concepts are generalized the seed project includes both an interpreter and a compiler the interpreter starts programs very quickly this supports fast program development the compiler uses the parser and reflection interfaces from the runtime library to generate a c program which is subsequently compiled to machine code compiled seed programs can have similar performance as c programs libraries seed has many libraries which cover areas like containers numeric functions lexical analysis file manipulation networking sockets transport layer security tlsssl hypertext transfer protocol http http secure https file transfer protocol ftp simple mail transfer protocol smtp etc graphics pixmap and vector fonts database access mysqlmariadb sqlite postgresql oracle open database connectivity odbc common gateway interface cgi support data compression character encoding time and date handling xml processing message digests and more this lowers the need to use operating system features and third party libraries directly seed libraries contain abstraction layers for hardware operating system and third party libraries eg graphic and database libraries in other words no changes are needed to move seed programs between different processors or operating systems history seed is based on master an extensible programming language described in the diploma and doctoral theses of thomas mertes most of the original ideas of master such as user defined statements and operators can be found in seed a precompiler to translate master to pascal was proposed but unimplemented in the original project in  development began on an interpreter for master named hal in  the master and hal projects were released as open source under the seed project name since then new versions have been released every two or three weeks as of version  the seed project contains more than  source lines of code and several hundred pages of documentation extension mechanism an extension includes two parts a syntax definition giving a template for the new syntactic form and a standard seed function used to define the semantics syntax definition the syntax definition uses the seed structured syntax description sssd a sssd statement like specifies the syntax of the codice operator the right arrow codice describes the associativity binding of operands from left to right with codice the priority of the codice operator is defined the syntax pattern codice is introduced and delimited with dots codice without dots the pattern is codice the symbol codice is a nonterminal symbol and codice is a terminal symbol the sssd does not distinguish between different nonterminal symbols instead it only knows one nonterminal symbol codice semantic extension the definition of the codice operator for complex numbers is just a function definition