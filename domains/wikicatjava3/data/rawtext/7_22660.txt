occam programming language occam is a concurrent programming language that builds on the communicating sequential processes csp process algebra and shares many of its features it is named after william of ockham of occams razor fame occam is an imperative procedural language such as pascal it was developed by david may and others at inmos advised by tony hoare as the native programming language for their transputer microprocessors but implementations for other platforms are available the most widely known version is occam  its programming manual was written by steven ericssonzenith and others at inmos overview in the following examples indentation and formatting are critical for parsing the code expressions are terminated by the end of the line lists of expressions need to be on the same level of indentation this feature named the offside rule is also found in other languages such as haskell and python communication between processes work through named channels one process outputs data to a channel via  while another one inputs data with  input and output can not proceed until the other end is ready to accept or offer data in the not proceeding case it is often said that the process blocks on the channel however the program will neither spin nor poll therefore terms like wait hang or yield may also convey the behaviour  also in the light of the fact that it will not block other independent processes from running examples c is a variable seq introduces a list of expressions that are evaluated sequentially this is not implicit as it is in most other programming languages example par begins a list of expressions that may be evaluated concurrently example alt specifies a list of guarded commands the guards are a combination of a boolean condition and an input expression both optional each guard for which the condition is true and the input channel is ready is successful one of the successful alternatives is selected for execution example this will read data from channels c or c whichever is ready and pass it into a merged channel if countn reaches  reads from the corresponding channel will be disabled a request on the status channel is answered by outputting the counts to out language revisions occam  occam  released  was a preliminary version of the language which borrowed from david mays work on epl and tony hoares csp this supported only the var data type which was an integral type corresponding to the native word length of the target architecture and arrays of only one dimension occam  occam  is an extension produced by inmos ltd in  that adds floatingpoint support functions multidimensional arrays and more data types such as varying sizes of integers int int and bytes with this revision occam became a language capable of expressing useful programs whereas occam  was more suited to examining algorithms and exploring the new language however the occam  compiler was written in occam  so there is an existence proof that reasonably sized useful programs could be written in occam  despite its limitations occam  occam  was the last of the series of occam language developments contributed by inmos defined in  it was influenced by an earlier proposal for an occam  language also referred to as occam during its early development created by geoff barrett at inmos in the early s a revised reference manual describing occam  was distributed for community comment but the language was never fully implemented in a compiler occam  introduced several new features to occam  including for a full list of the changes see appendix p of the inmos occam  reference manual occam occam is the common name for the occam variant implemented by later versions of kroc the kent retargetable occam compiler the addition of the symbol  pi to the occam name is an allusion to the fact that kroc occam includes several ideas inspired by the picalculus it contains a significant number of extensions to the occam  compiler for example