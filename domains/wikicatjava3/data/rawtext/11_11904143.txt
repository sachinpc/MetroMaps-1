xmtc xmtc for explicit multithreading c is a sharedmemory parallel programming language it is an extension of the c programming language which strives to enable easy pramlike programming based on the explicit multithreading paradigm it is developed as part of the xmt pramonchip vision by a research team at the university of maryland college park led by dr uzi vishkin the philosophy of xmtc and the whole xmt project is that parallel programming is a hard intellectual task and the approach of building a hardware system first and then figuring out how to program them has not had much success for that reason a robust algorithmic theory and a reasonably easy hardware abstraction should be the specifications that guide how to build a new parallel architecture and programming language for parallel algorithms the algorithmic theory that has the largest body of literature is called pram parallel random access machine this is not a coincidence since pram is a natural way in which to think algorithmically in parallel in the early s the pram model was deemed unrealistic because the hardware abstraction it was based on could not be implemented because of low interchip bandwidth and high latency now that multiple processors can be put on a single chip these limitations are no longer present the xmt architecture takes advantage of this excess onchip real estate to implement a pram abstraction the xmtc language is a modest extension of c and a work in progress the basic premise is that the programmer is responsible for exposing all the available parallelism while this sounds simple and many earlier approaches share this ideal in practice if the programmer defines too large a number of parallel tasks and the tasks are short the program will perform very poorly the way around that is to combine short parallel tasks into a longer one which is usually the responsibility of the programmer in xmtc it is possible for the language to do that automatically lifting the burden from the programmer software release of xmtc pramlike programming allows experimenting with xmtc programming on standard computers