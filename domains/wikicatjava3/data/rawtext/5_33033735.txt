dart programming language dart is a generalpurpose programming language originally developed by google and later approved as a standard by ecma ecma it is used to build web server and mobile applications and for internet of things iot devices it is opensource software under a bsd license dart is a classbased single inheritance objectoriented language with cstyle syntax which can optionally transcompile into javascript it supports interfaces mixins abstract classes reified generics and optional typing history dart was unveiled at the goto conference in aarhus denmark october   the project was founded by lars bak and kasper lund ecma international has formed technical committee tc to work on standardizing dart and inasmuch as dart can be compiled to standard javascript it works effectively in any modern browser ecma international approved the dart language specification first edition in july  at its th general assembly and a second edition in december  usage there are four main ways to run dart code runtime modes dart programs run in one of two modes in checked mode which is not the default mode and must be turned on dynamic type assertions are enabled these type assertions can turn on if static types are provided in the code and can catch some errors when types do not match for example if a method is annotated to return a string but instead returns an integer the dynamic type assertion will catch this and throw an exception running in checked mode is recommended for development and testing dart programs run by default in production mode which runs with all dynamic type assertions turned off this is the default mode because it is the fastest way to run a dart program isolates to achieve concurrency dart uses isolates which are independent workers that do not share memory but instead use message passing this is similar to erlang actors every dart program uses at least one isolate which is the main isolate when compiled to javascript isolates are transformed into web workers snapshots snapshots are a core part of the dart vm snapshots are files which store objects and other runtime data dart programs can be compiled into snapshot files these files contain all of the program code and dependencies preparsed and ready to execute this allows fast startups the dart core libraries can be compiled into a snapshot file which allows fast loading of the libraries most standard distributions of the main dart vm have a prebuilt snapshot for the core libraries which is loaded at runtime dart is a very asynchronous language with this it uses isolates for concurrency since these are workers which pass messages it needs a way to serialize a message this is done using a snapshot which is generated from a given object and then this is transferred to another isolate for deserializing native mobile apps google is working on full dart stacks for native mobile app development on both android and ios compiling to javascript the first compiler to generate javascript from dart code was dartc but it was deprecated the second darttojavascript compiler was frog it was written in dart but never implemented the full semantics of the language  the third darttojavascript compiler is dartjs from google an evolution of earlier compilers it is written in dart and intended to implement the full dart language specification and semantics on march   the dart team posted an update on their blog addressing dart code compiled to javascript with the dartjs compiler stating that it now runs faster than handwritten javascript on chromes v javascript engine for the deltablue benchmark editors on november   google released dart editor an opensource program based on eclipse components for mac os x windows and linuxbased operating systems the editor supports syntax highlighting code completion javascript compiling running web and server dart applications and debugging on august   google announced the release of an eclipse plugin for dart development on april   google announced that the dart editor would be retired in favor of the jetbrains integrated development environment ide which is now the recommended ide for the language the dart plugin is available for intellij idea pycharm phpstorm and webstorm this plugin supports many features such as syntax highlighting code completion analysis refactoring debugging and more other plugins are available for editors like sublime text and atom dartpad the dart team created dartpad at the start of  to provide an easier way to start using dart it is a fully online editor from which users can experiment with dart application programming interfaces apis and run dart code it provides syntax highlighting code analysis code completion documentation and html and css editing simd on the web in  john mccutchan announced that he had created a performant interface to single instruction multiple data simd instruction sets for dart bringing the benefits of simd to web programs for the first time for users running googles experimental dartium browser the interface consists of two types instances of these types are immutable and in optimized code are mapped directly to simd registers operations expressed in dart typically are compiled into one instruction with no overhead this is similar to c and c intrinsics benchmarks for  matrix multiplication d vertex transformation and mandelbrot set visualization show near  speedup compared to scalar code written in dart example a hello world example main  a function to calculate the nth fibonacci number int fibint n  n    fibn    fibn     void main  a simple class  import the math library to get access to the sqrt function import dartmath as math  create a class for point class point   all dart programs start with main void main  influences from other languages dart is a descendant of the algol language family alongside c java c javascript and others the method cascade syntax which provides a syntactic shortcut for invoking several methods one after another on the same object is adopted from smalltalk darts mixins were influenced by strongtalk and ruby dart makes use of isolates as a concurrency and security unit when structuring applications the isolate concept builds upon the actor model which is most famously implemented in erlang the mirror api for performing controlled and secure reflection was first proposed in a paper by gilad bracha who is a member of the dart team and david ungar and originally implemented in self criticism dart initially had a mixed reception and the dart initiative has been criticized by some for fragmenting the web due to the original plans to include a dart vm in chrome those plans were dropped to focus instead on compiling dart to javascript