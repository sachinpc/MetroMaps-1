javaserver faces javaserver faces jsf is a java specification for building componentbased user interfaces for web applications it was formalized as a standard through the java community process and is part of the java platform enterprise edition jsf  uses facelets as its default templating system other view technologies such as xul or plain java can also be employed in contrast jsf x uses javaserver pages jsp as its default templating system history in  the original java specification request jsr for the technology that ultimately became javaserver faces proposed developing a package with the name codice by june  javaworld would report on amy fowlers teams design of the javaserver faces api aka moonwalk  an application framework for creating webbased user interfaces how it works based on a componentdriven ui designmodel javaserver faces uses xml files called view templates or facelets views the facesservlet processes requests loads the appropriate view template builds a component tree processes events and renders the response typically in the html language to the client the state of ui components and other objects of scope interest is saved at the end of each request in a process called statesaving note transient true and restored upon next creation of that view either the client or the server side can save objects and states jsf and ajax jsf is often used together with ajax a rich internet application technology ajax is a combination of technologies that make it possible to create rich user interfaces the user interface components in mojarra the jsf reference implementation and apache myfaces were originally developed for html only and ajax had to be added via javascript this has changed however because jsf supports multiple output formats ajaxenabled components can easily be added to enrich jsfbased user interfaces the jsf  specification provides built in support for ajax by standardizing the ajax request lifecycle and providing simple development interfaces to ajax events allowing any event triggered by the client to go through proper validation conversion and finally method invocation before returning the result to the browser via an xml dom update jsf  includes support for graceful degradation when javascript is disabled in the browser ajaxenabled components and frameworks the following companies and projects offer ajaxbased jsf frameworks or component libraries latest developments facelets which was designed specifically for javaserver faces was adopted as the official view technology for jsf  this eliminates the lifecycle conflicts that existed with jsp forcing workarounds by java developers facelets allows easy componenttag creation using xml markup instead of java code the chief complaint against jsf x the new jsf developments also provide wide accessibility to java  annotations such as managedbean managedproperty and facescomponent which removes the need for facesconfigxml in all cases except framework extension navigation has been simplified removing the need for facesconfigxml navigation cases page transitions can be invoked simply by passing the name of the desired viewfacelet addition of partial state saving and dom updates are part of the built in standardized ajax support the latest jsf release has builtin support for handling resources like images css and javascript allowing artifacts to be included with component libraries separated into jar files or simply colocated into a consistent place within the webapplication includes logical naming and versioning of resources jsf  also includes a number of other changes like adding support for events separate development staging and production modes similar to railsenv in ruby on rails and significantly expanding the standard set of components criticism in their january  technology radar publication thoughtworks wrote rebuttal to criticisms in february  cagatay civici primefaces lead wrote an informative post entitled jsf is not what youve been told anymore in the post the previous criticisms are refuted explaining that improvements in jsf over the years offer many features that embrace modern web development providing the option to write your own javascript html and css also regarding state cagatay wrote