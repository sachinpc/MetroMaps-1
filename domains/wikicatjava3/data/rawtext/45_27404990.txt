haskell programming language haskell is a standardized generalpurpose purely functional programming language with nonstrict semantics and strong static typing it is named after logician haskell curry the latest standard of haskell is haskell   a group is working on the next version haskell  haskell features a type system with type inference and lazy evaluation type classes first appeared in the haskell programming language its main implementation is the glasgow haskell compiler haskell is based on the semantics but not the syntax of the language miranda which served to focus the efforts of the initial haskell working group haskell is used widely in academia and also used in industry history following the release of miranda by research software ltd in  interest in lazy functional languages grew by  more than a dozen nonstrict purely functional programming languages existed of these miranda was used most widely but it was proprietary software at the conference on functional programming languages and computer architecture fpca  in portland oregon a meeting was held during which participants formed a strong consensus that a committee should be formed to define an open standard for such languages the committees purpose was to consolidate the existing functional languages into a common one that would serve as a basis for future research in functionallanguage design haskell  to  the first version of haskell haskell  was defined in  the committees efforts resulted in a series of language definitions      haskell  in late  the series culminated in haskell  intended to specify a stable minimal portable version of the language and an accompanying standard library for teaching and as a base for future extensions the committee expressly welcomed creating extensions and variants of haskell  via adding and incorporating experimental features in february  the haskell  language standard was originally published as the haskell  report in january  a revised version was published as haskell  language and libraries the revised report the language continues to evolve rapidly with the glasgow haskell compiler ghc implementation representing the current de facto standard haskell  in early  the process of defining a successor to the haskell  standard informally named haskell prime began this was intended to be an ongoing incremental process to revise the language definition producing a new revision up to once per year the first revision named haskell  was announced in november  and published in july  haskell  adds the foreign function interface ffi to haskell allowing for bindings to other programming languages fixes some syntax issues changes in the formal grammar and bans socalled npluskpatterns that is definitions of the form codice are no longer allowed it introduces the languagepragmasyntaxextension which allows for code designating a haskell source as haskell  or requiring certain extensions to the haskell language the names of the extensions introduced in haskell  are doandifthenelse hierarchicalmodules emptydatadeclarations fixityresolution foreignfunctioninterface linecommentsyntax patternguards relaxeddependencyanalysis languagepragma and nonpluskpatterns features haskell features lazy evaluation pattern matching list comprehension type classes and type polymorphism it is a purely functional language which means that in general functions in haskell have no side effects a distinct construct exists to represent side effects orthogonal to the type of functions a pure function may return a side effect which is subsequently executed modeling the impure functions of other languages haskell has a strong static type system based on hindleymilner type inference haskells principal innovation in this area is to add type classes originally conceived as a principled way to add overloading to the language but since finding many more uses the construct which represents side effects is an example of a monad monads are a general framework which can model different kinds of computation including error handling nondeterminism parsing and software transactional memory monads are defined as ordinary datatypes but haskell provides some syntactic sugar for their use haskell has an open published specification and multiple implementations exist its main implementation the glasgow haskell compiler ghc is both an interpreter and nativecode compiler that runs on most platforms ghc is noted for its highperformance implementation of concurrency and parallelism and for having a rich type system incorporating recent innovations such as generalized algebraic data types and type families a growing active community exists around the language and more than  thirdparty opensource libraries and tools are available in the online package repository hackage code examples the following is a hello world program written in haskell here is the factorial function in haskell defined in a few different ways an efficient implementation of the fibonacci numbers as an infinite list is this the int type refers to a machinesized integer used as a list subscript with the  operator while integer is an arbitraryprecision integer for example using integer the factorial code above easily computes codice as a huge number of  digits with no loss of precision this is an implementation of an algorithm similar to quick sort over lists in which the first element is taken as the pivot implementations all listed implementations are distributed under open source licenses implementations which comply fully or very nearly with the haskell  standard include implementations no longer being actively maintained include implementations not fully haskell  compliant and using a variant haskell language include applications darcs is a revision control system written in haskell with several innovative features such as more precise control of the patches to be applied cabal is a tool for building and packaging haskell libraries and programs linspire gnulinux chose haskell for system tools development xmonad is a window manager for the x window system written fully in haskell ghc is also often a testbed for advanced functional programming features and optimizations in other programming languages pandoc is a tool to convert one markup format into another web haskell web frameworks exist including criticism janwillem maessen in  and simon peyton jones in  discussed problems associated with lazy evaluation while also acknowledging the theoretical motives for it in addition to purely practical considerations such as improved performance they note that in addition to adding some performance overhead lazy evaluation makes it more difficult for programmers to reason about the performance of their code particularly its space use bastiaan heeren daan leijen and arjan van ijzendoorn in  also observed some stumbling blocks for haskell learners the subtle syntax and sophisticated type system of haskell are a double edged sword  highly appreciated by experienced programmers but also a source of frustration among beginners since the generality of haskell often leads to cryptic error messages to address these researchers from utrecht university developed an advanced interpreter called helium which improved the userfriendliness of error messages by limiting the generality of some haskell features and in particular removing support for type classes ben lippmeier designed disciple as a strictbydefault lazy by explicit annotation dialect of haskell with a typeandeffect system to address haskells difficulties in reasoning about lazy evaluation and in using traditional data structures such as mutable arrays he argues p that destructive update furnishes the programmer with two important and powerful tools a set of efficient arraylike data structures for managing collections of objects and  the ability to broadcast a new value to all parts of a program with minimal burden on the programmer robert harper one of the authors of standard ml has given his reasons for not using haskell to teach introductory programming among these are the difficulty of reasoning about resource use with nonstrict evaluation that lazy evaluation complicates the definition of data types and inductive reasoning and the inferiority of haskells old class system compared to mls module system related languages clean is a close slightly older relative of haskell its biggest deviation from haskell is in the use of uniqueness types instead of monads for io and sideeffects a series of languages inspired by haskell but with different type systems have been developed including java virtual machine jvm based other related languages include haskell has served as a testbed for many new ideas in language design there have been many haskell variants produced exploring new language ideas including conferences and workshops the haskell community meets regularly for research and development activities the main events are since  a series of organized hackathons has occurred the hac series aimed at improving the programming language tools and libraries since  haskell users groups are growing in number