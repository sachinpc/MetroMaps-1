c c pronounced see minus minus is a clike programming language its creators functional programming researchers simon peyton jones and norman ramsey designed it to be generated mainly by compilers for very highlevel languages rather than written by human programmers unlike many other intermediate languages its representation is plain ascii text not bytecode or another binary format design c is a portable assembly language designed to ease the task of implementing a compiler which produces high quality machine code this is done by having the compiler generate c code delegating the harder work of lowlevel code generation and optimisation to a c compiler work on c began in the late s since writing a custom code generator is a challenge in itself and the compiler back ends available to researchers at that time were complex and poorly documented several projects had written compilers which generated c code for instance the original modula compiler however c is a poor choice for functional languages it does not support tail recursion accurate garbage collection or efficient exception handling c is a simpler tightlydefined alternative to c which does support all of these things its most innovative feature is a runtime interface which allows writing of portable garbage collectors exception handling systems and other runtime features which work with any c compiler the languages syntax borrows heavily from c it omits or changes standard c features such as variadic functions pointer syntax and aspects of cs type system because they hamper certain essential features of c and the ease with which codegeneration tools can produce it the name of the language is an injoke indicating that c is a reduced form of c in the same way that c is basically an expanded form of c in clike languages  and  are operators meaning decrement and increment c is a target platform for the glasgow haskell compiler some of cs developers including simon peyton jones joo dias and norman ramsey work or have worked on the glasgow haskell compiler the ghc codebase and development are based at microsoft research in cambridge though it is not a microsoft project type system the c type system is deliberately designed to reflect constraints imposed by hardware rather than conventions imposed by higherlevel languages in c a value stored in a register or memory may have only one type bit vector however bit vector is a polymorphic type and may come in several widths eg bits bits or bits in addition to the bitvector type c also provides a boolean type bool which can be computed by expressions and used for control flow but cannot be stored in a register or in memory as in an assembly language any higher type discipline such as distinctions between signed unsigned float and pointer is imposed by the c operators or other syntactic constructs in the language