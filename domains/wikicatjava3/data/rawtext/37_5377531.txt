grails framework grails is an open source web application framework that uses the apache groovy programming language which is in turn based on the java platform it is intended to be a highproductivity framework by following the coding by convention paradigm providing a standalone development environment and hiding much of the configuration detail from the developer grails was previously known as groovy on rails in march  that name was dropped in response to a request by david heinemeier hansson founder of the ruby on rails framework work began in july  with the  release on march   and the  release announced on february   gone  the groovy grails company  was acquired by springsource in november  and it was later acquired by vmware on april   oci object computing inc announced that graeme rocher grails cofounder and project lead and jeff brown principal software engineer and senior member of grails core team have joined oci to lead its grails product team oci is now the official sponsor and has taken over funding for the grails project the grails core team retains full autonomy as to how the project will be developed and advanced overview grails was developed to address a number of goals high productivity grails has three properties that differentiate it from traditional java web frameworks no xml configuration creating web applications in java traditionally involves configuring environments and frameworks at the start and during development this configuration is very often externalized in xml files to ease configuration and avoid embedding configuration in application code xml was initially welcomed as it provided greater consistency to configure applications however in recent years it has become apparent that although xml is great for configuration it can be tedious to set up an environment this may reduce productivity as developers spend time understanding and maintaining framework configuration as the application grows adding or changing functionality in applications that use xml configuration adds an extra step to the change process which slows down productivity and may diminish the agility of the entire process grails removes the need to add configuration in xml files instead the framework uses a set of rules or conventions while inspecting the code of grailsbased applications for example a class name that ends with codice for example codice is considered a web controller readytouse development environment when using traditional java web toolkits its up to developers to assemble development units which can be tedious grails provides a development environment that includes a web server to get developers started right away all required libraries are part of the grails distribution and grails prepares the java web environment for deployment automatically functionality available through mixins grails features dynamic methods on several classes through mixins a mixin is a method that is added to a class dynamically as if the functionality had been compiled into the program these dynamic methods allow developers to perform operations without having to implement interfaces or extend base classes grails provides dynamic methods based on the type of class for example domain classes have methods to automate persistence operations like save delete and find web framework the grails web framework has been designed according to the mvc paradigm controllers grails uses controllers to implement the behavior of web pages below is an example of a controller the controller above has a codice action which returns a model containing all books in the database to create this controller the codice command is used as shown below this command creates a class in the codice directory of the grails project creating the controller class is sufficient to have it recognized by grails the codice action maps to codice in development mode views grails supports jsp and gsp the example below shows a view written in gsp which lists the books in the model prepared by the controller above this view should be saved as codice of the grails project this location maps to the codice and codice action placing the file in this location is sufficient to have it recognized by grails there is also a gsp tag reference available dynamic tag libraries grails provides a large number of tag libraries out of the box however you can also create and reuse your own tag libraries easily the codice tag library above formats a object to a  this tag library should be added to the codice file or a file ending with codice in the codice directory below is a snippet from a gsp file which uses the codice tag library to use a dynamic tag library in a gsp no import tags have to be used dynamic tag libraries can also be used in jsp files although this requires a little more work persistence model the domain model in grails is persisted to the database using gorm grails object relational mapping domain classes are saved in the codice directory and can be created using the codice command as shown below this command requests the domain class name and creates the appropriate file below the code of the codice class is shown creating this class is all that is required to have it managed for persistence by grails with grails  gorm has been improved and eg adds the properties id and version itself to the domain class if they are not present the id property is used as the primary key of the corresponding table the version property is used for optimistic locking methods when a class is defined as a domain class that is one managed by gorm methods are dynamically added to aid in persisting the classs instances dynamic instance methods the codice method saves an object to the database the codice method deletes an object from the database the codice method refreshes the state of an object from the database the codice method retrieves the objects identity assigned from the database dynamic static class methods the codice method returns the number of records in the database for a given class the codice method returns true if an object exists in the database with a given identifier the codice method returns the first object from the database based on an object query statement note that the query syntax is hibernate hql the codice method returns all objects existing in the database the codice method can also take an object query statement for returning a list of objects the codice methods return the first object from the database which matches a specific pattern also the codice methods return a list of objects from the database which match a specific pattern the codice methods return the first object from the database which matches a set of named parameters scaffolding grails supports scaffolding to support crud operations create read update delete any domain class can be scaffolded by creating a scaffolding controller as shown below by creating this class you can perform crud operations on codice this works because the bookcontroller follows the same naming convention as the book domain class to scaffold a specific domain class we could reference the class directly in the scaffold property currently grails does not provide scaffolding for associations legacy database models the persistence mechanism in gorm is implemented via hibernate as such legacy databases may be mapped to gorm classes using standard hibernate mapping files creating a grails project download and installation guidelines for grails are available on the grails web site grails provides support scripts to create and execute projects as follows grails createapp this command will request the name of the project and creates a project directory with the same name further codice commands can be issued in this directory to create the classes and web pages of the application the command codice will run the application on a builtin web server the application can be accessed at the url codice by default the context name is the same as the application name used when the project was created target audience the target audience for grails is integration with the java platform grails is built on top of and is part of the java platform meaning that it is very easy to integrate with java libraries frameworks and existing code bases grails offers transparent integration of classes which are mapped with the hibernate orm framework this means existing applications which use hibernate can use grails without recompiling the code or reconfiguring the hibernate classes while using the dynamic persistence methods discussed above one consequence of this is that scaffolding can be configured for java classes mapped with hibernate another consequence is that the capabilities of the grails web framework are fully available for these classes and the applications which use them grails also makes use of the spring inversion of control framework grails is actually a spring mvc application under the hood the spring framework can be used to provision additional spring beans and introduce them into the context of the application the sitemesh framework is used to manage the presentation layer simplifying the development of pages via a robust templating system grails applications are packaged as war artifacts that can be deployed to any servlet container or java ee application servers