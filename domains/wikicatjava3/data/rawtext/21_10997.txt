freenet freenet is a peertopeer platform for censorshipresistant communication it uses a decentralized distributed data store to keep and deliver information and has a suite of free software for publishing and communicating on the web without fear of censorshiptaylor ian j from pp to web services and grids peers in a clientserver world london springer  both freenet and some of its associated tools were originally designed by ian clarke who defined freenets goal as providing freedom of speech on the internet with strong anonymity protection the distributed data store of freenet is used by many thirdparty programs and plugins to provide microblogging and media sharing anonymous and decentralised version tracking blogging a generic web of trust for decentralized spam resistance shoeshop for using freenet over sneakernet and many more history the origin of freenet can be traced to ian clarkes student project at the university of edinburgh which he completed as a graduation requirement in the summer of  ian clarkes resulting unpublished report a distributed decentralized information storage and retrieval system  provided foundation for the seminal paper written in collaboration with other researchers freenet a distributed anonymous information storage and retrieval system  according to citeseer it became one of the most frequently cited computer science articles in  researchers suggested that freenet can provide anonymity on the internet by storing small encrypted snippets of content distributed on the computers of its users and connecting only through intermediate computers which pass on requests for content and sending them back without knowing the contents of the full file similar to how routers on the internet route packets without knowing anything about filesexcept freenet has caching a layer of strong encryption and no reliance on centralized structures this allows users to publish anonymously or retrieve various kinds of information freenet has been under continuous development since  freenet  released on  may  is a major rewrite incorporating a number of fundamental changes the most fundamental change is support for darknet operation version  offered two modes of operation a mode in which it connects only to friends and an opennetmode in which it connects to any other freenet user both modes can be run simultaneously when a user switches to pure darknet operation freenet becomes very difficult to detect from the outside the transport layer created for the darknet mode allows communication over restricted routes as commonly found in mesh networks as long as these connections follow a smallworld structure other modifications include switching from tcp to udp which allows udp hole punching along with faster transmission of messages between peers in the network freenet  released on  june  offers a variety of improvements over  these include reduced memory usage faster insert and retrieval of content significant improvements to the fproxy web interface used for browsing freesites and a large number of smaller bugfixes performance enhancements and usability improvements version  also shipped with a new version of the windows installer as of build  released on  july  features that have been written include significant security improvements against both attackers acting on the network and physical seizure of the computer running the node as of build  released on  july  the freenet core stopped using the dbo database and laid the foundation for an efficient interface to the web of trust plugin which provides spam resistance freenet has always been free software but until  it required users to install java this problem was solved by making freenet compatible with openjdk a free and open source implementation of the java platform on  february  freenet received the sumaaward for protection against total surveillance features and user interface of freenet freenet is different from most other peertopeer applications both in how users interact with it and in the security it offers it separates the underlying network structure and protocol from how users interact with the network as a result there are a variety of ways to access content on the freenet network the simplest is via fproxy which is integrated with the node software and provides a web interface to content on the network using fproxy a user can browse freesites websites that use normal html and related tools but whose content is stored within freenet rather than on a traditional web server the web interface is also used for most configuration and node management tasks through the use of separate applications or plugins loaded into the node software users can interact with the network in other ways such as forums similar to web forums or usenet or interfaces more similar to traditional pp filesharing interfaces while freenet provides an http interface for browsing freesites it is not a proxy for the world wide web freenet can only be used to access content that has been previously inserted into the freenet network in this way it is more similar to tors hidden services than to anonymous proxy software like tors proxy freenets focus lies on free speech and anonymity because of that freenet acts differently at certain points that are directly or indirectly related to the anonymity part freenet attempts to protect the anonymity of both people inserting data into the network uploading and those retrieving data from the network downloading unlike file sharing systems there is no need for the uploader to remain on the network after uploading a file or group of files instead during the upload process the files are broken into chunks and stored on a variety of other computers on the network when downloading those chunks are found and reassembled every node on the freenet network contributes storage space to hold files and bandwidth that it uses to route requests from its peers as a direct result of the anonymity requirements the node requesting content does not normally connect directly to the node that has it instead the request is routed across several intermediaries none of which know which node made the request or which one had it as a result the total bandwidth required by the network to transfer a file is higher than in other systems which can result in slower transfers especially for unpopular content since version  freenet offers two different levels of security opennet and darknet with opennet users connect to arbitrary other users with darknet users connect only to friends with whom they previously exchanged public keys named nodereferences both modes can be used together content freenets founders argue that true freedom of speech comes only with true anonymity and that the beneficial uses of freenet outweigh its negative uses their view is that free speech in itself is not in contradiction with any other consideration  the information is not the crime freenet attempts to remove the possibility of any group imposing its beliefs or values on any data although many states censor communications to different extents they all share one commonality in that a body must decide what information to censor and what information to allow what may be acceptable to one group of people may be considered offensive or even dangerous to another in essence the purpose of freenet is to ensure that no one is allowed to decide what is acceptable reports of freenets use in authoritarian nations is difficult to track due to the very nature of freenets goals one group freenet china used to introduce the freenet software to chinese users starting from  and distribute it within china through emails and on disks after the groups website was blocked by the chinese authorities on the mainland it was reported that in  freenet china had several thousands dedicated users technical design the freenet file sharing network stores documents and allows them to be retrieved later by an associated key as is now possible with protocols such as http the network is designed to be highly survivable the system has no central servers and is not subject to the control of any one individual or organization including the designers of freenet information stored on freenet is distributed around the network and stored on several different nodes encryption of data and relaying of requests makes it difficult to determine who inserted content into freenet who requested that content or where the content was stored this protects the anonymity of participants and also makes it very difficult to censor specific content content is stored encrypted making it difficult for even the operator of a node to determine what is stored on that node this provides plausible deniability and in combination with the request relaying means that safe harbor laws that protect service providers may also protect freenet node operators when asked about the topic freenet developers defer to the eff discussion which says that not being able to filter anything is a safe choice distributed storage and caching of data unlike other pp networks freenet not only transmits data between nodes but actually stores them working as a huge distributed cache to achieve this each node allocates some amount of disk space to store data this is configurable by the node operator but is typically several gb or more files on freenet are typically split into multiple small blocks with duplicate blocks created to provide redundancy each block is handled independently meaning that a single file may have parts stored on many different nodes information flow in freenet is different from networks like emule or bittorrent in freenet two advantages of this design are high reliability and anonymity information remains available even if the publisher node goes offline and is anonymously spread over many hosting nodes as encrypted blocks not entire files the key disadvantage of the storage method is that no one node is responsible for any chunk of data if a piece of data is not retrieved for some time and a node keeps getting new data it will drop the old data sometime when its allocated disk space is fully used in this way freenet tends to forget data which is not retrieved regularly see also effect while users can insert data into the network there is no way to delete data due to freenets anonymous nature the original publishing node or owner of any piece of data is unknown the only way data can be removed is if users dont request it network typically a host computer on the network runs the software that acts as a node and it connects to other hosts running that same software to form a large distributed variablesize network of peer nodes some nodes are end user nodes from which documents are requested and presented to human users other nodes serve only to route data all nodes communicate with each other identically  there are no dedicated clients or servers it is not possible for a node to rate another node except by its capacity to insert and fetch data associated with a key this is unlike most other pp networks where node administrators can employ a ratio system where users have to share a certain amount of content before they can download freenet may also be considered a small world network the freenet protocol is intended to be used on a network of complex topology such as the internet internet protocol each node knows only about some number of other nodes that it can reach directly its conceptual neighbors but any node can be a neighbor to any other no hierarchy or other structure is intended each message is routed through the network by passing from neighbor to neighbor until it reaches its destination as each node passes a message to a neighbor it does not know whether the neighbor will forward the message to another node or is the final destination or original source of the message this is intended to protect the anonymity of users and publishers each node maintains a data store containing documents associated with keys and a routing table associating nodes with records of their performance in retrieving different keys protocol the freenet protocol uses a keybased routing protocol similar to distributed hash tables the routing algorithm changed significantly in version  prior to version  freenet used a heuristic routing algorithm where each node had no fixed location and routing was based on which node had served a key closest to the key being fetched in version  or which is estimated to serve it faster in version  in either case new connections were sometimes added to downstream nodes ie the node that answered the request when requests succeeded and old nodes were discarded in least recently used order or something close to it oskar sandbergs research during the development of version  shows that this path folding is critical and that a very simple routing algorithm will suffice provided there is path folding the disadvantage of this is that it is very easy for an attacker to find freenet nodes and connect to them because every node is continually attempting to find new connections in version  freenet supports both opennet similar to the old algorithms but simpler and darknet all node connections are set up manually so only your friends know your nodes ip address darknet is less convenient but much more secure against a distant attacker this change required major changes in the routing algorithm every node has a location which is a number between  and  when a key is requested first the node checks the local data store if its not found the keys hash is turned into another number in the same range and the request is routed to the node whose location is closest to the key this goes on until some number of hops is exceeded there are no more nodes to search or the data is found if the data is found it is cached on each node along the path so there is no one source node for a key and attempting to find where it is currently stored will result in it being cached more widely essentially the same process is used to insert a document into the network the data is routed according to the key until it runs out of hops and if no existing document is found with the same key it is stored on each node if older data is found the older data is propagated and returned to the originator and the insert collides but this only works if the locations are clustered in the right way freenet assumes that the darknet a subset of the global social network is a smallworld network and nodes constantly attempt to swap locations using the metropolishastings algorithm in order to minimize their distance to their neighbors if the network actually is a smallworld network freenet should find data reasonably quickly ideally on the order of formula hops however it does not guarantee that data will be found at all eventually either the document is found or the hop limit is exceeded the terminal node sends a reply that makes its way back to the originator along the route specified by the intermediate nodes records of pending requests the intermediate nodes may choose to cache the document along the way besides saving bandwidth this also makes documents harder to censor as there is no one source node effect initially the locations in darknet are distributed randomly this means that routing of requests is essentially random in opennet connections are established by a join request which provides an optimized network structure if the existing network is already optimized so the data in a newly started freenet will be distributed somewhat randomly as location swapping on darknet and path folding on opennet progress nodes which are close to one another will increasingly have close locations and nodes which are far away will have distant locations data with similar keys will be stored on the same node the result is that the network will selforganize into a distributed clustered structure where nodes tend to hold data items that are close together in key space there will probably be multiple such clusters throughout the network any given document being replicated numerous times depending on how much it is used this is a kind of spontaneous symmetry breaking in which an initially symmetric state all nodes being the same with random initial keys for each other leads to a highly asymmetric situation with nodes coming to specialize in data that has closely related keys there are forces which tend to cause clustering shared closeness data spreads throughout the network and forces that tend to break up clusters local caching of commonly used data these forces will be different depending on how often data is used so that seldomused data will tend to be on just a few nodes which specialize in providing that data and frequently used items will be spread widely throughout the network this automatic mirroring counteracts the times when web traffic becomes overloaded and due to a mature networks intelligent routing a network of size n should only require logn time to retrieve a document on average keys keys are hashes there is no notion of semantic closeness when speaking of key closeness therefore there will be no correlation between key closeness and similar popularity of data as there might be if keys did exhibit some semantic meaning thus avoiding bottlenecks caused by popular subjects there are two main varieties of keys in use on freenet the content hash key chk and the signed subspace key ssk a subtype of ssks is the updatable subspace key usk which adds versioning to allow secure updating of content a chk is a sha hash of a document after encryption which itself depends on the hash of the plaintext and thus a node can check that the document returned is correct by hashing it and checking the digest against the key this key contains the meat of the data on freenet it carries all the binary data building blocks for the content to be delivered to the client for reassembly and decryption the chk is unique by nature and provides tamperproof content a hostile node altering the data under a chk will immediately be detected by the next node or the client chks also reduce the redundancy of data since the same data will have the same chk and when multiple sites reference the same large files they can reference to the same chk ssks are based on publickey cryptography currently freenet uses the dsa algorithm documents inserted under ssks are signed by the inserter and this signature can be verified by every node to ensure that the data is not tampered with ssks can be used to establish a verifiable pseudonymous identity on freenet and allow for multiple documents to be inserted securely by a single person files inserted with an ssk are effectively immutable since inserting a second file with the same name can cause collisions usks resolve this by adding a version number to the keys which is also used for providing update notification for keys registered as bookmarks in the web interface another subtype of the ssk is the keyword signed key or ksk in which the key pair is generated in a standard way from a simple humanreadable string inserting a document using a ksk allows the document to be retrieved and decrypted if and only if the requester knows the humanreadable string this allows for more convenient but less secure uris for users to refer to scalability a network is said to be scalable if its performance does not deteriorate even if the network is very large the scalability of freenet is being evaluated but similar architectures have been shown to scale logarithmically this work indicates that freenet can find data in formula hops on a smallworld network which includes both opennet and darknet style freenet networks when ignoring the caching which could improve the scalability for popular content however this scalability is difficult to test without a very large network furthermore the security features inherent to freenet make detailed performance analysis including things as simple as determining the size of the network difficult to do accurately as of now the scalability of freenet has yet to be tested darknet versus opennet as of version  freenet supports both darknet and opennet connections opennet connections are made automatically by nodes with opennet enabled while darknet connections are manually established between users that know and trust each other freenet developers describe the trust needed as will not crack their freenet node opennet connections are easy to use but darknet connections are more secure against attackers on the network and can make it difficult for an attacker such as an oppressive government to even determine that a user is running freenet in the first place the core innovation in freenet  is to allow a globally scalable darknet capable at least in theory of supporting millions of users previous darknets such as waste have been limited to relatively small disconnected networks the scalability of freenet is made possible by the fact that human relationships tend to form smallworld networks a property that can be exploited to find short paths between any two people the work is based on a speech given at def con  by ian clarke and swedish mathematician oskar sandberg furthermore the routing algorithm is capable of routing over a mixture of opennet and darknet connections allowing people who have only a few friends using the network to get the performance from having sufficient connections while still receiving some of the security benefits of darknet connections this also means that small darknets where some users also have opennet connections are fully integrated into the whole freenet network allowing all users access to all content whether they run opennet darknet or a hybrid of the two except for darknet pockets connected only by a single hybrid node tools and applications unlike many other pp applications freenet does not provide comprehensive functionality itself freenet is modular and features an api called freenet client protocol fcp for other programs to use to implement services such as message boards file sharing or online chat vulnerabilities law enforcement agencies have claimed to successfully have infiltrated freenet opennet in order to deanonymize users but no technical details have been given to support these allegations notability freenet has had significant publicity in the mainstream press including articles in the new york times and coverage on cnn  minutes ii the bbc the guardian and elsewhere freenet received the sumaaward  for protection against total surveillance freesite a freesite is a site hosted on the freenet network because it contains only static content it cannot contain any active content like server side scripts or databases freesites are coded in html and support as many features as the browser viewing the page allows however there are some exceptions where the freenet software will remove parts of the code that may be used to reveal the identity of the person viewing the page making a page access something on the internet for example due to the much slower latency and bandwidth of the freenet network complex web technologies such as php and mysql are impossible to use making freesites appear very simplistic they are described by the community as being sstyle