vala programming language vala is an objectoriented programming language with a selfhosting compiler that generates c code and uses the gobject system vala is syntactically similar to c and includes several features such as anonymous functions signals properties generics assisted memory management exception handling type inference and foreach statements its developers jrg billeter and raffaele sandrini aim to bring these features to the plain c runtime with little overhead and no special runtime support by targeting the gobject object system rather than compiling directly to machine code or assembly language it compiles to a higher level intermediate language it sourcetosource compiles to c which is then compiled with a c compiler for a given platform such as gcc for memory management the gobject system provides reference counting in c a programmer must manually manage adding and removing references but in vala managing such reference counts is automated if a programmer uses the languages builtin reference types rather than plain pointers using functionality from native code libraries requires writing vapi files defining the library interfacing writing these interface definitions is welldocumented for c libraries especially when based on gobject however c libraries are not supported vapi files are provided for a large portion of the gnome platform including gtk vala was conceived by jrg billeter and was implemented by him and raffaele sandrini finishing a selfhosting compiler in may  code example a simple hello world vala program see also gtk hello world a more complex version showing some of valas objectoriented features an example using gtk to create a gui hello world program the last example needs an extra parameter to compile on gnome platforms this is the converted c code text editor  ide support there are various projects in various states of stability in order to provide syntaxhighlighting and other text editoride support for vala