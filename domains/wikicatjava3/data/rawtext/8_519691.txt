actionscript actionscript is an objectoriented programming language originally developed by macromedia inc since merged into adobe systems it is a derivation of hypertalk the scripting language for hypercard it is now a dialect of ecmascript meaning it is a superset of the syntax and semantics of the language more widely known as javascript though it originally arose as a sibling both being influenced by hypertalk actionscript is used primarily for the development of websites and software targeting the adobe flash player platform used on web pages in the form of embedded swf files actionscript  is also used with adobe air system for the development of desktop and mobile applications the language itself is opensource in that its specification is offered free of charge and both an open source compiler as part of apache flex and open source virtual machine mozilla tamarin are available actionscript is also used with scaleform gfx for the development of d video game user interfaces and huds overview actionscript was initially designed for controlling simple d vector animations made in adobe flash formerly macromedia flash initially focused on animation early versions of flash content offered few interactivity features and thus had very limited scripting capability later versions added functionality allowing for the creation of webbased games and rich internet applications with streaming media such as video and audio today actionscript is suitable for mobile development through adobe air use in some database applications and in basic robotics as with the make controller kit flash mx  introduced actionscript  a scripting language more suited to the development of flash applications it is often possible to save time by scripting something rather than animating it which usually also enables a higher level of flexibility when editing since the arrival of the flash player  alpha in  a newer version of actionscript has been released actionscript  this version of the language is intended to be compiled and run on a version of the actionscript virtual machine that has been itself completely rewritten from the ground up dubbed avm because of this code written in actionscript  is generally targeted for flash player  and higher and will not work in previous versions at the same time actionscript  executes up to  times faster than legacy actionscript code due to the justintime compiler enhancements flash libraries can be used with the xml capabilities of the browser to render rich content in the browser this technology is known as asynchronous flash and xml much like ajax adobe offers its flex product line to meet the demand for rich internet applications built on the flash runtime with behaviors and programming done in actionscript actionscript  forms the foundation of the flex  api history actionscript started as an objectoriented language for macromedias flash authoring tool now developed by adobe systems as adobe flash the first three versions of the flash authoring tool provided limited interactivity features early flash developers could attach a simple command called an action to a button or a frame the set of actions was basic navigation controls with commands such as play stop geturl and gotoandplay with the release of flash  in  this simple set of actions became a small scripting language new capabilities introduced for flash  included variables expressions operators if statements and loops although referred to internally as actionscript the flash  user manual and marketing documents continued to use the term actions to describe this set of commands timeline by actionscript version  actionscript  with the release of flash  in september  the actions from flash  were enhanced once more and named actionscript for the first time this was the first version of actionscript with influences from javascript and the ecma third edition standard supporting the said standards object model and many of its core data types local variables may be declared with the var statement and userdefined functions with parameter passing and return values can also be created notably actionscript could now also be typed with a text editor rather than being assembled by choosing actions from dropdown lists and dialog box controls with the next release of its authoring tool flash mx and its corresponding player flash player  the language remained essentially unchanged there were only minor changes such as the addition of the switch statement and the strict equality  operator which brought it closer to being ecmacompliant two important features of actionscript that distinguish it from later versions are its loose type system and its reliance on prototypebased inheritance loose typing refers to the ability of a variable to hold any type of data this allows for rapid script development and is particularly wellsuited for smallscale scripting projects prototypebased inheritance is the actionscript  mechanism for code reuse and objectoriented programming instead of a class keyword that defines common characteristics of a class actionscript  uses a special object that serves as a prototype for a class of objects all common characteristics of a class are defined in the classs prototype object and every instance of that class contains a link to that prototype object  actionscript  the next major revision of the language actionscript  was introduced in september  with the release of flash mx  and its corresponding player flash player  in response to user demand for a language better equipped for larger and more complex applications actionscript  featured compiletime type checking and classbased syntax such as the keywords class and extends while this allowed for a more structured objectoriented programming approach the code would still be compiled to actionscript  bytecode allowing it to be used on the preceding flash player  as well in other words the classbased inheritance syntax was a layer on top of the existing prototypebased system with actionscript  developers could constrain variables to a specific type by adding a type annotation so that type mismatch errors could be found at compiletime actionscript  also introduced classbased inheritance syntax so that developers could create classes and interfaces much as they would in classbased languages such as java and c this version conformed partially to the ecmascript fourth edition draft specification today actionscript  in june  actionscript  debuted with adobe flex  and its corresponding player flash player  actionscript  was a fundamental restructuring of the language so much so that it uses an entirely different virtual machine flash player  contains two virtual machines avm for code written in actionscript  and  and avm for content written in actionscript  actionscript  added limited support for hardware acceleration directx opengl the update to the language introduced several new features air adobe air supports actionscript in addition to some extended contents such as the staged engine adobe has developed the number of apis application programming interfaces available to actionscript  has also risen dramatically syntax actionscript code is free form and thus may be created with whichever amount or style of whitespace that the author desires the basic syntax is derived from ecmascript actionscript  the following code which works in any compliant player creates a text field at depth  at position   on the screen measured in pixels that is  pixels wide and high then the codice parameter is set to the hello world string and it is automatically displayed in the player when writing external actionscript  class files the above example could be written in a file named greeteras as following actionscript  actionscript  has a similar syntax to actionscript  but a different set of apis for creating objects compare the script below to the previous actionscript  version var greettextfield  new textfield greettext  hello world thisaddchildgreet minimal actionscript  programs may be somewhat larger and more complicated due to the increased separation of the programming language and the flash ide presume the following file to be greeteras package comexample actionscript  can also be used in mxml files when using apaches flex framework data structures data types actionscript primarily consists of fundamental or simple data types which are used to create other data types these data types are very similar to java data types since actionscript  was a complete rewrite of actionscript  the data types and their inheritances have changed actionscript  top level data types actionscript  complex data types there are additional complex data types these are more processor and memory intensive and consist of many simple data types for as some of these data types are actionscript  primitive prime data types actionscript  some complex data types using data types the basic syntax is so in order to make an empty object or in an informal way some types are automatically put in place unlike some objectoriented languages actionscript makes no distinction between primitive types and reference types in actionscript all variables are reference types however objects that belong to the primitive data types which includes boolean number int uint and string are immutable so if a variable of a supposedly primitive type eg an integer is passed to a function altering that variable inside the function will not alter the original variable as a new int object is created when inside the function if a variable of another not primitive datatype eg xml is passed to a function altering that variable inside the function will alter the original variable as well as no new xml object is created some data types can be assigned values with literals a reference in actionscript is a pointer to an instance of a class a reference stores the memory address of an object  operations against references will follow the value of the reference to the memory address of the object and carry out the operation on that object all objects in actionscript are accessed through references instead of being accessed directly only references to an object may be removed by using the delete keyword removal of actual objects and data is done by the flash player garbage collector which checks for any existing references in the flash memory space if none are found no other reference is made to the orphaned object it is removed from memory for this reason memory management in actionscript requires careful application development planning code protection as with all intermediate language compiled code such as flash and microsoft net once an swf file is saved locally it can be decompiled into its source code and assets some decompilers are capable of nearly full reconstruction of the original source file down to the actual code that was used during creation although results vary on a casebycase basis in opposition to the decompilers actionscript obfuscators have been introduced which transform code into a form that breaks decompiler output while preserving the functionality and structure of the program higherquality obfuscators implement lexical transformations such as identifier renaming control flow transformation and data abstraction transformation which collectively make it harder for decompilers to generate output likely to be useful to a human less robust obfuscators insert traps for decompilers such obfuscators either cause the decompiler software to crash unexpectedly or to generate unintelligible source code the following is an example of actionscript  code generated by a decompiler program before and after obfuscation code before obfuscation code after obfuscation