vulkan api vulkan is a lowoverhead crossplatform d graphics and compute api first announced at gdc  by the khronos group the vulkan api was initially referred to as the next generation opengl initiative or opengl next by khronos but use of those names were discontinued once the vulkan name was announced vulkan is derived from and built upon components of amds mantle api which was donated by amd to khronos with the intent of giving khronos a foundation on which to begin developing a lowlevel api that they could standardize across the industry much like opengl like opengl vulkan targets highperformance realtime d graphics applications such as videogames and interactive media across all platforms and offers higher performance and lower cpu usage much like directd  and mantle vulkan also has the ability to render d graphics applications however it is generally suited for d in addition to its lower cpu usage vulkan is also able to better distribute work amongst multiple cpu cores features vulkan is intended to provide a variety of advantages over other apis as well as its spiritual predecessor opengl vulkan offers lower overhead more direct control over the gpu and lower cpu usage intended advantages include planned features at siggraph  khronos announced that vulkan would be getting support for automatic multigpu features similar to what is offered by directx  multigpu support included inapi removes the need for sli or crossfire which requires graphics cards to be of the same model api multigpu removes this constraint and instead allows the api to intelligently split the workload among two or more completely different gpus for example integrated gpus included on the cpu can be used in conjunction with a highend dedicated gpu for a slight performance boost software that supports vulkan development tools gpu perfstudio  supports vulkan on windows and linux os components the vulkan window system interface wsi does for vulkan what egl does for opengl es egl is used by opengl es programs to interface with the native platform windowing system egl handles context management surface binding and rendering synchronization compatibility initial specifications stated that vulkan will work on hardware that currently supports opengl es  or opengl x and up as vulkan support requires new graphics drivers this does not necessarily imply that every existing device that supports opengl es  or opengl x will have vulkan drivers available android  nougat supports vulkan the software was released in august  vulkan support for ios and macos has not been announced by apple but at least one company provides a vulkan implementation that runs on top of metal on ios and macos devices history the khronos group began a project to create a next generation graphics api in july  with a kickoff meeting at valve corporation at siggraph  the project was publicly announced with a call for participants according to the us patent and trademark office the trademark for vulkan was filed on february   vulkan was formally named and announced at game developers conference  although speculation and rumors centered around a new api existed beforehand and referred to it as glnext in early  lunarg funded by valve developed and showcased a linux driver for intel which enabled vulkan compatibility on the hd  series integrated graphics despite the open source mesa drivers not being fully compatible with opengl  until later that year there is still the possibility of sandy bridge support since it supports compute through directd on august   google announced that future versions of android would support vulkan android nougat launched support for vulkan on august   on december   the khronos group announced that the  version of the vulkan specification was nearly complete and would be released when conformant drivers were available the specification and the opensource vulkan sdk were released on february  