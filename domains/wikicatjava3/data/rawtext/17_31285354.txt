google apps script google apps script is a scripting language for lightweight application development in the google apps platform it is based on javascript  with some portions of  and  and provides subset of ecmascript  api however instead of running on the client it gets executed in the google cloud according to google google apps script provides easy ways to automate tasks across google products and third party services apps script is also the tool that powers the addons for google docs sheets  forms example the following code demonstrate use of google apps script ui services and doclist services to display contents of a google drive folder in tree format notice the use of javascript and the use of google web toolkit widgets google also introduced the html service in june  as an alternative to gwt widgets it lets you serve web pages that can interact with serverside apps script functions embedding html in gas with a gwt widget addons in march  google introduced addons for docs and sheets soon followed by forms the addon stores let users add extra features to google editors such as mailmerging workflows diagrams builders all addons are either  built with google apps script or simply use apps script to display a ui in the google editors while relying on an external backend to perform some tasks for example mailchimp a mailmerging tool has an addon for google docs that communicates with mailchimp platform to send emails before addons it was possible to publish scripts for google sheets in the script gallery when users installed scripts through this gallery a copy of the apps script code was installed on the users sheet with addons the source code is not visible to the end user and everyone is using the latest version published by the developer this new approach make it easier to support existing code and helped convince several companies such as mailchimp or lucidchart to invest in google apps script as part of the addons release google also introduced a ui style guide and css package to help developers built addons that integrate smoothly into the editors each addon is also reviewed by google before its publication and developers can benefit from advises from googlers to provide a better user experience it is not possible to embed ads in addons but it is possible to monetize them