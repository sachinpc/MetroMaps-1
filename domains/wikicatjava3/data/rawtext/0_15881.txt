java programming language java is a generalpurpose computer programming language that is concurrent classbased objectoriented and specifically designed to have as few implementation dependencies as possible it is intended to let application developers write once run anywhere wora meaning that compiled java code can run on all platforms that support java without the need for recompilation java applications are typically compiled to bytecode that can run on any java virtual machine jvm regardless of computer architecture as of  java is one of the most popular programming languages in use particularly for clientserver web applications with a reported  million developers java was originally developed by james gosling at sun microsystems which has since been acquired by oracle corporation and released in  as a core component of sun microsystems java platform the language derives much of its syntax from c and c but it has fewer lowlevel facilities than either of them the original and reference implementation java compilers virtual machines and class libraries were originally released by sun under proprietary licences as of may  in compliance with the specifications of the java community process sun relicensed most of its java technologies under the gnu general public license others have also developed alternative implementations of these sun technologies such as the gnu compiler for java bytecode compiler gnu classpath standard libraries and icedteaweb browser plugin for applets the latest version is java  which is the only version currently supported for free by oracle although earlier versions are supported both by oracle and other companies on a commercial basis history james gosling mike sheridan and patrick naughton initiated the java language project in june  java was originally designed for interactive television but it was too advanced for the digital cable television industry at the time the language was initially called oak after an oak tree that stood outside goslings office later the project went by the name green and was finally renamed java from java coffee gosling designed java with a ccstyle syntax that system and application programmers would find familiar sun microsystems released the first public implementation as java  in  it promised write once run anywhere wora providing nocost runtimes on popular platforms fairly secure and featuring configurable security it allowed network and fileaccess restrictions major web browsers soon incorporated the ability to run java applets within web pages and java quickly became popular while mostly outside of browsers that wasnt the original plan in january  oracle announced that java runtime environments based on jdk  will discontinue the browser plugin the java  compiler was rewritten in java by arthur van hoff to comply strictly with the java  language specification with the advent of java  released initially as jse  in december    new versions had multiple configurations built for different types of platforms jee included technologies and apis for enterprise applications typically run in server environments while jme featured apis optimized for mobile applications the desktop version was renamed jse in  for marketing purposes sun renamed new j versions as java ee java me and java se respectively in  sun microsystems approached the isoiec jtc  standards body and later the ecma international to formalize java but it soon withdrew from the process java remains a de facto standard controlled through the java community process at one time sun made most of its java implementations available without charge despite their proprietary software status sun generated revenue from java through the selling of licenses for specialized products such as the java enterprise system on november   sun released much of its java virtual machine jvm as free and opensource software foss under the terms of the gnu general public license gpl on may   sun finished the process making all of its jvms core code available under free softwareopensource distribution terms aside from a small portion of code to which sun did not hold the copyright suns vicepresident rich green said that suns ideal role with regard to java was as an evangelist following oracle corporations acquisition of sun microsystems in  oracle has described itself as the steward of java technology with a relentless commitment to fostering a community of participation and transparency this did not prevent oracle from filing a lawsuit against google shortly after that for using java inside the android sdk see google section below java software runs on everything from laptops to data centers game consoles to scientific supercomputers on april   james gosling resigned from oracle principles there were five primary goals in the creation of the java language versions  only java  is supported publicly major release versions of java along with their release dates practices java platform one design goal of java is portability which means that programs written for the java platform must run similarly on any combination of hardware and operating system with adequate runtime support this is achieved by compiling the java language code to an intermediate representation called java bytecode instead of directly to architecturespecific machine code java bytecode instructions are analogous to machine code but they are intended to be executed by a virtual machine vm written specifically for the host hardware end users commonly use a java runtime environment jre installed on their own machine for standalone java applications or in a web browser for java applets standard libraries provide a generic way to access hostspecific features such as graphics threading and networking the use of universal bytecode makes porting simple however the overhead of interpreting bytecode into machine instructions makes interpreted programs almost always run more slowly than native executables however justintime jit compilers that compile bytecodes to machine code during runtime were introduced from an early stage java itself is platformindependent and is adapted to the particular platform it is to run on by a java virtual machine for it which translates the java bytecode into the platforms machine language implementations oracle corporation is the current owner of the official implementation of the java se platform following their acquisition of sun microsystems on january   this implementation is based on the original implementation of java by sun the oracle implementation is available for microsoft windows still works for xp while only later versions currently publicly supported mac os x linux and solaris because java lacks any formal standardization recognized by ecma international isoiec ansi or other thirdparty standards organization the oracle implementation is the de facto standard the oracle implementation is packaged into two different distributions the java runtime environment jre which contains the parts of the java se platform required to run java programs and is intended for end users and the java development kit jdk which is intended for software developers and includes development tools such as the java compiler javadoc jar and a debugger openjdk is another notable java se implementation that is licensed under the gnu gpl the implementation started when sun began releasing the java source code under the gpl as of java se  openjdk is the official java reference implementation the goal of java is to make all implementations of java compatible historically suns trademark license for usage of the java brand insists that all implementations be compatible this resulted in a legal dispute with microsoft after sun claimed that the microsoft implementation did not support rmi or jni and had added platformspecific features of their own sun sued in  and in  won a settlement of us million as well as a court order enforcing the terms of the license from sun as a result microsoft no longer ships java with windows platformindependent java is essential to java ee and an even more rigorous validation is required to certify an implementation this environment enables portable serverside applications performance programs written in java have a reputation for being slower and requiring more memory than those written in c however java programs execution speed improved significantly with the introduction of justintime compilation in  for java  the addition of language features supporting better code analysis such as inner classes the stringbuilder class optional assertions etc and optimizations in the java virtual machine such as hotspot becoming the default for suns jvm in  with java  the performance was improved with the addition of the javautilconcurrent package including lock free implementations of the concurrentmaps and other multicore collections and it was improved further java  some platforms offer direct hardware support for java there are microcontrollers that can run java in hardware instead of a software java virtual machine and arm based processors can have hardware support for executing java bytecode through their jazelle option while its support is mostly dropped in current implementations of arm automatic memory management java uses an automatic garbage collector to manage memory in the object lifecycle the programmer determines when objects are created and the java runtime is responsible for recovering the memory once objects are no longer in use once no references to an object remain the unreachable memory becomes eligible to be freed automatically by the garbage collector something similar to a memory leak may still occur if a programmers code holds a reference to an object that is no longer needed typically when objects that are no longer needed are stored in containers that are still in use if methods for a nonexistent object are called a null pointer exception is thrown one of the ideas behind javas automatic memory management model is that programmers can be spared the burden of having to perform manual memory management in some languages memory for the creation of objects is implicitly allocated on the stack or explicitly allocated and deallocated from the heap in the latter case the responsibility of managing memory resides with the programmer if the program does not deallocate an object a memory leak occurs if the program attempts to access or deallocate memory that has already been deallocated the result is undefined and difficult to predict and the program is likely to become unstable andor crash this can be partially remedied by the use of smart pointers but these add overhead and complexity note that garbage collection does not prevent logical memory leaks ie those where the memory is still referenced but never used garbage collection may happen at any time ideally it will occur when a program is idle it is guaranteed to be triggered if there is insufficient free memory on the heap to allocate a new object this can cause a program to stall momentarily explicit memory management is not possible in java java does not support cc style pointer arithmetic where object addresses and unsigned integers usually long integers can be used interchangeably this allows the garbage collector to relocate referenced objects and ensures type safety and security as in c and some other objectoriented languages variables of javas primitive data types are either stored directly in fields for objects or on the stack for methods rather than on the heap as is commonly true for nonprimitive data types but see escape analysis this was a conscious decision by javas designers for performance reasons java contains multiple types of garbage collectors by default hotspot uses the parallel scavenge garbage collector however there are also several other garbage collectors that can be used to manage the heap for  of applications in java the concurrent marksweep cms garbage collector is sufficient oracle aims to replace cms with the garbagefirst collector g syntax the syntax of java is largely influenced by c unlike c which combines the syntax for structured generic and objectoriented programming java was built almost exclusively as an objectoriented language all code is written inside classes and every data item is an object with the exception of the primitive data types ie integers floatingpoint numbers boolean values and characters which are not objects for performance reasons java reuses some popular aspects of c such as printf method unlike c java does not support operator overloading or multiple inheritance for classes though multiple inheritance is supported for interfaces this simplifies the language and aids in preventing potential errors and antipattern design java uses comments similar to those of c there are three different styles of comments a single line style marked with two slashes codice a multiple line style opened with codice and closed with codice and the javadoc commenting style opened with codice and closed with codice the javadoc style of commenting allows the user to run the javadoc executable to create documentation for the program example examples hello world program the traditional hello world program can be written in java as source files must be named after the public class they contain appending the suffix codice for example codice it must first be compiled into bytecode using a java compiler producing a file named codice only then can it be executed or launched the java source file may only contain one public class but it can contain multiple classes with other than public access and any number of public inner classes when the source file contains multiple classes make one class public and name the source file with that public class name a codice that is not declared codice may be stored in any java file the compiler will generate a class file for each class defined in the source file the name of the class file is the name of the class with class appended for class file generation anonymous classes are treated as if their name were the concatenation of the name of their enclosing class a  and an integer the keyword codice denotes that a method can be called from code in other classes or that a class may be used by classes outside the class hierarchy the class hierarchy is related to the name of the directory in which the java file is located this is called an access level modifier other access level modifiers include the keywords codice and codice the keyword codice in front of a method indicates a static method which is associated only with the class and not with any specific instance of that class only static methods can be invoked without a reference to an object static methods cannot access any class members that are not also static methods that are not designated static are instance methods and require a specific instance of a class to operate the keyword codice indicates that the main method does not return any value to the caller if a java program is to exit with an error code it must call systemexit explicitly the method name codice is not a keyword in the java language it is simply the name of the method the java launcher calls to pass control to the program java classes that run in managed environments such as applets and enterprise javabeans do not use or need a codice method a java program may contain multiple classes that have codice methods which means that the vm needs to be explicitly told which class to launch from the main method must accept an array of objects by convention it is referenced as codice although any other legal identifier name can be used since java  the main method can also use variable arguments in the form of codice allowing the main method to be invoked with an arbitrary number of codice arguments the effect of this alternate declaration is semantically identical the codice parameter is still an array of codice objects but it allows an alternative syntax for creating and passing the array the java launcher launches java by loading a given class specified on the command line or as an attribute in a jar and starting its codice method standalone programs must declare this method explicitly the codice parameter is an array of objects containing any arguments passed to the class the parameters to codice are often passed by means of a command line printing is part of a java standard library the  class defines a public static field called  the codice object is an instance of the class and provides many methods for printing data to standard out including which also appends a new line to the passed string the string hello world is automatically converted to a string object by the compiler special classes applet java applets are programs that are embedded in other applications typically in a web page displayed in a web browser the codice statements direct the java compiler to include the  and  classes in the compilation the import statement allows these classes to be referenced in the source code using the simple class name ie codice instead of the fully qualified class name fqcn ie codice the codice class codice subclasses the codice java applet class the codice class provides the framework for the host application to display and control the lifecycle of the applet the codice class is a jcomponent java graphical component which provides the applet with the capability to display a graphical user interface gui and respond to user events the codice class overrides the  method additionally indicated with the annotation supported as of jdk  codice inherited from the superclass to provide the code to display the applet the codice method is passed a codice object that contains the graphic context used to display the applet the codice method calls the graphic context  method to display the hello world string at a pixel offset of codice from the upperleft corner in the applets display an applet is placed in an html document using the codice html element the codice tag has three attributes set codice specifies the name of the codice class and codice sets the pixel width and height of the applet applets may also be embedded in html using either the codice or codice element although support for these elements by web browsers is inconsistent however the codice tag is deprecated so the codice tag is preferred where supported the host application typically a web browser instantiates the codice applet and creates an for the applet once the applet has initialized itself it is added to the awt display hierarchy the codice method is called by the awt event dispatching thread whenever the display needs the applet to draw itself servlet java servlet technology provides web developers with a simple consistent mechanism for extending the functionality of a web server and for accessing existing business systems servlets are serverside java ee components that generate responses typically html pages to requests typically http requests from clients a servlet can almost be thought of as an applet that runs on the server sidewithout a face the codice statements direct the java compiler to include all the public classes and interfaces from the  and  packages in the compilation packages make java well suited for large scale applications the codice class codice the class the codice class provides the interface for the server to forward requests to the servlet and control the servlets lifecycle the codice class overrides the  method defined by the interface to provide the code for the service request handler the codice method is passed a  object that contains the request from the client and a object used to create the response returned to the client the codice method declares that it codice the exceptions and if a problem prevents it from responding to the request the  method in the response object is called to set the mime content type of the returned data to texthtml the  method in the response returns a  object that is used to write the data that is sent to the client the  method is called to write the hello world string to the response and then the method is called to close the print writer which causes the data that has been written to the stream to be returned to the client javaserver pages javaserver pages jsp are serverside java ee components that generate responses typically html pages to http requests from clients jsps embed java code in an html page by using the special delimiters codice and codice a jsp is compiled to a java servlet a java application in its own right the first time it is accessed after that the generated servlet creates the response swing application swing is a graphical user interface library for the java se platform it is possible to specify a different look and feel through the pluggable look and feel system of swing clones of windows gtk and motif are supplied by sun apple also provides an aqua look and feel for mac os x where prior implementations of these looks and feels may have been considered lacking swing in java se  addresses this problem by using more native gui widget drawing routines of the underlying platforms this example swing application creates a single window with hello world inside the first codice includes all the public classes and interfaces from the package the codice class codice the class the codice class implements a window with a title bar and a close control the codice constructor initializes the frame by first calling the superclass constructor passing the parameter codice which is used as the windows title it then calls the  method inherited from codice to set the default operation when the close control on the title bar is selected to  this causes the codice to be disposed of when the frame is closed as opposed to merely hidden which allows the java virtual machine to exit and the program to terminate next a  is created for the string hello world and the  method inherited from the superclass is called to add the label to the frame the method inherited from the superclass is called to size the window and lay out its contents the codice method is called by the java virtual machine when the program starts it instantiates a new codice frame and causes it to be displayed by calling the method inherited from the superclass with the boolean parameter codice once the frame is displayed exiting the codice method does not cause the program to terminate because the awt event dispatching thread remains active until all of the swing toplevel windows have been disposed generics in  generics were added to the java language as part of jse  prior to the introduction of generics each variable declaration had to be of a specific type for container classes for example this is a problem because there is no easy way to create a container that accepts only specific types of objects either the container operates on all subtypes of a class or interface usually codice or a different container class has to be created for each contained class generics allow compiletime type checking without having to create many container classes each containing almost identical code in addition to enabling more efficient code certain runtime exceptions are converted to compiletime errors a characteristic known as type safety criticism criticisms directed at java include the implementation of generics speed the handling of unsigned numbers the implementation of floatingpoint arithmetic and a history of security vulnerabilities in the primary java vm implementation hotspot use outside of the java platform the java programming language requires the presence of a software platform in order for compiled programs to be executed oracle supplies the java platform for use with java the android sdk is an alternative software platform used primarily for developing android applications it supports java  and some java  features offering a compatible implementation of a significant part of the standard library apache harmony the bytecode language supported by the android sdk is incompatible with java bytecode and runs on its own virtual machine optimized for lowmemory devices such as smartphones and tablet computers google the java language is a key pillar in android an open source mobile operating system although android built on the linux kernel was written largely in c the android sdk uses the java language as the basis for android applications however android does not use the standard java virtual machine instead using java bytecode as an intermediate step which is transformed into dalvik bytecode depending on the android version this is then either interpreted by the dalvik virtual machine or compiled into native code by the android runtime android also does not provide the full java se standard library although the android class library does include an independent implementation of a large subset of it this led to a legal dispute between oracle and google on may   a san francisco jury found that if apis could be copyrighted then google had infringed oracles copyrights by the use of java in android devices district judge william haskell alsup ruled on may   that apis cannot be copyrighted but this was reversed by the united states court of appeals for the federal circuit in may  class libraries the java class library is the standard library developed to support application development in java it is controlled by sun microsystems in cooperation with others through the java community process program companies or individuals participating in this process can influence the design and development of the apis this process has been a subject of controversy the class library contains features such as documentation javadoc is a comprehensive documentation system created by sun microsystems used by many java developers it provides developers with an organized system for documenting their code javadoc comments have an extra asterisk at the beginning ie the delimiters are codice and codice whereas the normal multiline comments in java are set off with the delimiters codice and codice editions sun has defined and supports four editions of java targeting different application environments and segmented many of its apis so that they belong to one of the platforms the platforms are the classes in the java apis are organized into separate groups called packages each package contains a set of related interfaces classes and exceptions refer to the separate platforms for a description of the packages available sun also provided an edition called personaljava that has been superseded by later standardsbased java me configurationprofile pairings