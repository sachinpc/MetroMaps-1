free pascal free pascal compiler fpc formerly named fpk pascal for program author florian paul klmpfl the name changed at the end of  is a compiler for the closely related programming language dialects pascal and object pascal it is free software released under the gnu general public license it supports its own object pascal dialect and in varying amounts the dialects of several other pascal family compilers including those of turbo pascal delphi and some historic macintosh compilers the dialect is selected on a perunit module basis and more than one dialect can be used to produce one program it follows a write once compile anywhere philosophy and is available for many cpu architectures and operating systems see targets it supports integrated assembly language and an internal assembler in several dialects separate projects exist to facilitate developing crossplatform graphical user interface gui applications the most prominent one being the lazarus integrated development environment ide supported dialects free pascal adopted the de facto standard dialect of pascal programmers borland pascal and later delphi from version  on delphi  compatibility has been continuously implemented or improved the project has a compilation mode concept and the developers made it clear that they would incorporate working patches for the standardized dialects of the american national standards institute ansi and international organization for standardization iso to create a standardscompliant mode a small effort has been made to support some of the apple pascal syntax to ease interfacing to the classic mac os and macos since the apple dialect implements some standard pascal features that turbo pascal and delphi omit free pascal is a bit more isocompatible than these the x release series does not significantly change the dialect objectives beyond delphi  instead they aim for closer compatibility the project still lacks the delphi functionality of compilersupported exporting of classes from shared libraries which is useful for example for lazarus which implements packages of components  several delphi specific features were added in the development branch and some of the starting work for the features new in delphi  most notably the addition of the codice type has been done the development branch also features an objectivepascal extension for objectivec cocoa interfacing as of version  free pascal implemented basic iso pascal mode though many things such as codice and codice procedure and file buffer variable concept for file handling were still absent as of version  iso pascal mode is fairly complete with one remaining bug thats fixed in  afterwards it has been able to compile standardpascalorgs p with no changes history the early years free pascal emerged when borland made it clear that borland pascal development for dos would stop with version  to be replaced by a windowsonly product which later became delphi student florian paul klmpfl began developing his own compiler written in the turbo pascal dialect and produced bit code for the gov dos extender which was used and developed by the djs gnu programming platform djgpp project at that time originally the compiler was a bit dos executable compiled by turbo pascal after two years the compiler was able to compile itself and became a bit executable expansion the initial bit compiler was published on the internet and the first contributors joined the project later a linux port was made by michael van canneyt five years before the borland kylix compiler became available the dos port was adapted for use in os using the eberhard mattes extender emx which made os the second supported compiling target apart from work of florian klmpfl as original author danil mantione contributed significantly to make this happen and provided the original port of the runtime library to os and emx the compiler improved gradually and the dos version migrated to the gov extender this culminated in release  which was much more widely used than prior versions and was the last release aiming only for turbo pascal compliance later releases added a delphi compatibility mode this release was also ported to systems using a motorola  family mk processors with release  the win target was added and a start was made with incorporating some delphi features stabilizing for a nonbeta release began and version  was released in july  the x series was widely used in business and education for the x releases the port to k cpu was redone and the compiler produced stable code for several k unixlike and amigaos operating systems the second generation during the stabilization of what would become x and more so when porting to the motorola k systems it was clear that the design of the code generator was far too limited in many ways the principal problems were that adding processors basically meant rewriting the code generator and that the register allocation was based on the principle of always keeping three free registers between building blocks which was inflexible and hard to maintain for these reasons the x branched from the x main branch in december  at first changes were mostly cleanups and rewriteredesign to all parts of the compiler and then the code generator and register allocator were rewritten as a bonus remaining missing delphi compatibility was added the work on x continued slowly but steadily in late  a working powerpc port became available followed by an arm port in summer  a sparc port in fall  and an xamd port in early  which made the compiler available for a bit platform in november  a first beta release of the x branch was packaged and numbered  these were quickly followed by versions  and  the later introduced os x support the work continued with version  january   late february   may   december  and  august  consolidation the x release series in  some of the major reworks planned for  such as the rewrite of the unit system had not begun and it was decided to start stabilizing the already implemented features some of the motives for this roadmap change were the needs of the lazarus project particularly the internal linker support for win windows ce and os x on x and related features like dwarf after betas  and  version  was released in september  followed by version  in august  and version  in march  the x series vastly improved support for the activex and component object model com interface and object linking and embedding ole though bugs were still being found the delegation to interface using the codice keyword was partly implemented but was not complete  library support for activex was also improved another major highlight was the internal linker for win win and windows ce which much improve linking time and memory use and make the compilelinkrun cycle in lazarus much faster the efficiency for smartlinking or dead code elimination was also improved minor new features are improved dwarf  debug format support and optimizations such as tail recursion omission of unneeded stack frames and registerbased common subexpression elimination cse optimization a first implementation of generic programming generics support is also available but only experimentally the x release series the x release series had a less clear set of goals than earlier releases the unit system rewrite was postponed again and the branch that became  was created to keep risky commits from  to stabilize it mostly these risky commits were more involved improvements to the new platforms mac powerpc  mac x iphone and many fixes to the arm and x architectures in general as well as dwarf other compiler improvements included whole program optimization wpo and devirtualization and arm embeddedapplication binary interface eabi support later during the  cycle a more delphilike resource support based on special sections in the binary instead of pascal constants was added this feature direly needed by lazarus became the main highlight of the branch other more minor points were a memory manager that improved heap manager performance in threaded environments small improvements in delphi compatibility such as codice and improvements in interface delegation on january   free pascal  was released followed on november   by bug fix release  with support for codice loops and codice and codice classes and other changes the x release series in january  free pascal  was released this first version from the  release series also supports objective pascal on os x and ios targets and implements many small improvements and bug fixes in february  fpc  was released it contains netbsd and openbsd releases for the first time since  based on fresh ports in march  the last point release in the  series  occurred and featured mostly database fcldb updates the  release series releases for  occurred on  august fpc rc on october  fpc rc and on  november   its main new features are a proof of concept internal linker for executable and linkable format elf is already available other work is done in separate branches to be merged to development trunk when complete and stable targets free pascal also supports byte code generation for the java virtual machine as of version  and targets both oracles java and googles android jvm although not the full object pascal syntax is supported free pascal  also supports armhf platforms like the raspberry pi including armveabihf running on raspbian mips work on bit arm has matured into release support for ios in  as well a native arm android target has been added ending the formerly hacked arm linux target to generate native arm libraries for android this makes porting lazarus application to android using custom drawn interface easier since fpc  openbsd and netbsd are supported on ia and x architectures a new target embedded has been added for usage without os arm cortex m and mips mainly with instantfpc it is possible to run pascal programs which are translated just in time as unix scripts or cgi backend integrated development environments like most modern compilers free pascal can be used with an integrated development environment ide besides independent ides there are also plugins to various existing ides free pascals own text mode ide free pascal has its own textmode ide resembling turbo pascals ide it is made using the free vision framework also included with free pascal a turbo vision clone in addition to many features of the turbo pascal ide it has code completion and multiple help files format support html microsoft compiled html help chm information presentation facility ipf instead of using command line tools the ide uses its own embedded compiler based on the same source as the command line compiler and debugger using libgdb to provide its functionality lazarus lazarus is the mostpopular ide used by free pascal programmers it looks and feels similar to the delphi ide and can be used to create console and graphical applications windows services daemons and web applications lazarus provides a crossplatform user interface framework called lazarus component library lcl graphical applications created with lcl can be ported to another platform via recompiling or cross compiling codetyphon codetyphon is a rd party distribution of the lazarus ide for windows linux freebsd and solaris it has already many components preinstalled and aims for a crosscompiling out of the box the project has been said to have forked from lazarus and fpc but despite that still regular synchronizes mseide mseide is another free pascalbased ide for building lightweight applications msegui like lcl to lazarus is the class library that comes with mseide it communicates directly with x via xlib on linux and windows api winapi gdi under windows with support for multiple document interface mdi and visual form inheritance devpascal devpascal is a free windowsonly ide for free pascal and gnu pascal with no development or new versions after the  fpc version or  gpc version open sibyl open sibyl was an effort to retarget the sibyl speed pascal ide for os and ecs to free pascal after speedsoft released the sources of the sibyl speedpascal ide functional status and completeness unknown last snapshot from  attempts to retarget to virtual pascal preceded it megido megido was an effort to create a crossplatform ide for free pascal it was discontinued but paved the way for developing lazarus and open sibyl pascalgui pascalgui is small ide that directly runs on android devices ipascal ipascal is an object pascal ide plugin for the intellij idea platform it provides all main features and advanced pascal code navigation free pascal compiler integration and other features provided by idea plugins to existing ides xcode by far the most used ide plugins are the xcode plugins that are partially distributed with ios and os x versions of fpc see also os x overview with several xcode how to arcticles visual studio omnipascal omnipascal is a free pascal and delphi plugin for visual studio code it provides all main features  such as advanced code navigation code completion and compiler integration eclipse pascal plugin several plugins attempts for eclipse exist the most recent one is pascal plugin for eclipse netbeans some simple work was done on a plugin for netbeans bundled libraries apart from a compiler and an ide free pascal provides the following libraries