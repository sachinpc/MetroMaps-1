richfaces richfaces is an open source ajaxenabled component library for javaserver faces hosted by jboss it allows easy integration of ajax capabilities into enterprise application development it reached its endoflife in june  richfaces is more than just a component library for javaserver faces it adds history richfaces originated from the ajaxjsf framework which alexander smirnov designed and implemented in the autumn of  smirnov joined exadel and continued to develop the framework in march  exadel released the first version of what would become ajaxjsf later in the same year exadel vcp was split off and the ajaxjsf framework and richfaces was born while richfaces provided outofthebox components a componentcentric ajax approach where components do everything you need ajaxjsf provided pagewide ajax support developers specify which parts of the page the server should process after some clientside user actions and which parts should be updated after processing ajaxjsf became an opensource project hosted on javanet while richfaces became a commercial jsf component library in march  jboss a division of red hat from  and exadel signed a partnership agreement whereby ajaxjsf and richfaces would come under the jboss umbrella as jboss ajaxjsf and as jboss richfaces richfaces would now also become opensource and free in september  jboss and exadel decided to merge ajaxjsf and richfaces under the richfaces name it made sense as both libraries were now free and opensource having just one product solved many existing version and compatibilityissues such as which version of ajaxjsf would work with which version of richfaces on february th  the richfaces developer michal petrov announced the endoflife of richfaces for june  framework the framework is implemented as a component library which adds ajax capability into existing pages so a developer doesnt need to write any javascript code or to replace existing components with new ajax widgets richfaces enables pagewide ajax support instead of the traditional componentwide support hence a developer can define the event on the page that invokes an ajax request and the areas of the page that should be synchronized with the jsf component tree after the ajax request changes the data on the server according to the events fired on the client richfaces allows you to define by means of jsf tags different parts of a jsf page you wish to update with an ajax request and provides a few options to send ajax requests to the server also the jsf page doesnt change from a regular jsf page and you dont need to write any javascript code by hand by controlling everything from the server side almost no javascript is needed and the page state can be maintained easily in the server richfaces architecture the architecture of richfaces consists of an ajax filter ajax action components ajax containers and a javascript engine skinnability skinnability is a special feature of richfaces that is used for defining common interface styles the feature is based on xcss technology which provides flexibility and dynamics richfaces provides a set of predefined skins skin properties such as generalbackgroundcolor generallinkcolor headerfamilyfont etc are stored in skinnameskinproperties file each component has a xcss a special file format that combines flexibility of xml and css file that performs mapping of css selectors to the skin properties of a particular skin additionally richfaces provides skinning for standard html controls you can create a custom skin using plugnskin feature which is a maven archetype that builds a skeleton for a new skin simple jsf page with richfaces calendar component this is the result of the presented above code