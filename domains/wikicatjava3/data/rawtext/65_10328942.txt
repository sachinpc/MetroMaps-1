java ee version history the java platform enterprise edition or java ee formerly known as java  platform enterprise edition or jee has undergone several changes since  as well as numerous additions of new specifications jpe may  announcement of the jpe java professional edition project at sun jee  september   jee  abandoned support for the heavyweight distributed object modelrmiiiopcorba entirely in favor of xmlbased solution added javaserver pages standard tag library jstl java authentication and authorization service jaas and jee connector architecture jee  november   in response to emerging web services jee  added xmlbased web services support this version also added componentbased javaserver faces jsf technology intended to replace jsp java ee  may   in response to the complaints and heavyweight troublesome impression about jee    when developers reluctantly use and lightweight springstrutshibernate framework is increasingly popular jee was rebranded as java ee  which comes in line with java se  trying to make ejb lighter weight by replacing entity bean with independent jpa it also added java api for xmlbased web services jaxws and soap with attachments api for java saaj with the former textbased and asynchronous the latter either binarybased or textbased but synchronous which is intended to be a simpler replacement for rmiiiopcorba java ee  december   starting from java ee  java ee is trying to incorporate and standardize conceptsfeatures from and merge with spring framework the soap with attachments api for java saaj is now part of java se  and is thus available to java ee  applications without needing to be included in the ee specification the java api for restful web services jaxrs is now included in java ee java ee  also standardized di aop and others from spring into contexts and dependency injection for java dependency injection for java bean validation managed beans and interceptors java ee  introduced the concept of profile which represents a configuration of the platform suited to a particular class of applications the web profile offers a complete stack with technologies addressing presentation and state management javaserver faces javaserver pages core web container functionality servlet business logic enterprise javabeans lite transactions java transaction api persistence java persistence api and more java ee  also started pruning process which would prune and deprecate old and unused apis java ee  was first going to be developed under jsr  but was canceled java ee  was developed under jsr  and released on december   the development was plagued with controversy although passed by  yes votes  no vote apache and  abstention borland members aired concerns relating to the licensing terms applied by sun microsystems ibms yes vote was caveated with intels was caveated with red hat commented apache voted no with the following comment java ee  june   in keeping up with the html trend java ee  added java api for websocket java api for json processing and servlet async and nonblocking nio which was a primary reason play framework was started in response to emerging big data trend java ee  added a complete solution for batch applications for the java platform java ee  also added features trying to make developers life easier improving developers productivity java ee  jsrs approved on  sep  expected q  or first half  final release the main focus of java ee  is on support for html and the emerging http  standard enhanced simplification and managed bean integration and improved infrastructure for applications running in the cloud continuing the direction of improved simplification while extending the range of the java ee platform to encompass emerging technologies in the web space and in cloud technology in accordance with the pruning process defined by the java ee  specification it is considered designating the following as proposed optional in this release