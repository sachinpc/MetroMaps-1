cyclone programming language the cyclone programming language is intended to be a safe dialect of the c language cyclone is designed to avoid buffer overflows and other vulnerabilities that are endemic in c programs without losing the power and convenience of c as a tool for system programming cyclone development was started as a joint project of att labs research and greg morrisetts group at cornell in  version  was released on may   language features cyclone attempts to avoid some of the common pitfalls of c while still maintaining its look and performance to this end cyclone places the following limits on programs to maintain the tool set that c programmers are used to cyclone provides the following extensions for a better highlevel introduction to cyclone the reasoning behind cyclone and the source of these lists see this paper cyclone looks in general much like c but it should be viewed as a clike language pointerreference types cyclone implements three kinds of reference following c terminology these are called pointers the purpose of introducing these new pointer types is to avoid common problems when using pointers take for instance a function called codice that takes a pointer to an int although the person who wrote the function codice could have inserted codice checks let us assume that for performance reasons they did not calling codice will result in undefined behavior typically although not necessarily a sigsegv signal being sent to the application to avoid such problems cyclone introduces the codice pointer type which can never be codice thus the safe version of codice would be this tells the cyclone compiler that the argument to codice should never be codice avoiding the aforementioned undefined behavior the simple change of codice to codice saves the programmer from having to write codice checks and the operating system from having to trap codice pointer dereferences this extra limit however can be a rather large stumbling block for most c programmers who are used to being able to manipulate their pointers directly with arithmetic although this is desirable it can lead to buffer overflows and other offbyonestyle mistakes to avoid this the codice pointer type is delimited by a known bound the size of the array although this adds overhead due to the extra information stored about the pointer it improves safety and security take for instance a simple and nave codice function written in c this function assumes that the string being passed in is terminated by null codice however what would happen if codice were passed to this string this is perfectly legal in c yet would cause codice to iterate through memory not necessarily associated with the string codice there are functions such as codice which can be used to avoid such problems but these functions are not standard with every implementation of ansi c the cyclone version of codice is not so different from the c version here codice bounds itself by the length of the array passed to it thus not going over the actual length each of the kinds of pointer type can be safely cast to each of the others and arrays and strings are automatically cast to codice by the compiler casting from codice to codice invokes a bounds check and casting from codice to codice invokes both a codice check and a bounds check casting from codice or codice results in no checks whatsoever the resulting codice pointer has a size of  dangling pointers and region analysis consider the following code in c this returns an object that is allocated on the stack of the function codice which is not available after the function returns while gcc and other compilers will warn about such code the following will typically compile without warnings cyclone does regional analysis of each segment of code preventing dangling pointers such as the one returned from this version of codice all of the local variables in a given scope are considered to be part of the same region separate from the heap or any other local region thus when analyzing codice the compiler would see that codice is a pointer into the local stack and would report an error presentations