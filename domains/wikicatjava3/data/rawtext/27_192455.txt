xmpp extensible messaging and presence protocol xmpp is a communications protocol for messageoriented middleware based on xml extensible markup language it enables the nearrealtime exchange of structured yet extensible data between any two or more network entities originally named jabber the protocol was developed by the jabber opensource community in  for near realtime instant messaging im presence information and contact list maintenance designed to be extensible the protocol has been used also for publishsubscribe systems signalling for voip video file transfer gaming the internet of things iot applications such as the smart grid and social networking services unlike most instant messaging protocols xmpp is defined in an open standard and uses an open systems approach of development and application by which anyone may implement an xmpp service and interoperate with other organizations implementations because xmpp is an open protocol implementations can be developed using any software license although many server client and library implementations are distributed as free and opensource software numerous freeware and commercial software implementations also exist the internet engineering task force ietf formed an xmpp working group in  to formalize the core protocols as an ietf instant messaging and presence technology the xmpp working group produced four specifications rfc  rfc  rfc  rfc  which were approved as proposed standards in  in  rfc  and rfc  were superseded by rfc  and rfc  respectively with rfc  specifying the xmpp address format in  rfc  was superseded by rfc  in addition to these core protocols standardized at the ietf the xmpp standards foundation formerly the jabber software foundation is active in developing open xmpp extensions xmppbased software is deployed widely across the internet and by  was used by over ten million people worldwide according to the xmpp standards foundation history jeremie miller began working on the jabber technology in  and released the first version of the jabberd server on january   the early jabber community focused on opensource software mainly the jabberd server but its major outcome proved to be the development of the xmpp protocol the early jabber protocol as developed in  and  formed the basis for xmpp as published in rfc  and rfc  the primary changes during formalization by the ietfs xmpp working group were the addition of tls for channel encryption and sasl for authentication note that rfc  and rfc  have been superseded by rfc  and rfc  published in  the first im service based on xmpp was jabberorg which has operated continuously and offered free accounts since  from  until february  the service used jabberd as its server software at which time it migrated to ejabberd both of which are free software application servers in january  the service migrated to the proprietary mlink server software produced by isode ltd in august  google introduced google talk a combination voip and im system that uses xmpp for instant messaging and as a base for a voice and file transfer signaling protocol called jingle the initial launch did not include servertoserver communications google enabled that feature on january   google has since added video functionality to google talk also using the jingle protocol for signaling in may  google announced jabber compatibility would be dropped from google talk for servertoserver federation although it would retain clienttoserver support in january  aol introduced experimental xmpp support for its aol instant messenger aim service allowing aim users to communicate using xmpp however in march  this service was discontinued as of may  aol offers limited xmpp support in september  cisco systems acquired jabber inc the creators of the commercial product jabber xcp in february  the socialnetworking site facebook opened up its chat feature to thirdparty applications via xmpp some functionality was unavailable through xmpp and support was dropped in april  similarly in december  microsoft released an xmpp interface to its microsoft messenger service skype its de facto successor also provides limited xmpp support however these are not native xmpp implementations decentralization and addressing the xmpp network uses a clientserver architecture clients do not talk directly to one another the model is decentralized  anyone can run a server by design there is no central authoritative server as there is with services such as aol instant messenger or windows live messenger some confusion often arises on this point as there is a public xmpp server being run at jabberorg to which a large number of users subscribe however anyone may run their own xmpp server on their own domain every user on the network has a unique xmpp address called jid for historical reasons xmpp addresses are often called jabber ids the jid is structured like an email address with a username and a domain name or ip address for the server where that user resides separated by an at sign  such as usernameexamplecom since a user may wish to log in from multiple locations they may specify a resource a resource identifies a particular client belonging to the user for example home work or mobile this may be included in the jid by appending a slash followed by the name of the resource for example the full jid of a users mobile account could be usernameexamplecommobile each resource may have specified a numerical value called priority messages simply sent to usernameexamplecom will go to the client with highest priority but those sent to usernameexamplecommobile will go only to the mobile client the highest priority is the one with largest numerical value jids without a username part are also valid and may be used for system messages and control of special features on the server a resource remains optional for these jids as well the means to route messages based on a logical endpoint identifier  the jid instead of by an explicit ip address present opportunities to use xmpp as an overlay network implementation on top of different underlay networks xmpp as an extensible message oriented middleware xmom platform xmpp provides a general framework for messaging across a network which offers a multitude of applications beyond traditional instant messaging im and the distribution of presence data while several service discovery protocols exist today such as zeroconf or the service location protocol xmpp provides a solid base for the discovery of services residing locally or across a network and the availability of these services via presence information as specified by xep disco building on its capability to support discovery across local network domains xmpp is wellsuited for cloud computing where virtual machines networks and firewalls would otherwise present obstacles to alternative service discovery and presencebased solutions cloud computing and storage systems rely on various forms of communication over multiple levels including not only messaging between systems to relay state but also the migration or distribution of larger objects such as storage or virtual machines along with authentication and intransit data protection xmpp can be applied at a variety of levels and may prove ideal as an extensible middleware or message oriented middleware mom protocol widely known for its ability to exchange xmlbased content natively it has become an open platform for the exchange of other forms of content including proprietary binary streams full motion video fmv content and the transport of filebased content via for example the jingle series of extensions here the majority of the applications have nothing to do with human communications ie im but instead provide an open means to support machinetomachine or peerto peer communications across a diverse set of networks xmpp via http and websocket transports the original and native transport protocol for xmpp is transmission control protocol tcp using openended xml streams over longlived tcp connections as an alternative to the tcp transport the xmpp community has also developed an http transport for web clients as well as users behind restricted firewalls in the original specification xmpp could use http in two ways polling and binding the polling method now deprecated essentially implies messages stored on a serverside database are being fetched and posted regularly by an xmpp client by way of http get and post requests the binding method implemented using bidirectionalstreams over synchronous http bosh allows servers to push messages to clients as soon as they are sent this push model of notification is more efficient than polling where many of the polls return no new data because the client uses http most firewalls allow clients to fetch and post messages without any hindrances thus in scenarios where the tcp port used by xmpp is blocked a server can listen on the normal http port and the traffic should pass without problems various websites let people sign into xmpp via a browser furthermore there are open public servers that listen on standard http port  and https port  ports and hence allow connections from behind most firewalls however the ianaregistered port for bosh is actually  not  a perhaps more efficient transport for realtime messaging is websocket a web technology providing for bidirectional fullduplex communications channels over a single tcp connection xmpp over websocket binding is defined in the ietf proposed standard rfc  implementations xmpp is implemented by a large number of clients servers and code libraries these implementations are provided under a variety of software licenses deployments several large public im services natively use xmpp including livejournals lj talk nimbuzz and hipchat various hosting services such as dreamhost enable hosting customers to choose xmpp services alongside more traditional web and email services specialized xmpp hosting services also exist in form of cloud so that domain owners need not directly run their own xmpp servers including cisco webex connect chromepl flosoftbiz ipoboxnet and hostedim some of the largest messaging providers uses or has been using various forms of xmpp based protocols in their backend systems without necessarily exposing this fact to their end users this includes whatsapp gtalk and facebook chat the deprecated facebook messaging system most of these deployments are built on the freesoftware erlangbased xmpp server called ejabberd xmpp is also used in deployments of nonim services including smart grid systems such as demand response applications messageoriented middleware and as a replacement for sms to provide text messaging on many smartphone clients xmpp is the de facto standard for private chat in gaming related platforms such as origin raptr playstation and the now discontinued xfire the two notable exceptions being steam and xbox live that use their own proprietary messaging protocols extensions the xmpp standards foundation or xsf formerly the jabber software foundation is active in developing open xmpp extensions however extensions can also be defined by any individual software project or organization another example is the federation protocol in apache wave which is based on xmpp competing standards xmpp has often been regarded as a competitor to simple based on the session initiation protocol sip protocol as the standard protocol for instant messaging and presence notification the xmpp extension for multiuser chat can be seen as a competitor to internet relay chat irc although irc is far simpler has far fewer features and is far more widely used the xmpp extensions for publishsubscribe provide many of the same features as the advanced message queuing protocol amqp connecting to other protocols one of the original design goals of the early jabber opensource community was enabling users to connect to multiple instant messaging systems especially nonxmpp systems through a single client application this was done through entities called transports or gateways to other instant messaging protocols but also to protocols such as sms or email unlike multiprotocol clients xmpp provides this access at the server level by communicating via special gateway services running alongside an xmpp server any user can register with one of these gateways by providing the information needed to log on to that network and can then communicate with users of that network as though they were xmpp users thus such gateways function as client proxies the gateway authenticates on the users behalf on the nonxmpp service as a result any client that fully supports xmpp can access any network with a gateway without extra code in the client and without the need for the client to have direct access to the internet however the client proxy model may violate terms of service on the protocol used although such terms of service are not legally enforceable in several countries and also requires the user to send their im username and password to the thirdparty site that operates the transport which may raise privacy and security concerns another type of gateway is a servertoserver gateway which enables a nonxmpp server deployment to connect to native xmpp servers using the built in interdomain federation features of xmpp such servertoserver gateways are offered by several enterprise im software products including development xsf the xmpp standards foundation xsf develops and publishes extensions to xmpp through a standards process centered on xmpp extension protocols xeps previously known as jabber enhancement proposals  jeps the following extensions are in especially wide use internet of things xmpp features such as federation across domains publishsubscribe authentication and its security even for mobile endpoints are being used to implement the internet of things several xmpp extensions are part of the experimental implementation efficient xml interchange exi format sensor data provisioning control concentrators discovery these efforts are documented on a page in the xmpp wiki dedicated to internet of things and the xmpp iot mailing list specifications and standards the ietf xmpp working group has produced a series of request for comments rfc documents the most important and most widely implemented of these specifications are