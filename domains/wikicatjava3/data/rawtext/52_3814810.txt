primitive wrapper class in object oriented programming a wrapper class is a class that encapsulates types so that those types can be used to create object instances and methods in another class that need those types so a primitive wrapper class is a wrapper class that encapsulates hides or wraps data types from the eight primitive data types so that these can be used to create instantiated objects with methods in another class or in other classes the primitive wrapper classes are found in the java api primitive wrapper classes are used to create an that needs to represent primitive types in classes ie in the java api in the package and in the reflection package collection classes are java api defined classes that can store objects in a manner similar to how data structures like arrays store primitive data types like int double long or char etc but arrays store primitive data types while collections actually store objects the primitive wrapper classes and their corresponding primitive types are the codice codice codice codice codice and codice wrapper classes are all subclasses of the class the wrapper classes codice and codice are not one of the primitive wrapper classes but are immutable the wrapper class void the wrapper class named void is not a primitive wrapper class specifically because void is not a primitive data type however the void wrapper class can be used to create new objects that have methods that are not expected to return a value although it is a wrapper class the class provides an object representation of the codice return atomic wrapper classes with java  additional wrapper classes were introduced in the package these classes are mutable and cannot be used as a replacement for the regular wrapper classes instead they provide atomic operations for addition increment and assignment the atomic wrapper classes and their corresponding types are the codice and codice classes are subclasses of the codice class the codice class accepts the type parameter codice that specifies the type of the object reference see generics in java for a description of type parameters in java codice