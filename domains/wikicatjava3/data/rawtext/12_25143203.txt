net framework net framework pronounced dot net is a software framework developed by microsoft that runs primarily on microsoft windows it includes a large class library known as framework class library fcl and provides language interoperability each language can use code written in other languages across several programming languages programs written for net framework execute in a software environment as contrasted to hardware environment known as common language runtime clr an application virtual machine that provides services such as security memory management and exception handling as such computer code written using net framework is called managed code fcl and clr together constitute net framework fcl provides user interface data access database connectivity cryptography web application development numeric algorithms and network communications programmers produce software by combining their own source code with net framework and other libraries net framework is intended to be used by most new applications created for the windows platform microsoft also produces an integrated development environment largely for net software called visual studio net framework started out as a proprietary framework although the company worked to standardize the software stack almost immediately even before its first release despite the standardization efforts developersparticularly those in the free and opensource software communitiesexpressed their uneasiness with the selected terms and the prospects of any free and opensource implementation especially with regard to software patents since then microsoft has changed net development to more closely follow a contemporary model of a communitydeveloped software project including issuing an update to its patent promise to address the concerns net framework led to a family of net platforms targeting mobile computing embedded devices alternative operating systems and browser plugins a reduced version of the framework net compact framework is available on windows ce platforms including windows mobile devices such as smartphones net micro framework is targeted at severely resourceconstrained embedded devices silverlight was available as a web browser plugin mono is available for many operating systems and is customized into popular smartphone operating systems android and ios and game engines net core targets crossplatform and cloudbased workloads in addition to the universal windows platform uwp history microsoft started development of net framework in the late s originally under the name of next generation windows services ngws by late  the first beta versions of net  were released in august  microsoft hewlettpackard and intel worked to standardize common language infrastructure cli and c by december  both were ratified ecma standards iso followed in april  the current version of iso standards are isoiec  and isoiec  while microsoft and their partners hold patents for cli and c ecma and iso require that all patents essential to implementation be made available under reasonable and nondiscriminatory terms in addition to meeting these terms the companies have agreed to make the patents available royaltyfree however this did not apply for the part of net framework not covered by ecmaiso standards which included windows forms adonet and aspnet patents that microsoft holds in these areas may have deterred nonmicrosoft implementations of the full framework on  october  microsoft announced that the source code for net framework  libraries was to become available under the microsoft reference source license msrsl the source code repository became available online on  january  and included bcl aspnet adonet windows forms wpf and xml scott guthrie of microsoft promised that linq wcf and wf libraries were being added on  november  microsoft announced net core in an effort to include crossplatform support for net the source release of microsofts coreclr implementation source for the entire  library stack for net core and the adoption of a conventional bazaarlike opensource development model under the consolation stewardship of the net foundation miguel de icaza describes net core as a redesigned version of net that is based on the simplified version of the class libraries and microsofts immo landwerth explained that net core would be the foundation of all future net platforms at the time of the announcement the initial release of the net core project had been seeded with a subset of the libraries source code and coincided with the relicensing of microsofts existing net reference source away from the restrictions of the msrsl landwerth acknowledged the disadvantages of the previously selected shared source license explaining that it made codename rotor a nonstarter as a communitydeveloped open source project because it did not meet the criteria of an osiapproved license in november  microsoft also produced an update to its patent grants which further extends the scope beyond its previous pledges prior projects like mono existed in a legal grey area because microsofts earlier grants applied only to the technology in covered specifications including strictly the th editions each of ecma and ecma the new patent promise however places no ceiling on the specification version and even extends to any net runtime technologies documented on msdn that have not been formally specified by the ecma group if a project chooses to implement them this permits mono and other projects to maintain feature parity with modern net features that have been introduced since the th edition was published without being at risk of patent litigation over the implementation of those features the new grant does maintain the restriction that any implementation must maintain minimum compliance with the mandatory parts of the cli specification on  march  microsoft announced at microsoft build that they will completely relicense mono under the mit license even in scenarios where previously a commercial license was necessary microsoft also supplemented its previous patent promise for mono stating that they wont assert any applicable patents against parties that are using selling offering for sale importing or distributing mono it was announced that the mono project was contributed to the net foundation these developments followed the previous acquisition of xamarin which started in february  and was completed on  march  microsofts press release highlights that the crossplatform commitment now allows for a fully opensource modern serverside net stack however microsoft does not plan to release the source for wpf or windows forms architecture common language infrastructure common language infrastructure cli provides a languageneutral platform for application development and execution including functions for exception handling garbage collection security and interoperability by implementing the core aspects of net framework within the scope of cli this functionality will not be tied to a single language but will be available across the many languages supported by the framework microsofts implementation of cli is common language runtime clr it serves as the execution engine of net framework all net programs execute under the supervision of clr guaranteeing certain properties and behaviors in the areas of memory management security and exception handling for computer programs to run on cli they need to be compiled into common intermediate language cil  as opposed to being compiled into machine code upon execution an architecturespecific justintime compiler jit turns the cil code into machine code to improve performance however net framework comes with native image generator ngen which performs aheadoftime compilation assemblies compiled cil code is stored in cli assemblies as mandated by the specification assemblies are stored in portable executable pe file format common on windows platform for all dll and exe files each assembly consists of one or more files one of which must contain a manifest bearing the metadata for the assembly the complete name of an assembly not to be confused with the file name on disk contains its simple text name version number culture and public key token assemblies are considered equivalent if they share the same complete name a private key can also be used by the creator of the assembly for strong naming the public key token identifies which private key an assembly is signed with only the creator of the keypair typically net developer signing the assembly can sign assemblies that have the same strong name as a previous version assembly since the creator is in possession of the private key strong naming is required to add assemblies to global assembly cache class library net framework includes a set of standard class libraries the class library is organized in a hierarchy of namespaces most of the builtin apis are part of either codice or codice namespaces these class libraries implement a large number of common functions such as file reading and writing graphic rendering database interaction and xml document manipulation net class libraries are available for all cli compliant languages net framework class library is divided into two parts without clear boundary base class library bcl and framework class library fcl bcl includes a small subset of the entire class library and is the core set of classes that serve as the basic api of clr for net framework most classes considered being part of bcl reside in codice codice and codice bcl classes are available in net framework as well as its alternative implementations including net compact framework microsoft silverlight net core and mono fcl is a superset of bcl and refers to the entire class library that ships with net framework it includes an expanded set of libraries including the windows forms aspnet and windows presentation foundation wpf but also extensions to the base class libraries adonet language integrated query linq windows communication foundation wcf and workflow foundation wf fcl is much larger in scope than standard libraries for languages like c and comparable in scope to standard libraries of java with the introduction of alternative implementations eg silverlight microsoft introduced the concept of portable class libraries pcl allowing a consuming library to run on more than one platform with the further proliferation of net platforms the pcl approach failed to scale pcls are defined intersections of api surface between two or more platforms as the next evolutionary step of pcl the net standard library was created retroactively based on the codice based apis found in uwp and silverlight new net platforms are encouraged to implement a version of the standard library allowing to reuse existing thirdparty libraries to run without new version of them the net standard library allows an independent evolvement of the library and app model layers within the net architecture nuget is the package manager for all net platforms it is used to retrieve thirdparty libraries into a net project with a global library feed available at httpsnugetorg private feeds can be maintained separately eg by a build server or a file system directory app models on top of the class libraries multiple app models are used to create applications net framework supports console windows forms windows presentation foundation aspnet and aspnet core applications by default other app models are offered by alternative implementations of the net framework console uwp and aspnet core are available on net core mono is used to power xamarin app models for ios android and os x the retroactive architectural definition of app models showed up in early  and was also applied to previous technologies like windows forms or wpf ccli microsoft introduced ccli in visual studio  which is a language and means of compiling visual c programs to run within the net framework certain portions of the c program still run within an unmanaged visual c runtime while specially modified portions are translated into cil code and run with the net frameworks clr assemblies compiled using the ccli compiler are known as mixedmode assemblies since they contain native and managed code within the same dll such assemblies are also difficult to reverse engineer since net decompilers such as net reflector only reveal the managed code design principles interoperability because computer systems commonly require interaction between newer and older applications net framework provides means to access functionality implemented in newer and older programs that execute outside net environment access to com components is provided in codice and codice namespaces of the framework access to other functionality is achieved using the pinvoke feature as well as access to net functionality from native applications using the reverse pinvoke functionality language independence net framework introduces a common type system cts that defines all possible data types and programming constructs supported by clr and how they may or may not interact with each other conforming to cli specification because of this feature net framework supports the exchange of types and object instances between libraries and applications written using any conforming net language type safety the cts and the clr used in net framework also enforces type safety this prevents illdefined casts wrong method invocations and memory size issues when accessing an object this also makes most cli languages statically typed with or without type inference however beginning with net framework  the dynamic language runtime extended the clr allowing dynamically typed languages to be implemented on top of the cli portability while microsoft has never implemented the full framework on any system except microsoft windows it has engineered the framework to be platformagnostic and crossplatform implementations are available for other operating systems see silverlight and  alternative implementations microsoft submitted the specifications for cli which includes the core class libraries cts and cil c and ccli to both ecma and iso making them available as official standards this makes it possible for third parties to create compatible implementations of the framework and its languages on other platforms security net framework has its own security mechanism with two general features code access security cas and validation and verification cas is based on evidence that is associated with a specific assembly typically the evidence is the source of the assembly whether it is installed on the local machine or has been downloaded from the intranet or internet cas uses evidence to determine the permissions granted to the code other code can demand that calling code be granted a specified permission the demand causes clr to perform a call stack walk every assembly of each method in the call stack is checked for the required permission if any assembly is not granted the permission a security exception is thrown managed cil bytecode is easier to reverseengineer than native code unless obfuscated net decompiler programs enable developers with no reverseengineering skills to view the source code behind unobfuscated net assemblies in contrast apps compiled to native machine code are much harder to reverseengineer and source code is almost never produced successfully mainly because of compiler optimizations and lack of reflection one concern is over possible loss of trade secrets and the bypassing of license control mechanisms to mitigate this microsoft has included dotfuscator community edition with visual studio net since  thirdparty obfuscation tools are also available from vendors such as vmware vi labs xenocode and red gate software methodlevel encryption tools for net code are available from vendors such as safenet memory management clr frees the developer from the burden of managing memory allocating and freeing up when done it handles memory management itself by detecting when memory can be safely freed instantiations of net types objects are allocated from the managed heap a pool of memory managed by clr as long as there exists a reference to an object which might be either a direct reference to an object or via a graph of objects the object is considered to be in use when there is no reference to an object and it cannot be reached or used it becomes garbage eligible for collection net framework includes a garbage collector gc which runs periodically on a separate thread from the applications thread that enumerates all the unusable objects and reclaims the memory allocated to them it is a nondeterministic compacting markandsweep garbage collector gc runs only when a certain amount of memory has been used or there is enough pressure for memory on the system since it is not guaranteed when the conditions to reclaim memory are reached gc runs are nondeterministic each net application has a set of roots which are pointers to objects on the managed heap managed objects these include references to static objects and objects defined as local variables or method parameters currently in scope as well as objects referred to by cpu registers when gc runs it pauses the application and then for each object referred to in the root it recursively enumerates all the objects reachable from the root objects and marks them as reachable it uses cli metadata and reflection to discover the objects encapsulated by an object and then recursively walk them it then enumerates all the objects on the heap which were initially allocated contiguously using reflection all objects not marked as reachable are garbage this is the mark phase since the memory held by garbage is not of any consequence it is considered free space however this leaves chunks of free space between objects which were initially contiguous the objects are then compacted together to make free space on the managed heap contiguous again any reference to an object invalidated by moving the object is updated by gc to reflect the new location the application is resumed after the garbage collection is over the latest version of net framework uses concurrent garbage collection along with user code making pauses unnoticeable because it is done in the background gc used by net framework is also generational objects are assigned a generation newly created objects belong to generation  the objects that survive a garbage collection are tagged as generation  and the generation  objects that survive another collection are generation  objects net framework uses up to generation  objects higher generation objects are garbage collected less frequently than lower generation objects this helps increase the efficiency of garbage collection as older objects tend to have a longer lifetime than newer objects thus by eliminating older and thus more likely to survive a collection objects from the scope of a collection run fewer objects need to be checked and compacted simplified deployment net framework includes design features and tools which help manage the installation of computer software to ensure that it does not interfere with previously installed software and that it conforms to security requirements performance when an application is first launched the net framework compiles the cil code into executable code using its justintime compiler and caches the executable program into the net native image cache due to caching the application launches faster for subsequent launches although the first launch is usually slower to increase speed of the first launch developers may use the native image generator utility to manually compile and cache any net application aheadoftime the garbage collector which is integrated into the environment can introduce unanticipated delays of execution over which the developer has little direct control in large applications the number of objects that the garbage collector needs to deal with can become very large which means it can take a very long time to visit and rearrange all of them net framework provides support for calling streaming simd extensions sse via managed code from april  in visual studio  update  however mono has provided support for simd extensions as of version  within the namespace before monos lead developer miguel de icaza has expressed hope that this simd support will be adopted by clrs ecma standard streaming simd extensions have been available in x cpus since the introduction of the pentium iii some other architectures such as arm and mips also have simd extensions in case the cpu lacks support for those extensions the instructions are simulated in software alternative implementations net framework is the predominant implementation of net technologies other implementations for parts of the framework exist although the runtime engine is described by an ecmaiso specification other implementations of it may be encumbered by patent issues iso standards may include the disclaimer attention is drawn to the possibility that some of the elements of this document may be the subject of patent rights iso shall not be held responsible for identifying any or all such patent rights it is more difficult to develop alternatives to fcl which is not described by an open standard and may be subject to copyright restrictions additionally parts of fcl have windowsspecific functionality and behavior so implementation on nonwindows platforms can be problematic some alternative implementations of parts of the framework are listed here net core net core is a crossplatform free and opensource managed software framework similar to net framework it consists of coreclr a complete crossplatform runtime implementation of clr the virtual machine that manages the execution of net programs coreclr comes with an improved justintime compiler called ryujit also includes corefx which is a partial fork of fcl while net core shares a subset of net framework apis it comes with its own api that is not part of net framework further net core contains corert the net native runtime optimized to be integrated into aot compiled native binaries a variant of the net core library is utilized for uwp s commandline interface offers an execution entry point for operating systems and provides developer services like compilation and package management net core supports four crossplatform scenarios aspnet core web apps commandline apps libraries and universal windows platform apps it does not implement windows forms or wpf which render the standard gui for desktop software on windows is also modular meaning that instead of assemblies developers deal with nuget packages unlike net framework which is serviced using windows update net core relies on its package manager to receive updates net core  was released on  june  along with visual studio  update  which enables net core development net standard net standard is a set of apis to unify the net framework net core and xamarin platforms licensing microsoft managed code frameworks and their components are licensed as follows