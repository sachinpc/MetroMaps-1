java authentication and authorization service java authentication and authorization service or jaas pronounced jazz is the java implementation of the standard pluggable authentication module pam information security framework jaas was introduced as an extension library to the java platform standard edition  and was integrated in version  the main goal of jaas is to separate the concerns of user authentication so that they may be managed independently while the former authentication mechanism contained information about where the code originated from and who signed that code jaas adds a marker about who runs the code by extending the verification vectors jaas extends the security architecture for java applications that require authentication and authorization modules administration for the system administrator jaas consists of two kinds of configuration file for example an application may have this loginconf file indicating how different authentication mechanisms are to be run to authenticate the user application interface for the application developer jaas is a standard library that provides security system integration for the security system integrator jaas provides interfaces login modules login modules are primarily concerned with authentication rather than authorization and form a widely used component of jaas a login module is required to implement the javaxsecurityauthspiloginmodule interface which specifies the following methods note a subject is the user that is attempting to log in login modules can provide single sign on sso via a particular sso protocolframework eg saml openid and spnego can check for the presence of hardware security tokens eg usb token etc in an ntier application login modules can be present on both the client side and server side loginmodule javaxsecurityauthspiloginmodule login modules are written by implementing this interface they contain the actual code for authentication it can use various mechanisms to authenticate user credentials the code could retrieve a password from a database and compare it to the password supplied to the module logincontext javaxsecurityauthloginlogincontext the login context is the core of the jaas framework which kicks off the authentication process by creating a subject as the authentication process proceeds the subject is populated with various principals and credentials for further processing subject javaxsecurityauthsubject a subject represents a single user entity or system in other words a client requesting authentication principal javasecurityprincipal a principal represents the face of a subject it encapsulates features or properties of a subject a subject can contain multiple principals credentials credentials are nothing but pieces of information regarding the subject in consideration they might be account numbers passwords certificates etc as the credential represents some important information the further interfaces might be useful for creating a proper and secure credential  javaxsecurityauthdestroyable and javaxsecurityauthrefreshable suppose that after the successful authentication of the user you populate the subject with a secret id in the form of a credential with which the subject can execute some critical services but the credential should be removed after a specific time in that case one might want to implement the destroyable interface refreshable might be useful if a credential has only a limited timespan in which it is valid form authentication form authentication is another commonly used part of jaas in this process the user is typically presented with a web page containing a form asking for a username and password this data is then submitted via post to a url containing the text jsecuritycheck eg wwwexamplecomjsecuritycheck  the credentials are checked on the server side and a session id is returned to the client via a cookie this authentication method is flexible in that a java http client such as apache http client can be used in place of a webbrowser eg in a desktop application as long as the following standard steps are followed additional assertions can be added to the above process