typescript typescript is a free and open source programming language developed and maintained by microsoft it is a strict superset of javascript and adds optional static typing and classbased objectoriented programming to the language anders hejlsberg lead architect of c and creator of delphi and turbo pascal has worked on the development of typescript typescript may be used to develop javascript applications for clientside or serverside nodejs execution typescript is designed for development of large applications and transcompiles to javascript as typescript is a superset of javascript any existing javascript programs are also valid typescript programs typescript supports definition files that can contain type information of existing javascript libraries much like cc header files can describe the structure of existing object files this enables other programs to use the values defined in the files as if they were statically typed typescript entities there are thirdparty header files for popular libraries like jquery mongodb and djs typescript headers for the nodejs basic modules are also available allowing development of nodejs programs within typescript the typescript compiler is itself written in typescript transcompiled to javascript and licensed under the apache  license typescript is included as a firstclass programming language in microsoft visual studio  update  and later beside c and other microsoft languages an official extension allows visual studio  to support typescript as well history typescript was first made public in october  at version  after two years of internal development at microsoft soon after the announcement miguel de icaza praised the language itself but criticized the lack of mature ide support apart from microsoft visual studio which is not available on linux and os x there is support in other ides particularly in eclipse via a plugin contributed by palantir technologies various text editors including emacs vim and sublime also support typescript an atom plugin is also available typescript  released in  added support for generics typescript  was released at build  visual studio  update  provides builtin support for typescript in july  the development team announced a new typescript compiler claiming  performance gains simultaneously the source code which was initially hosted on codeplex was moved to github on september   typescript  was released it introduced several features including the ability for programmers to optionally prevent variables from being assigned values language design typescript originated from the perceived shortcomings of javascript for the development of largescale applications both at microsoft and among their external customers challenges with dealing with complex javascript code led to demand for custom tooling to ease developing of components in the language typescript developers sought a solution that would not break compatibility with the standard and its crossplatform support knowing that the current ecmascript standard proposal promised future support for classbased programming typescript was based on that proposal that led to a javascript compiler with a set of syntactical language extensions a superset based on the proposal that transforms the extensions into regular javascript in this sense typescript was a preview of what to expect of ecmascript  a unique aspect not in the proposal but added to typescript is optional static typing that enables static language analysis which facilitates tooling and ide support ecmascript  support typescript adds support for features such as classes modules and an arrow function syntax as proposed in the ecmascript  standard language features typescript is a language extension that adds features to ecmascript  additional features include the following features are backported from ecmascript  syntactically typescript is very similar to jscript net another microsoft implementation of the ecma language standard that added support for static typing and classical objectoriented language features such as classes inheritance interfaces and namespaces compatibility with javascript typescript is a strict superset of ecmascript  which is a superset of ecmascript  commonly referred to as javascript as such a javascript program is also a valid typescript program and a typescript program can seamlessly consume javascript by default the compiler targets ecmascript  the current prevailing standard but is also able to generate constructs used in ecmascript  or  with typescript it is possible to use existing javascript code incorporate popular javascript libraries and call typescriptgenerated code from other javascript type declarations for these libraries are provided with the source code type annotations typescript provides static typing through type annotations to enable type checking at compile time this is optional and can be ignored to use the regular dynamic typing of javascript the annotations for the primitive types are codice codice and codice weakly or dynamicallytyped structures are of type codice type annotations can be exported to a separate declarations file to make type information available for typescript scripts using types already compiled into javascript annotations can be declared for an existing javascript library as has been done for nodejs and jquery the typescript compiler makes use of type inference to infer types when types are not given for example the codice method in the code above would be inferred as returning a codice even if no return type annotation had been provided this is based on the static types of codice and codice being codice and the compilers knowledge that the result of adding two codice is always a codice however explicitly declaring the return type allows the compiler to verify correctness if no type can be inferred because of lack of declarations then it defaults to the dynamic codice type a value of the codice type supports the same operations as a value in javascript and minimal static type checking is performed for operations on codice values declaration files when a typescript script gets compiled there is an option to generate a declaration file with the extension codice that functions as an interface to the components in the compiled javascript in the process the compiler strips away all function and method bodies and preserves only the signatures of the types that are exported the resulting declaration file can then be used to describe the exported virtual typescript types of a javascript library or module when a thirdparty developer consumes it from typescript the concept of declaration files is analogous to the concept of header file found in cc type declaration files can be written by hand for existing javascript libraries as has been done for jquery and nodejs large collections of declaration files for popular javascript libraries are hosted on github in definitelytyped and the typings registry a commandline utility called codice is provided to help search and install declaration files from the repositories classes typescript supports ecmascript  classes that integrate the optional type annotations support generics typescript supports generic programming modules and namespaces typescript distinguishes between modules and namespaces both features in typescript support encapsulation of classes interfaces functions and variables into containers namespaces formerly internal modules utilizes immediatelyinvoked function expression of javascript to encapsulate code whereas modules formerly external modules leverage javascript library patterns to do so amd or commonjs development tools compiler the typescript compiler named codice is written in typescript that can be compiled into regular javascript that can be executed in any javascript engine in any host such as a browser the compiler package comes bundled with a script host that can execute the compiler it is also available as a nodejs package that uses nodejs as a host there is also an alpha version of a clientside compiler in javascript which executes typescript code on the fly upon page load the current version of the compiler supports ecmascript  by default an option is allowed to target ecmascript  to make use of language features exclusive to that version eg generators classes despite being part of the ecmascript  standard are available in both modes integration with build automation tools using plugins typescript can be integrated with build automation tools including grunt gruntts apache maven typescript maven plugin and gradle typescript gradle plugin references typescript  what is it why to use it how to install and compile it