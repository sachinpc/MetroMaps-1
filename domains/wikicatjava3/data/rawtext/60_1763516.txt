embedded java embedded java refers to versions of the java program language that are designed for embedded systems since  convergence has occurred and embedded implementations are now virtually identical to pc based version history although in the past some differences existed between embedded java and traditional pc based java solutions the only difference now is that embedded java code in these embedded systems is mainly contained in constrained memory such as flash memory a complete convergence has taken place since  and now java software components running on large systems can run directly with no recompilation at all on designtocost massproduction devices such as consumers industrial white goods healthcare metering smart markets in general recent recent developments in the field are core embedded java api for a unified embedded java ecosystem in order for a software component to run on any java system it must target the core minimal api provided by the different providers of the embedded java ecosystem companies such as aplix google ist myriad oracle  share the same eight packages of prewritten programs the packages javalang javaio javautil   form the core embedded java api which means that embedded programmers using the java language can use them in order to make any worthwhile use of the java language java se embedded api from oracle java se embedded is based on desktop java platform standard edition it is designed to be used on systems with at least  mb of ram and can work on linux arm x or power architecture and windows xp and windows xp embedded architectures java me embedded api from oracle java me embedded is based on the connected device configuration subset of java platform micro edition it is designed to be used on systems with at least  mb of ram and can work on linux arm powerpc or mips architecture the offering of java for embedded devices is growing fast with a large ecosystem of companies that provide embedded java virtual machines for arm mcu based cortexm serie such as st freescale renesas nxp and mpu based solution such as ti renesas freescale embedded java minimal requirements starts at only kb of internal flash and less than kb of internal ram in order to save bill of material most embedded java engines execute code in place which avoids copying the code in ram embedded device configuration api from esr consortium the embedded device configuration specification defines the minimal embedded standard runtime environment for embedded java devices it defines all the default core api packages  classesinterfaces