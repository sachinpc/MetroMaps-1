swig the simplified wrapper and interface generator swig is an opensource software tool used to connect computer programs or libraries written in c or c with scripting languages such as lua perl php python r ruby tcl and other languages like c java javascript go modula ocaml octave scilab and scheme output can also be in the form of xml or lisp sexpressions function the aim is to allow the calling of native functions that were written in c or c by other programming languages passing complex data types to those functions keeping memory from being inappropriately freed inheriting object classes across languages etc the programmer writes an interface file containing a list of cc functions to be made visible to an interpreter swig will compile the interface file and generate code in regular cc and the target programming language swig will generate conversion code for functions with simple arguments conversion code for complex types of arguments must be written by the programmer the swig tool creates source code that provides the glue between cc and the target language depending on the language this glue comes in two forms swig is not used for calling interpreted functions by native code this must be done by the programmer manually example swig wraps simple c declarations by creating an interface that closely matches the way in which the declarations would be used in a c program for example consider the following interface file in this file there are two functions and  a global variable  and two constants and  when swig creates an extension module these declarations are accessible as scripting language functions variables and constants respectively in python purpose there are two main reasons to embed a scripting engine in an existing cc program there are several reasons to create dynamic libraries that can be loaded into extant interpreters including history swig is written in c and c and has been publicly available since february  the initial author and main developer was dave beazley who developed swig while working as a graduate student at los alamos national laboratory and the university of utah and while on the faculty at the university of chicago development is currently supported by an active group of volunteers led by william fulton swig has been released under a gnu general public license google summer of code swig was a successful participant of google summer of code in    in  swig got four slots haoyu bai spent his summers on swigs python  backend jan jezabek worked on support for generating com wrappers cheryl foil spent her time on comment translator for swig and maciej drwal worked on a c backend in  swig again participated in google summer of code this time four students participated baozeng ding worked on a scilab module matevz jekovec spent time on cx features ashish sharma spent his summer on an objectivec module miklos vajna spent his time on php directors in  swig participated in google summer of code this time four out of five students successfully completed the project leif middelschulte worked on a c target language module swati sharma enhanced the objectivec module neha narang added the new module on javascript dmitry kabak worked on source code documentation and doxygen comments alternatives for python similar functionality is offered by sip and boosts boostpython library