gtk gtk formerly gimp toolkit is a crossplatform widget toolkit for creating graphical user interfaces it is licensed under the terms of the gnu lesser general public license allowing both free and proprietary software to use it it is one of the most popular toolkits for the wayland and x windowing systems along with qt software architecture the gtk library contains a set of graphical control elements widgets version  contains  active and  deprecated widgets gtk is an objectoriented widget toolkit written in the c programming language it uses gobject that is the glib object system for the object orientation while gtk is primarily targeted at windowing systems based upon x and wayland it works on other platforms including microsoft windows interfaced with the windows api and mac os x interfaced with quartz there is also an html backend called broadway gtk can be configured to change the look of the widgets drawn this is done using different display engines several display engines exist which try to emulate the look of the native widgets on the platform in use starting with version  released in  gtk began the transition to using cairo to render the majority of its graphical control elements since gtk version  all the rendering is done using cairo gtk scene graph kit gsk in  gtk  started utilizing cairo to render the majority of its graphical control elements since gtk version  all the rendering is done using cairo in june  clutter an openglbased interactive canvas library was released clutter has its own scene graph and gnome developers preferred to use clutters scene graph with gtk facilitated by a library called cluttergtk clutter can be embedded into every gnome application by using the cluttergtk library the cluttergtk library provides a gtkclutterembed gtk widget which can be used to display a clutterstage some thought went into how to merge clutter and gtk in a better way than the cluttergtk library in  firefox introduced azure and joe drew and bas schouten bothered with some explanations there was a presentation at the  developer experience hackfest regarding a new scene graph for gtk aimed at being merged into gtk  then gsk was planned to be ready and fully integrated into gtk version  to be released in march  this was postponed to  and then again it was postponed to  having opengl or opengl es support in gdk facilitates a slightly better control of the graphics pipeline opengl is well suited for compositing textured data but totally unsuited for drawing before the adoption of gsk application developers could optionally use clutter the way widgets were drawn in gtk was that a draw function drew everything there was no way to know what has just been drawn to know where the mouse pointer was currently hovering over the current position had to be computed with gsk it should be fairly easy to write complex graphical control elements widgets and still track easily the whereabout of the mouse pointer getting more conformation with css should also arrive the latest information about the status of gsk is from guadec  gtkinspector gtkinspector has been introduced with version  gtkinspector can only be invoked after installing the development package libgtkdevgtkdevel gui designers there are several gui designers for gtk the following projects are active as of july  gtkbuilder gtkbuilder allows user interfaces to be designed without writing code the interface is described in an extensible markup language xml file which is then loaded at runtime and the objects created automatically the glade interface designer allows creation of the user interface in a wysiwyg manner the description of the user interface is independent from the programming language being used language bindings a library written in one programming language may be used in another language if bindings are written gtk has a range of bindings for various languages gtk gtk is a set of net bindings for the gtk gui toolkit and assorted gnome libraries the library facilitates building graphical gnome applications using mono or any other compliant clr gtk is an eventdriven system like any other modern windowing library where every widget allows you to associate handler methods which get called when particular events happen applications built using gtk will run on many platforms including linux windows and os x the mono packages for windows include gtk gtk and a native theme to make applications look like native windows applications starting with mono  running gtk applications on mac os x no longer requires the user to run the x server glade can be used with the glade bindings to easily design gui applications a gui designer called stetic is integrated with the monodevelop ide in addition to support the standard gtkgnome stack of development tools the gtkdotnetdll assembly provides a bridge to consume functionality available on the net stack at this point this includes the functionality to use systemdrawing to draw on a widget development gtk is mainly developed by the gnome project which also develops the gnome development platform and the gnome desktop environment gtk development is loosely managed discussion chiefly occurs on a number of public mailing lists gnome developers and users gather at an annual guadec meeting to discuss the current state and the future direction of gnome gnome incorporates standards and programs from freedesktoporg to better interoperate with other desktops gtk is mainly written in c a number of language bindings are available on september   a post on the gtk development blog denoted among other things the future numbering scheme of gtk gtk version  from autumn  shall be the last x release after that all resources will flow into the gtk  development series with the version names   etc whether the numerous application that still use gtk x even the wikipedia has a couple of articles on  will be ported to  or not only the future can show build automation in former times gtk and gnome glib etc utilized the gnu build system called autotools as the build automation system of choice the meson build system is being prepared to be used with gtk at saturday  august at guadec nirbheek chauhan hold a talk titled making your gnome app compile x faster the video is available on youtube criticisms the most common criticism towards gtk is a lack of backwardscompatibility in major updates most notably in the api and theming the compatibility breaks between minor releases during the gtk x development cycle has been explained by benjamin otte as due to strong pressures to innovate such as providing the features modern users expect and supporting the increasingly influential wayland display server protocol with the release of gtk  the pressure from the need to innovate will have been released and the balance between stability and innovation will tip towards stability similarly recent changes to theming are specifically intended to improve and stabilise that part of the api meaning some investment now should be rewarded later uses applications some notable applications that use or once used gtk as a widget toolkit include desktop environments several desktop environments utilize gtk as the widget toolkit gtk programs can run on top of xbased desktop environments or window managers even those not made with gtk provided the required libraries are installed this includes mac os x if xapp is installed gtk can also run under microsoft windows where it is used by some popular crossplatform applications like pidgin and gimp wxwidgets a crossplatform gui toolkit uses gtk for gnulinux operating systems other ports include directfb used by the debian installer for example and ncurses window managers the following window managers use gtk example the following code presents a graphical gtk helloworld program in the c programming language this program has a window with the title hello world and a label with similar text needs installing the libraries first in debian or derivatives codice using pkgconfig in a unix shell this code can be compiled with the following command assume above source has file name helloworldc codice invoke the program codice history gtk was originally designed and used in the gnu image manipulation program gimp as a replacement of the motif toolkit at some point peter mattis became disenchanted with motif and began to write his own gui toolkit called the gimp toolkit and had successfully replaced motif by the  release of gimp finally gtk was rewritten to be objectoriented and was renamed gtk this was first used in the  release of gimp gtk was subsequently adopted for maintenance by the gnome foundation which uses it in the gnome desktop environment the gtk  release series introduced new features which include improved text rendering using pango a new theme engine improved accessibility using the accessibility toolkit transition to unicode using utf strings and a more flexible api starting with version  gtk  depends on the cairo graphics library for rendering vector graphics gtk version  included revised input device handling support for themes written with csslike syntax and the ability to receive information about other opened gtk applications releases the gnome team releases new versions on a regular basis