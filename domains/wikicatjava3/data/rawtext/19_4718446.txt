java software platform java is a set of computer software and specifications developed by sun microsystems which was later acquired by the oracle corporation that provides a system for developing application software and deploying it in a crossplatform computing environment java is used in a wide variety of computing platforms from embedded devices and mobile phones to enterprise servers and supercomputers while they are less common than standalone java applications java applets run in secure sandboxed environments to provide many features of native applications and can be embedded in html pages writing in the java programming language is the primary way to produce code that will be deployed as byte code in a java virtual machine jvm byte code compilers are also available for other languages including ada javascript python and ruby in addition several languages have been designed to run natively on the jvm including scala clojure and apache groovy java syntax borrows heavily from c and c but objectoriented features are modeled after smalltalk and objectivec java eschews certain lowlevel constructs such as pointers and has a very simple memory model where every object is allocated on the heap and all variables of object types are references memory management is handled through integrated automatic garbage collection performed by the jvm on november   sun microsystems made the bulk of its implementation of java available under the gnu general public license gpl the latest version is java  the only supported with eg security updates version as of  oracle and others has announced that using older versions than java  of their jvm implementation presents serious risks due to unresolved security issues platform the java platform is a suite of programs that facilitate developing and running programs written in the java programming language a java platform will include an execution engine called a virtual machine a compiler and a set of libraries there may also be additional servers and alternative libraries that depend on the requirements java is not specific to any processor or operating system as java platforms have been implemented for a wide variety of hardware and operating systems with a view to enable java programs to run identically on all of them different platforms target different classes of device and application domains the java platform consists of several programs each of which provides a portion of its overall capabilities for example the java compiler which converts java source code into java bytecode an intermediate language for the jvm is provided as part of the java development kit jdk the java runtime environment jre complementing the jvm with a justintime jit compiler converts intermediate bytecode into native machine code on the fly the java platform also includes an extensive set of libraries the essential components in the platform are the java language compiler the libraries and the runtime environment in which java intermediate bytecode executes according to the rules laid out in the virtual machine specification java virtual machine the heart of the java platform is the concept of a virtual machine that executes java bytecode programs this bytecode is the same no matter what hardware or operating system the program is running under there is a jit just in time compiler within the java virtual machine or jvm the jit compiler translates the java bytecode into native processor instructions at runtime and caches the native code in memory during execution the use of bytecode as an intermediate language permits java programs to run on any platform that has a virtual machine available the use of a jit compiler means that java applications after a short delay during loading and once they have warmed up by being all or mostly jitcompiled tend to run about as fast as native programs since jre version  suns jvm implementation has included a justintime compiler instead of an interpreter although java programs are crossplatform or platform independent the code of the java virtual machines jvm that execute these programs is not every supported operating platform has its own jvm class libraries in most modern operating systems oss a large body of reusable code is provided to simplify the programmers job this code is typically provided as a set of dynamically loadable libraries that applications can call at runtime because the java platform is not dependent on any specific operating system applications cannot rely on any of the preexisting os libraries instead the java platform provides a comprehensive set of its own standard class libraries containing many of the same reusable functions commonly found in modern operating systems most of the system library is also written in java for instance the swing library paints the user interface and handles the events itself eliminating many subtle differences between how different platforms handle components the java class libraries serve three purposes within the java platform first like other standard code libraries the java libraries provide the programmer a wellknown set of functions to perform common tasks such as maintaining lists of items or performing complex string parsing second the class libraries provide an abstract interface to tasks that would normally depend heavily on the hardware and operating system tasks such as network access and file access are often heavily intertwined with the distinctive implementations of each platform the codice and codice libraries implement an abstraction layer in native os code then provide a standard interface for the java applications to perform those tasks finally when some underlying platform does not support all of the features a java application expects the class libraries work to gracefully handle the absent components either by emulation to provide a substitute or at least by providing a consistent way to check for the presence of a specific feature languages the word java alone usually refers to java programming language that was designed for use with the java platform programming languages are typically outside of the scope of the phrase platform although the java programming language was listed as a core part of the java platform before java  the language and runtime were therefore commonly considered a single unit however an effort was made with the java  specification to more clearly treat the java language and the java virtual machine as separate entities so that they are no longer considered a single unit third parties have produced many compilers or interpreters that target the jvm some of these are for existing languages while others are for extensions to the java language these include similar platforms the success of java and its write once run anywhere concept has led to other similar efforts notably the net framework appearing since  which incorporates many of the successful aspects of java net in its complete form microsofts implementation is currently only fully available on windows platforms whereas java is fully available on many platforms net was built from the groundup to support multiple programming languages while the java platform was initially built to support only the java language although many other languages have been made for jvm since net includes a javalike language called visual j formerly named j that is incompatible with the java specification and the associated class library mostly dates to the old jdk  version of the language for these reasons it is more of a transitional language to switch from java to the net platform than it is a first class net language visual j was discontinued with the release of microsoft visual studio  the existing version shipping with visual studio  will be supported until  as per the product lifecycle strategy java development kit the java development kit jdk is a sun product aimed at java developers since the introduction of java it has been by far the most widely used java software development kit sdk it contains a java compiler a full copy of the java runtime environment jre and many other important development tools history the java platform and language began as an internal project at sun microsystems in december  providing an alternative to the cc programming languages engineer patrick naughton had become increasingly frustrated with the state of suns c and c application programming interfaces apis and tools while considering moving to next naughton was offered a chance to work on new technology and thus the stealth project started the stealth project was soon renamed to the green project with james gosling and mike sheridan joining naughton together with other engineers they began work in a small office on sand hill road in menlo park california they aimed to develop new technology for programming nextgeneration smart appliances which sun expected to offer major new opportunities the team originally considered using c but rejected it for several reasons because they were developing an embedded system with limited resources they decided that c needed too much memory and that its complexity led to developer errors the languages lack of garbage collection meant that programmers had to manually manage system memory a challenging and errorprone task the team also worried about the c languages lack of portable facilities for security distributed programming and threading finally they wanted a platform that would port easily to all types of devices bill joy had envisioned a new language combining mesa and c in a paper called further he proposed to sun that its engineers should produce an objectoriented environment based on c initially gosling attempted to modify and extend c a proposed development that he referred to as c   but soon abandoned that in favor of creating a new language which he called oak after the tree that stood just outside his office by the summer of  the team could demonstrate portions of the new platform including the green os the oak language the libraries and the hardware their first demonstration on september   focused on building a personal digital assistant pda device named star that had a graphical interface and a smart agent called duke to assist the user in november of that year the green project was spun off to become firstperson a wholly owned subsidiary of sun microsystems and the team relocated to palo alto california the firstperson team had an interest in building highly interactive devices and when time warner issued a request for proposal rfp for a settop box firstperson changed their target and responded with a proposal for a settop box platform however the cable industry felt that their platform gave too much control to the user so firstperson lost their bid to sgi an additional deal with the do company for a settop box also failed to materialize unable to generate interest within the television industry the company was rolled back into sun java meets the web in june and july   after three days of brainstorming with john gage the director of science for sun gosling joy naughton wayne rosing and eric schmidt  the team retargeted the platform for the world wide web they felt that with the advent of graphical web browsers like mosaic the internet could evolve into the same highly interactive medium that they had envisioned for cable tv as a prototype naughton wrote a small browser webrunner named after the movie blade runner renamed hotjava in  in  sun renamed the oak language as java after a trademark search revealed that oak technology used the name oak although java a became available for download in  the first public release of java java a with the hotjava browser came on may   announced by gage at the sunworld conference accompanying gages announcement marc andreessen executive vice president of netscape communications corporation unexpectedly announced that netscape browsers would include java support on january   sun microsystems formed the javasoft group to develop the technology version history the java language has undergone several changes since the release of jdk java development kit  on january   as well as numerous additions of classes and packages to the standard library since jse  the java community process jcp has governed the evolution of the java language the jcp uses java specification requests jsrs to propose and specify additions and changes to the java platform the java language specification jls specifies the language changes to the jls are managed under jsr  sun released jdk  on february   major additions included an extensive retooling of the awt event model inner classes added to the language javabeans and jdbc jse  december    codename playground this and subsequent releases through jse  were rebranded java  and the version name jse java  platform standard edition replaced jdk to distinguish the base platform from jee java  platform enterprise edition and jme java  platform micro edition major additions included reflection a collections framework java idl an interface description language implementation for corba interoperability and the integration of the swing graphical api into the core classes a java plugin was released and suns jvm was equipped with a jit compiler for the first time jse  may    codename kestrel notable changes included the bundling of the hotspot jvm the hotspot jvm was first released in april  for the jse  jvm javasound java naming and directory interface jndi and java platform debugger architecture jpda jse  february    codename merlin this became the first release of the java platform developed under the java community process as jsr  major changes included regular expressions modeled after perl exception chaining an integrated xml parser and xslt processor jaxp and java web start jse  september    codename tiger it was originally numbered  which is still used as the internal version number developed under jsr  tiger added several significant new language features including the foreach loop generics autoboxing and varargs java se  december    codename mustang it was bundled with a database manager and facilitates the use of scripting languages with the jvm such as javascript using mozillas rhino engine as of this version sun replaced the name jse with java se and dropped the  from the version number other major changes include support for pluggable annotations jsr  many gui improvements including native ui enhancements to support the look and feel of windows vista and improvements to the java platform debugger architecture jpda  jvm tool interface for better monitoring and troubleshooting java se  july    codename dolphin this version developed under jsr  it added many small language changes including strings in switch trywithresources and type inference for generic instance creation the jvm was extended with support for dynamic languages while the class library was extended among others with a joinfork framework an improved new file io library and support for new network protocols such as sctp java  update  was released in january  with expiration date april   in june  after last public update of java  remotely exploitable security bugs in java   and  where announced the version java se  march   notable changes include languagelevel support for lambda expressions closures and default methods the project nashorn javascript runtime a new date and time api inspired by joda time and the removal of permgen this version is not officially supported on the windows xp platform however due to the end of java s lifecycle it is the recommended version for xp users previously only an unofficial manual installation method had been described for windows xp sp it refers to jdk the developing platform for java that also includes a fully functioning java runtime environment java  is supported on windows server  r sp windows vista sp and windows  sp ubuntu  lts and higher and some other oses jdk  early access requires windows  sp windows server  ubuntu  lts or higher or other supported os such as os x or solaris in addition to language changes significant changes have been made to the java class library over the years which has grown from a few hundred classes in jdk  to over three thousand in jse  entire new apis such as swing and java d have evolved and many of the original jdk  classes and methods have been deprecated usage desktop use according to oracle the java runtime environment is found on over  million pcs microsoft has not bundled a java runtime environment jre with its operating systems since sun microsystems sued microsoft for adding windowsspecific classes to the bundled java runtime environment and for making the new classes available through visual j apple no longer includes a java runtime with os x as of version  but the system prompts the user to download and install it the first time an application requiring the jre is launched many linux distributions include the partially compatible free software package gnu classpath and increasingly mostly compatible icedtea some java applications are in fairly widespread desktop use including the netbeans and eclipse integrated development environments and file sharing clients such as limewire and vuze java is also used in the matlab mathematics programming environment both for rendering the user interface and as part of the core system java provides cross platform user interface for some high end collaborative applications like lotus notes oracle plans to first deprecate the separately installable java browser plugin from the java runtime environment in jdk  then remove it completely from a future release forcing web developers to use an alternative technology mobile devices java me has become popular in mobile devices where it competes with symbian brew and the net compact framework the diversity of mobile phone manufacturers has led to a need for new unified standards so programs can run on phones from different suppliers  midp the first standard was midp  which assumed a small screen size no access to audio and a kb program limit the more recent midp  allows access to audio and up to kb for the program size with handset designs improving more rapidly than the standards some manufacturers relax some limitations in the standards for example maximum program size googles android operating system uses the java language but not its class libraries therefore the android platform cannot be called java android executes the code on the art vm formerly the dalvik vm up to android  instead of the java vm web server and enterprise use the java platform has become a mainstay of enterprise it development since the introduction of the enterprise edition in  in two different ways enterprise use of java has also long been the main driver of open source interest in the platform this interest has inspired open source communities to produce a large amount of software including simple function libraries development frameworks eg the spring framework apache wicket dojo toolkit hibernate and open source implementations of standards and tools eg apache tomcat the glassfish application server the mule and apache servicemix enterprise service buses mascot duke is javas mascot when sun announced that java se and java me would be released under a free software license the gnu general public license they released the duke graphics under the free bsd license at the same time a new duke personality is created every year for example in july  future tech duke included a bigger nose a jetpack and blue wings licensing the source code for suns implementations of java ie the de facto reference implementation has been available for some time but until recently the license terms severely restricted what could be done with it without signing and generally paying for a contract with sun as such these terms did not satisfy the requirements of either the open source initiative or the free software foundation to be considered open source or free software and sun java was therefore a proprietary platform while several thirdparty projects eg gnu classpath and apache harmony created free software partial java implementations the large size of the sun libraries combined with the use of clean room methods meant that their implementations of the java libraries the compiler and vm are comparatively small and well defined were incomplete and not fully compatible these implementations also tended to be far less optimized than suns free software sun announced in javaone  that java would become free and open source software and on october   at the oracle openworld conference jonathan i schwartz said that the company was set to announce the release of the core java platform as free and open source software within  to  days sun released the java hotspot virtual machine and compiler as free software under the gnu general public license on november   with a promise that the rest of the jdk that includes the jre would be placed under the gpl by march  except for a few components that sun does not have the right to publish in distributable source form under the gpl according to richard stallman this would mean an end to the java trap mark shuttleworth called the initial press announcement a real milestone for the free software community sun released the source code of the class library under gpl on may   except some limited parts that were licensed by sun from rd parties who did not want their code to be released under a free software and opensource license some of the encumbered parts turned out to be fairly key parts of the platform such as font rendering and d rasterising but these were released as opensource later by sun see openjdk class library suns goal was to replace the parts that remain proprietary and closedsource with alternative implementations and make the class library completely free and open source in the meantime a third party project called icedtea created a completely free and highly usable jdk by replacing encumbered code with either stubs or code from gnu classpath although openjdk has since become buildable without the encumbered parts from openjdk  b icedtea is still used by the majority of distributions such as fedora rhel debian ubuntu gentoo arch linux and slackware as it provides security releases and an easier means for patch inclusion openjdk also still doesnt include a browser plugin  web start implementation so icedteas companion project icedteaweb is needed to fill this gap in june  it was announced that icedtea as the packaged version of openjdk on fedora  has passed the technology compatibility kit tests and can claim to be a fully compatible java  implementation because openjdk is under the gpl it is possible to redistribute a custom version of the jre directly with software applications rather than requiring the enduser or their sysadmin to download and install the correct version of the proprietary oracle jre onto each of their systems themselves criticism in most cases java support is unnecessary in web browsers and security experts recommend that it not be run in a browser unless absolutely necessary it was suggested that if java is required by a few web sites users should have a separate browser installation specifically for those sites generics when generics were added to java  there was already a large framework of classes many of which were already deprecated so generics were chosen to be implemented using erasure to allow for migration compatibility and reuse of these existing classes this limited the features that could be provided by this addition as compared to some other languages unsigned integer types java lacks native unsigned integer types unsigned data are often generated from programs written in c and the lack of these types prevents direct data interchange between c and java unsigned large numbers are also used in many numeric processing fields including cryptography which can make java less convenient to use for these tasks although it is possible to partially circumvent this problem with conversion code and using larger data types it makes using java cumbersome for handling the unsigned data while a bit signed integer may be used to hold a bit unsigned value with relative ease a bit unsigned value would require a bit signed integer additionally a bit unsigned value cannot be stored using any integer type in java because no type larger than  bits exists in the java language if abstracted using functions function calls become necessary for many operations which are native to some other languages alternatively it is possible to use javas signed integers to emulate unsigned integers of the same size but this requires detailed knowledge of complex bitwise operations floating point arithmetic while javas floating point arithmetic is largely based on ieee  standard for binary floatingpoint arithmetic certain features are not supported even when using the codice modifier such as exception flags and directed roundings  capabilities mandated by ieee standard  additionally the extended precision floatingpoint types permitted in  and present in many processors are not permitted in java performance in the early days of java before the hotspot vm was implemented in java  in  there were some criticisms of performance however benchmarks typically report java as being about  slower than c a language which compiles to native code javas performance has improved substantially since the early versions performance of jit compilers relative to native compilers has in some optimized tests been shown to be quite similar java bytecode can either be interpreted at run time by a virtual machine or it can be compiled at load time or runtime into native code which runs directly on the computers hardware interpretation is slower than native execution and compilation at load time or runtime has an initial performance penalty for the compilation modern performant jvm implementations all use the compilation approach so after the initial startup time the performance is equivalent to native code security the java platform provides a security architecture which is designed to allow the user to run untrusted bytecode in a sandboxed manner to protect against malicious or poorly written software this sandboxing feature is intended to protect the user by restricting access to certain platform features and apis which could be exploited by malware such as accessing the local filesystem running arbitrary commands or accessing communication networks in recent years researchers have discovered numerous security flaws in some widely used java implementations including oracles which allow untrusted code to bypass the sandboxing mechanism exposing users to malicious attacks these flaws affect only java applications which execute arbitrary untrusted bytecode such as web browser plugins that run java applets downloaded from public websites applications where the user trusts and has full control over all code that is being executed are unaffected on august   java  and  on microsoft windows mac os x and linux were found to have a serious security flaw that allowed a remote exploit to take place by simply loading a malicious web page was later found to be flawed as well on january   three computer specialists spoke out against java telling reuters that it was not secure and that people should disable java jaime blasco labs manager with alienvault labs stated that java is a mess its not secure you have to disable it this vulnerability affects and it is unclear if it affects  so it is suggested that consumers disable it security alerts from oracle announce schedules of critical securityrelated patches to java on january   security experts said that the update still failed to protect pcs from attack this exploit hole prompted a response from the united states department of homeland security encouraging users to disable or uninstall java apple blacklisted java in limited order for all computers running its mac os x operating system through a virus protection program responding to recent java security and vulnerability issues security blogger brian krebs has called for users to remove at least the java browser plugin and also the entire software i look forward to a world without the java plugin and to not having to remind readers about quarterly patch updates but it will probably be years before various versions of this plugin are mostly removed from enduser systems worldwide once promising it has outlived its usefulness in the browser and has become a nightmare that delights cybercriminals at the expense of computer users i think everyone should uninstall java from all their pcs and macs and then think carefully about whether they need to add it back if you are a typical home user you can probably do without it if you are a business user you may not have a choice adware the java runtime environment has a history of bundling sponsored software to be installed by default during installation and during the updates which roll out every month or so this includes the askcom toolbar that will redirect browser searches to ads and mcafee security scan plus these offers can be blocked through a setting in the java control panel although this is not obvious update system java is yet to release an automatic updater that does not require user intervention and administrative rights unlike google chrome and flash player