ecmascript ecmascript or es is a trademarked scriptinglanguage specification standardized by ecma international in ecma and isoiec  it was based on javascript which now tracks ecmascript it is commonly used for clientside scripting on the world wide web other implementations of ecmascript include jscript and actionscript history the ecmascript specification is a standardized specification of a scripting language developed by brendan eich of netscape initially it was named mocha later livescript and finally javascript in december  sun microsystems and netscape announced javascript in a press release in march  netscape navigator  was released featuring support for javascript owing to the widespread success of javascript as a clientside scripting language for web pages microsoft developed a compatible dialect of the language naming it jscript to avoid trademark issues jscript added new date methods to alleviate the year  problem caused by the javascript methods that were based on the java date class jscript was included in internet explorer  released in august  netscape delivered javascript to ecma international for standardization and the work on the specification ecma began in november  the first edition of ecma was adopted by the ecma general assembly of june  several editions of the language standard have been published since then the name ecmascript was a compromise between the organizations involved in standardizing the language especially netscape and microsoft whose disputes dominated the early standards sessions eich commented that ecmascript was always an unwanted trade name that sounds like a skin disease while both javascript and jscript aim to be compatible with ecmascript they also provide additional features not described in the ecma specifications versions there are seven editions of ecma published work on version  of the standard was finalized in june  in june  ecma international published ecma standard defining an extension to ecmascript known as ecmascript for xml ex ecma also defined a compact profile for ecmascript  known as escp or ecma   that was designed for resourceconstrained devices which was withdrawn in  th edition abandoned the proposed fourth edition of ecma ecmascript  or es would have been the first major update to ecmascript since the third edition was published in  the specification along with a reference implementation was originally targeted for completion by october  an overview of the language was released by the working group on october   by august  the ecmascript th edition proposal had been scaled back into a project codenamed ecmascript harmony features under discussion for harmony at the time included the intent of these features was partly to better support programming in the large and to allow sacrificing some of the scripts ability to be dynamic to improve performance for example tamarin  the virtual machine for actionscript developed and open sourced by adobe  has justintime compilation jit support for certain classes of scripts in addition to introducing new features some es bugs were proposed to be fixed in edition  these fixes and others and support for json encodingdecoding have been folded into the ecmascript th edition specification work started on edition  after the escp compact profile specification was completed and continued for approximately  months where slow progress was made balancing the theory of netscapes javascript  specification with the implementation experience of microsofts jscript net after some time the focus shifted to the ecmascript for xml ex standard the update has not been without controversy in late  a debate between eich later the mozilla foundations cto and chris wilson microsofts platform architect for internet explorer became public on a number of blogs wilson cautioned that because the proposed changes to ecmascript made it backwards incompatible in some respects to earlier versions of the language the update amounted to breaking the web and that stakeholders who opposed the changes were being hidden from view eich responded by stating that wilson seemed to be repeating falsehoods in blogs and denied that there was attempt to suppress dissent and challenged critics to give specific examples of incompatibility he also pointed out that microsoft silverlight and adobe air rely on c and actionscript  respectively both of which are larger and more complex than ecmascript edition  th edition yahoo microsoft google and other th edition dissenters formed their own subcommittee to design a less ambitious update of ecmascript  tentatively named ecmascript  this edition would focus on security and library updates with a large emphasis on compatibility after the aforementioned public sparring the ecmascript  and ecmascript  teams agreed on a compromise the two editions would be worked on in parallel with coordination between the teams to ensure that ecmascript  remains a strict subset of ecmascript  in both semantics and syntax however the differing philosophies in each team resulted in repeated breakages of the subset rule and it remained doubtful that the ecmascript  dissenters would ever support or implement ecmascript  in the future after over a year since the disagreement over the future of ecmascript within the ecma technical committee  the two teams reached a new compromise in july  brendan eich announced that ecma tc would focus work on the ecmascript  later renamed to ecmascript th edition project with full collaboration of all parties and vendors would target at least two interoperable implementations by early  in april  ecma tc published the final draft of the th edition and announced that testing of interoperable implementations was expected to be completed by midjuly on december   ecma th edition was published th edition  ecmascript  the th edition officially known as ecmascript  was finalized in june  this update adds significant new syntax for writing complex applications including classes and modules but defines them semantically in the same terms as ecmascript  strict mode other new features include iterators and forof loops pythonstyle generators and generator expressions arrow functions binary data typed arrays collections maps sets and weak maps promises number and math enhancements reflection and proxies metaprogramming for virtual objects and wrappers the complete list is extensive browser support for es is still incomplete however es code can be transpiled into es code which has more consistent support across browsers transpiling adds an extra step to build processes whereas polyfills allow adding extra functionalities by including another javascript file th edition  ecmascript  the th edition officially known as ecmascript  was finalized in june  new features include the exponentiation operator  and arrayprototypeincludes esnext esnext is a dynamic name that refers to whatever the next version is at time of writing esnext features are more correctly called proposals because by definition the specification has not been finalized yet features the ecmascript language includes structured dynamic functional and prototypebased features implementations ecmascript is supported in many applications especially web browsers where it is implemented by javascript or in the case of internet explorer jscript implementations sometimes include extensions to the language or to the standard library and related application programming interfaces api such as the world wide web consortium wc specified document object model dom this means that applications written in one implementation may be incompatible with another unless they are written to use only a common subset of supported features and apis version correspondence items on the same line are approximately the same language conformance tests in  ecma international started developing a standards test for ecma  ecmascript test is an ecmascript conformance test suite that can be used to check how closely a javascript implementation follows the ecmascript th edition specification the test suite contains thousands of individual tests each of which tests some specific requirements of the ecmascript specification development of test is a project of ecma technical committee  tc the testing framework and individual tests are created by member organizations of tc and contributed to ecma for use in test important contributions were made by google sputnik testsuite and microsoft who both contributed thousands of tests the test testsuite already contains more than  tests and is being developed further  the following table shows current conformance results of browser products lower scores are better although scores can not be compared as tests are not weighted also be aware that test itself is likely to contain bugs that may impact a browsers score so browsers with a score significantly lower than the current test suite bug count may not necessarily do better than those with a higher one that may be particularly true when several browsers have a higher score in their current development builds as compared to their last released version