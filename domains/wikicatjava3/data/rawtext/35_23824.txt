postgresql postgresql often simply postgres is an objectrelational database ordbms ie a rdbms with additional optional use object features with an emphasis on extensibility and standardscompliance as a database server its primary function is to store data securely and to allow for retrieval at the request of other software applications it can handle workloads ranging from small singlemachine applications to large internetfacing applications with many concurrent users postgresql is developed by the postgresql global development group a diverse group of many companies and individual contributors it is free and opensource software released under the terms of the postgresql license a permissive freesoftware license name postgresqls developers pronounce postgresql as  it is abbreviated as postgres because of ubiquitous support for the among most relational databases the community considered changing the name back to postgres however the postgresql core team announced in  that the product would continue to use the name postgresql the name postgres post ingres refers to the projects origins in that database that was developed at university of california berkeley history postgresql evolved from the ingres project at the university of california berkeley in  the leader of the ingres team michael stonebraker left berkeley to make a proprietary version of ingres he returned to berkeley in  and started a postingres project to address the problems with contemporary database systems that had become increasingly clear during the early s the new project postgres aimed to add the fewest features needed to completely support types these features included the ability to define types and to fully describe relationships something used widely before but maintained entirely by the user in postgres the database understood relationships and could retrieve information in related tables in a natural way using rules postgres used many of the ideas of ingres but not its code starting in  the postgres team published a number of papers describing the basis of the system and by  had a prototype version shown at the  acm sigmod conference the team released version  to a small number of users in june  then version  with a rewritten rules system in june  version  released in  again rewrote the rules system and added support for multiple storage managers and an improved query engine by  the great number of users began to overwhelm the project with requests for support and features after releasing version  on june   primarily a cleanup the project ended berkeley had released postgres under an mitstyle license which enabled other developers to use the code for any use at the time postgres used an ingresinfluenced postquel query language interpreter which could be interactively used with a console application named monitor in  berkeley graduate students andrew yu and jolly chen replaced the postquel query language interpreter with one for the sql query language creating postgres the frontend program monitor was also replaced by psql yu and chen released the code on the web on july   marc fournier at huborg networking services provided the first nonuniversity development server for the opensource development effort with the participation of bruce momjian and vadim b mikheev work began to stabilize the code inherited from berkeley the first opensource version was released on august   in  the project was renamed to postgresql to reflect its support for sql the online presence at the website postgresqlorg began on october   the first postgresql release formed version  on january   since then a group of developers and volunteers around the world have maintained the software as the postgresql global development group the postgresql project continues to make major releases approximately annually and minor bugfix releases all available under its free and opensource software postgresql license code comes from contributions from proprietary vendors support companies and opensource programmers at large multiversion concurrency control mvcc postgresql manages concurrency through a system known as multiversion concurrency control mvcc which gives each transaction a snapshot of the database allowing changes to be made without being visible to other transactions until the changes are committed this largely eliminates the need for read locks and ensures the database maintains the acid atomicity consistency isolation durability principles in an efficient manner postgresql offers three levels of transaction isolation read committed repeatable read and serializable because postgresql is immune to dirty reads requesting a read uncommitted transaction isolation level provides read committed instead postgresql supports full serializability via the serializable snapshot isolation ssi technique storage and replication replication postgresql includes builtin binary replication based on shipping the changes writeahead logs to replica nodes asynchronously with the ability to run readonly queries against these replicated nodes this allows splitting read traffic among multiple nodes efficiently earlier replication software that allowed similar read scaling normally relied on adding replication triggers to the master introducing additional load onto it postgresql also includes builtin synchronous replication that ensures that for each write transaction the master waits until at least one replica node has written the data to its transaction log unlike other database systems the durability of a transaction whether it is asynchronous or synchronous can be specified perdatabase peruser persession or even pertransaction this can be useful for work loads that do not require such guarantees and may not be wanted for all data as it will have some negative effect on performance due to the requirement of the confirmation of the transaction reaching the synchronous standby there can be a mixture of synchronous and asynchronous standby servers a list of synchronous standby servers can be specified in the configuration which determines which servers are candidates for synchronous replication the first in the list which is currently connected and actively streaming is the one that will be used as the current synchronous server when this fails it falls to the next in line synchronous multimaster replication is currently not included in the postgresql core postgresxc which is based on postgresql provides scalable synchronous multimaster replication available in version  april  version is licensed under the same license as postgresql a similar project is called postgresxl and is available under the mozilla public license postgresr is yet another older fork bidirectional replication bdr is an asynchronous multimaster replication system for postgresql the community has also written some tools to make managing replication clusters easier such as repmgr there are also several asynchronous triggerbased replication packages for postgresql these remain useful even after introduction of the expanded core capabilities for situations where binary replication of an entire database cluster is not the appropriate approach indexes postgresql includes builtin support for regular btree and hash indexes and four index access methods generalized search trees gist generalized inverted indexes gin spacepartitioned gist spgist and block range indexes brin hash indexes are implemented but discouraged because they cannot be recovered after a crash or power loss in addition userdefined index methods can be created although this is quite an involved process indexes in postgresql also support the following features schemas in postgresql a schema holds all objects with the exception of roles and tablespaces schemas effectively act like namespaces allowing objects of the same name to coexist in the same database by default newly created databases have a schema called public but any additional schemas can be added and the public schema isnt mandatory a searchpath setting determines the order in which postgresql checks schemas for unqualified objects those without a prefixed schema by default it is set to user public user refers to the currently connected database user this default can be set on a database or role level but as it is a session parameter it can be freely changed even multiple times during a client session affecting that session only nonexistent schemas listed in searchpath are silently skipped during objects lookup new objects are created in whichever valid schema one that presently exists appears first in the searchpath data types a wide variety of native data types are supported including in addition users can create their own data types which can usually be made fully indexable via postgresqls indexing infrastructures  gist gin spgist examples of these include the geographic information system gis data types from the postgis project for postgresql there is also a data type called a domain which is the same as any other data type but with optional constraints defined by the creator of that domain this means any data entered into a column using the domain will have to conform to whichever constraints were defined as part of the domain starting with postgresql  a data type that represents a range of data can be used which are called range types these can be discrete ranges eg all integer values  to  or continuous ranges eg any point in time between am and am the builtin range types available include ranges of integers big integers decimal numbers time stamps with and without time zone and dates custom range types can be created to make new types of ranges available such as ip address ranges using the inet type as a base or float ranges using the float data type as a base range types support inclusive and exclusive range boundaries using the  and  characters respectively eg  represents all integers starting from and including  up to but not including  range types are also compatible with existing operators used to check for overlap containment right of etc userdefined objects new types of almost all objects inside the database can be created including inheritance tables can be set to inherit their characteristics from a parent table data in child tables will appear to exist in the parent tables unless data is selected from the parent table using the only keyword ie codice adding a column in the parent table will cause that column to appear in the child table inheritance can be used to implement table partitioning using either triggers or rules to direct inserts to the parent table into the proper child tables  this feature is not fully supported yet in particular table constraints are not currently inheritable all check constraints and notnull constraints on a parent table are automatically inherited by its children other types of constraints unique primary key and foreign key constraints are not inherited inheritance provides a way to map the features of generalization hierarchies depicted in entity relationship diagrams erds directly into the postgresql database control and connectivity foreign data wrappers postgresql  and newer can link to other systems to retrieve data via foreign data wrappers fdws these can take the form of any data source such as a file system another rdbms or a web service this means that regular database queries can use these data sources like regular tables and even join multiple datasources together interfaces postgresql has several interfaces available and is also widely supported among programming language libraries builtin interfaces include libpq postgresqls official c application interface and ecpg an embedded c system external interfaces include procedural languages procedural languages allow developers to extend the database with custom subroutines functions often called stored procedures these functions can be used to build triggers functions invoked upon modification of certain data and custom aggregate functions procedural languages can also be invoked without defining a function using the do command at sql level languages are divided into two groups safe languages are sandboxed and can be safely used by any user procedures written in unsafe languages can only be created by superusers because they allow bypassing the databases security restrictions but can also access sources external to the database some languages like perl provide both safe and unsafe versions postgresql has builtin support for three procedural languages in addition postgresql allows procedural languages to be loaded into the database through extensions three language extensions are included with postgresql to support perl python and tcl there are external projects to add support for many other languages including java javascript plv r ruby and others triggers triggers are events triggered by the action of sql dml statements for example an insert statement might activate a trigger that checks if the values of the statement are valid most triggers are only activated by either insert or update statements triggers are fully supported and can be attached to tables triggers can be percolumn and conditional in that update triggers can target specific columns of a table and triggers can be told to execute under a set of conditions as specified in the triggers where clause triggers can be attached to views by using the instead of condition multiple triggers are fired in alphabetical order in addition to calling functions written in the native plpgsql triggers can also invoke functions written in other languages like plpython or plperl asynchronous notifications postgresql provides an asynchronous messaging system that is accessed through the notify listen and unlisten commands a session can issue a notify command along with the userspecified channel and an optional payload to mark a particular event occurring other sessions are able to detect these events by issuing a listen command which can listen to a particular channel this functionality can be used for a wide variety of purposes such as letting other sessions know when a table has updated or for separate applications to detect when a particular action has been performed such a system prevents the need for continuous polling by applications to see if anything has yet changed and reducing unnecessary overhead notifications are fully transactional in that messages are not sent until the transaction they were sent from is committed this eliminates the problem of messages being sent for an action being performed which is then rolled back many of the connectors for postgresql provide support for this notification system including libpq jdbc npgsql psycopg and nodejs so it can be used by external applications rules rules allow the query tree of an incoming query to be rewritten rules or more properly query rewrite rules are attached to a tableclass and rewrite the incoming dml select insert update andor delete into one or more queries that either replace the original dml statement or execute in addition to it query rewrite occurs after dml statement parsing but before query planning security postgresql manages its internal security on a perrole basis a role is generally regarded to be a user a role that can log in or a group a role of which other roles are members permissions can be granted or revoked on any object down to the column level and can also allowprevent the creation of new objects at the database schema or table levels the sepgsql extension provides an additional layer of security by integrating with selinux this utilises postgresqls security label feature postgresql natively supports a broad number of external authentication mechanisms including the gssapi sspi kerberos peer ident and certificate methods can also use a specified map file that lists which users matched by that authentication system are allowed to connect as a specific database user these methods are specified in the clusters hostbased authentication configuration file pghbaconf which determines what connections are allowed this allows control over which user can connect to which database where they can connect from ip addressip address rangedomain socket which authentication system will be enforced and whether the connection must use tls benchmarks and performance many informal performance studies of postgresql have been done performance improvements aimed at improving scalability started heavily with version  simple benchmarks between version  and version  showed that the latter was more than  times faster on readonly workloads and at least  times faster on both read and write workloads the first industrystandard and peervalidated benchmark was completed in june  using the sun java system application server proprietary version of glassfish  platform edition ultrasparc tbased sun fire server and postgresql  this result of  specjappserver jopsstandard compares favourably with the  jopsstandard with oracle  on an itaniumbased hpux system in august  sun submitted an improved benchmark score of  specjappserver jopsstandard with the system under test at a reduced price the priceperformance improved from jops to jops the default configuration of postgresql uses only a small amount of dedicated memory for performancecritical purposes such as caching database blocks and sorting this limitation is primarily because older operating systems required kernel changes to allow allocating large blocks of shared memory postgresqlorg provides advice on basic recommended performance practice in a wiki in april  robert haas of enterprisedb demonstrated postgresql s linear cpu scalability using a server with  cores matloob khushi performed benchmarking between postgresql  and mysql  for their ability to process genomic data in his performance analysis he found that postgresql extracts overlapping genomic regions eight times faster than mysql using two datasets of  each forming random human dna regions insertion and data uploads in postgresql were also better although general searching capability of both databases was almost equivalent platforms postgresql is available for the following operating systems linux all recent distributions windows windows  sp and later compilable by eg visual studio now with up to most recent  version dragonfly bsd freebsd openbsd netbsd mac os x aix bsdos hpux irix openindiana opensolaris sco openserver sco unixware solaris and tru unix in  support for the following obsolete systems was removed dgux nextstep sunos  svr ultrix  and univel most other unixlike systems should also work postgresql works on any of the following instruction set architectures x and x on windows and other operating systems these are supported on other than windows ia itanium powerpc powerpc  s sx sparc sparc  alpha armva bit and older arm bit including older such as armv in raspberry pi mips mipsel mk and parisc it is also known to work on mr nsk and vax in addition to these it is possible to build postgresql for an unsupported cpu by disabling spinlocks database administration open source frontends and tools for administering postgresql include a number of companies offer proprietary tools for postgresql they often consist of a universal core that is adapted for various specific database products these tools mostly share the administration features with the open source tools but offer improvements in data modeling importing exporting or reporting prominent users prominent organizations and products that use postgresql as the primary database include service implementations some major vendors offer postgresqlas software as a service