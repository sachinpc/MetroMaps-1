java applet a java applet is a small application which is written in java or another programming language that compiles to java bytecode and delivered to users in the form of that bytecode the user launches the java applet from a web page and the applet is then executed within a java virtual machine jvm in a process separate from the web browser itself a java applet can appear in a frame of the web page a new application window suns appletviewer or a standalone tool for testing applets java applets were introduced in the first version of the java language which was released in  java applets are usually written in java but other languages such as jython jruby pascal scala or eiffel via smarteiffel may be used as well java applets run at very fast speeds and until  they were many times faster than javascript unlike javascript java applets had access to d hardware acceleration making them wellsuited for nontrivial computationintensive visualizations as browsers have gained support for hardwareaccelerated graphics thanks to the canvas technology or specifically webgl in the case of d graphics as well as justintime compiled javascript the speed difference has become less noticeable since javas bytecode is crossplatform or platform independent java applets can be executed by browsers or other clients for many platforms including microsoft windows freebsd unix macos and linux overview the applets are used to provide interactive features to web applications that cannot be provided by html alonethey can capture mouse input and also have controls like buttons or check boxes in response to user actions an applet can change the provided graphic content this makes applets wellsuited for demonstration visualization and teaching there are online applet collections for studying various subjects from physics to heart physiology an applet can also be a text area only providing for instance a crossplatform commandline interface to some remote system if needed an applet can leave the dedicated area and run as a separate window however applets have very little control over web page content outside the applets dedicated area so they are less useful for improving the site appearance in general unlike other types of browser extensions while applets like news tickers or wysiwyg editors are also known applets can also play media in formats that are not natively supported by the browser pages coded in html may embed parameters within them that are passed to the applet because of this the same applet may have a different appearance depending on the parameters that were passed as applets were available before css and dhtml were standard they were also widely used for trivial effects such as rollover navigation buttons heavily criticized this usage is now declining technical information java applets are executed in a sandbox by most web browsers preventing them from accessing local data like the clipboard or file system the code of the applet is downloaded from a web server after which the browser either embeds the applet into a web page or opens a new window showing the applets user interface a java applet extends the class  or in the case of a swing applet  the class which must override methods from the applet class to set up a user interface inside itself codice is a descendant of which is a descendant of  as applet inherits from container it has largely the same user interface possibilities as an ordinary java application including regions with user specific visualization the first implementations involved downloading an applet class by class while classes are small files there are often many of them so applets got a reputation as slowloading components however since jars were introduced an applet is usually delivered as a single file that has a size similar to an image file hundreds of kilobytes to several megabytes the domain from where the applet executable has been downloaded is the only domain to which the usual unsigned applet is allowed to communicate this domain can be different from the domain where the surrounding html document is hosted java system libraries and runtimes are backwardscompatible allowing one to write code that runs both on current and on future versions of the java virtual machine similar technologies many java developers blogs and magazines are recommending that the java web start technology be used in place of applets java web start allows the launching of unmodified applet code which then runs in a separate window not inside the invoking browser a java servlet is sometimes informally compared to be like a serverside applet but it is different in its language functions and in each of the characteristics described here about applets embedding into a web page the applet can be displayed on the web page by making use of the deprecated codice html element or the recommended codice element the codice element can be used with mozilla family browsers codice was deprecated in html  but is included in html  this specifies the applets source and location both codice and codice tags can also download and install java virtual machine if required or at least lead to the plugin page codice and codice tags also support loading of the serialized applets that start in some particular rather than initial state tags also specify the message that shows up in place of the applet if the browser cannot run it due to any reason however despite codice being officially a recommended tag as of  the support of the codice tag was not yet consistent among browsers and sun kept recommending the older codice tag for deploying in multibrowser environments as it remained the only tag consistently supported by the most popular browsers to support multiple browsers the codice tag currently requires javascript that recognizes the browser and adjusts the tag usage of additional browserspecific tags or delivering adapted output from the server side deprecating codice tag has been criticized oracle now provides a maintained javascript code to launch applets with cross platform workarounds the java browser plugin relies on npapi which many web browser vendors are deprecating due to its age and security issues in january  oracle announced that java runtime environments based on jdk  will discontinue the browser plugin example the following example illustrates the use of java applets through the javaapplet package the example also uses classes from the java abstract window toolkit awt to produce the message hello world as output simple applets are shared freely on the internet for customizing applications that support plugins after compilation the resulting class file can be placed on a web server and invoked within an html page by using an or an tag for example when the page is accessed it will read as follows to minimize download time applets can be delivered in the form of a jar file in the case of this example if all necessary classes are placed in the compressed archive examplejar the following embedding code could be used instead applet inclusion is described in detail in suns official page about the applet tag advantages a java applet can have any or all of the following advantages disadvantages a java applet may have any of the following disadvantages compared to other clientside web technologies compatibilityrelated lawsuits sun has made considerable efforts to ensure compatibility is maintained between java versions as they evolve enforcing java portability by law if required oracle seems to be continuing the same strategy  sun vs microsoft the  lawsuit was filed after microsoft created a modified java virtual machine of their own which shipped with internet explorer microsoft added about  methods and  fields into the classes within the javaawt javalang and javaio packages other modifications included removal of rmi capability and replacement of java native interface from jni to rni a different standard rmi was removed because it only easily supports java to java communications and competes with microsoft dcom technology applets that relied on these changes or just inadvertently used them worked only within microsofts java system sun sued for breach of trademark as the point of java was that there should be no proprietary extensions and that code should work everywhere microsoft agreed to pay sun  million and sun agreed to grant microsoft limited license to use java without modifications only and for a limited time  sun vs microsoft microsoft continued to ship its own unmodified java virtual machine over the years it became extremely outdated yet still default for internet explorer a later study revealed that applets of this time often contain their own classes that mirror swing and other newer features in a limited way in  sun filed an antitrust lawsuit claiming that microsofts attempts at illegal monopolization had harmed the java platform sun demanded microsoft distribute suns current binary implementation of java technology as part of windows distribute it as a recommended update for older microsoft desktop operating systems and stop the distribution of microsofts virtual machine as its licensing time agreed in the prior lawsuit had expired microsoft paid  million for pending antitrust issues another  million for patent issues and a  million royalty fee to use suns software in the future  oracle vs google google has developed their own android platform that uses java features and concepts yet is incompatible with standard libraries this may be a violation of conditions under which sun granted openjdk patents to use open source java for all in  oracle sued google for using java in a wrong way claiming that googles android competes with oracle americas java and that google has been aware of suns patent portfolio  since google hired certain former sun java engineers in may  the jury in this case found that google did not infringe on oracles patents and the trial judge ruled that the structure of the java apis used by google was not copyrightable security there are two applet types with very different security models signed applets and unsigned applets as of java se  update  april  applets and webstart apps are encouraged to be signed with a trusted certificate and warning messages appear when running unsigned applets further starting with java  update  unsigned applets are blocked by default they can be run by creating an exception in the java control panel unsigned limits on unsigned applets are understood as draconian they have no access to the local filesystem and web access limited to the applet download site there are also many other important restrictions for instance they cannot access all system properties use their own class loader call native code execute external commands on a local system or redefine classes belonging to core packages included as part of a java release while they can run in a standalone frame such frame contains a header indicating that this is an untrusted applet successful initial call of the forbidden method does not automatically create a security hole as an access controller checks the entire stack of the calling code to be sure the call is not coming from an improper location as with any complex system many security problems have been discovered and fixed since java was first released some of these like the calendar serialization security bug persisted for many years with nobody being aware others have been discovered in use by malware in the wild some studies mention applets crashing the browser or overusing cpu resources but these are classified as nuisances and not as true security flaws however unsigned applets may be involved in combined attacks that exploit a combination of multiple severe configuration errors in other parts of the system an unsigned applet can also be more dangerous to run directly on the server where it is hosted because while code base allows it to talk with the server running inside it can bypass the firewall an applet may also try dos attacks on the server where it is hosted but usually people who manage the web site also manage the applet making this unreasonable communities may solve this problem via source code review or running applets on a dedicated domain the unsigned applet can also try to download malware hosted on originating server however it could only store such file into a temporary folder as it is transient data and has no means to complete the attack by executing it there were attempts to use applets for spreading phoenix and siberia exploits this way but these exploits do not use java internally and were also distributed in several other ways signed a signed applet contains a signature that the browser should verify through a remotely running independent certificate authority server producing this signature involves specialized tools and interaction with the authority server maintainers once the signature is verified and the user of the current machine also approves a signed applet can get more rights becoming equivalent to an ordinary standalone program the rationale is that the author of the applet is now known and will be responsible for any deliberate damage this approach allows applets to be used for many tasks that are otherwise not possible by clientside scripting however this approach requires more responsibility from the user deciding whom he or she trusts the related concerns include a nonresponsive authority server wrong evaluation of the signer identity when issuing certificates and known applet publishers still doing something that the user would not approve of hence signed applets that appeared from java  may actually have more security concerns selfsigned selfsigned applets which are applets signed by the developer themselves may potentially pose a security risk java plugins provide a warning when requesting authorization for a selfsigned applet as the function and safety of the applet is guaranteed only by the developer itself and has not been independently confirmed such selfsigned certificates are usually only used during development prior to release where thirdparty confirmation of security is unimportant but most applet developers will seek thirdparty signing to ensure that users trust the applets safety java security problems are not fundamentally different from similar problems of any clientside scripting platform in particular all issues related to signed applets also apply to microsoft activex components as of approximately jan   selfsigned and unsigned applets are no longer accepted by the commonly available java plugins or java web start consequently developers who wish to deploy java applets have no alternative but to acquire trusted certificates from commercial sources alternatives alternative technologies exist for example javascript flash signed scsk curl applets and microsoft silverlight that satisfy some of the scope of what is possible with an applet of these javascript is not always viewed as a competing replacement javascript can coexist with applets in the same page assist in launching applets for instance in a separate frame or providing platform workarounds and later be called from the applet code javafx is an extension of the java platform and may also be viewed as an alternative