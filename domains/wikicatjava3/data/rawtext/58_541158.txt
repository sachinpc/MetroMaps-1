java management extensions managing and monitoring applications can be designed and developed using the java dynamic management kit jsr  of the java community process defined jmx   and  jmx  was being developed under jsr  but this jsr was subsequently withdrawn the jmx remote api  for remote management and monitoring is specified by jsr  an extension of the jmx remote api for web services is being developed under jsr  adopted early on by the jee community jmx has been a part of jse since version  jmx is a trademark of oracle corporation architecture jmx uses a threelevel architecture applications can be generic consoles such as jconsole and mcj or domainspecific monitoring applications external applications can interact with the mbeans through the use of jmx connectors and protocol adapters connectors serve to connect an agent with a remote jmxenabled management application this form of communication involves a connector in the jmx agent and a connector client in the management application protocol adapters provide a management view of the jmx agent through a given protocol management applications that connect to a protocol adapter are usually specific to the given protocol managed beans a managed bean  sometimes simply referred to as an mbean  is a type of javabean created with dependency injection managed beans are particularly used in the java management extensions technology  but with java ee  the specification provides for a more detailed meaning of a managed bean the mbean represents a resource running in the java virtual machine such as an application or a java ee technical service transactional monitor jdbc driver etc they can be used for collecting statistics on concerns like performance resources usage or problems pull for getting and setting application configurations or properties pushpull and notifying events like faults or state changes push java ee  provides that a managed bean is a bean that is implemented by a java class which is called its bean class a toplevel java class is a managed bean if it is defined to be a managed bean by any other java ee technology specification for example the javaserver faces technology specification or if it meets all of the following conditions no special declaration such as an annotation is required to define a managed bean an mbean can notify the mbeanserver of its internal changes for the attributes by implementing the codice the application interested in the mbeans changes registers a listener codice to the mbeanserver note that jmx does not guarantee that the listeners will receive all notifications types there are two basic types of mbean additional types are open mbeans model mbeans and monitor mbeans open mbeans are dynamic mbeans that rely on the basic data types they are selfexplanatory and more userfriendly model mbeans are dynamic mbeans that can be configured during runtime a generic mbean class is also provided for dynamically configuring the resources during program runtime an mxbean platform mbean is a special type of mbean that reifies java virtual machine subsystems such as garbage collection jit compilation memory pools multithreading etc an mlet management applet is a utility mbean to load instantiate and register mbeans in the mbeanserver from an xml description the format of the xml descriptor is support jmx is supported at various levels by different vendors