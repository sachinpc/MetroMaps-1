clojure clojure  like closure or clojurescript is a dialect of the lisp programming language created by rich hickey clojure is a generalpurpose programming language with an emphasis on functional programming it runs on the java virtual machine common language runtime and javascript engines like other lisps clojure treats code as data and has a macro system the current development process is communitydriven overseen by rich hickey as its benevolent dictator for life bdfl clojure encourages immutability and immutable data structures while its type system is entirely dynamic recent efforts have also sought the implementation of gradual typing clojure encourages programmers to be explicit about managing state and identity this focus on programming with immutable values and explicit progressionoftime constructs is intended to facilitate developing more robust programs especially multithreaded ones clojure is used in industry by firms such as walmart puppet labs and other large software firms commercial support for clojure is provided by cognitect annual clojure conferences are organised every year across the globe the most famous of them being clojureconj us east coast clojurewest us west coast and euroclojure europe the latest stable version of clojure is  released on january   the first stable release was version  released on may   clojure is free software released under the eclipse public license history and development process rich hickey is the creator of the clojure language before clojure he developed dotlisp a similar project based on the net framework and three earlier attempts to provide interoperability between lisp and java a java foreign language interface for common lisp jfli a foreign object interface for lisp foil and a lispfriendly interface to java servlets lisplets hickey spent about  years working on clojure before releasing it publicly much of that time working exclusively on clojure with no outside funding at the end of this time hickey sent an email announcing the language to some friends in the common lisp community the development process is communitydriven and is managed at the clojure community website the website contains planning documents and an issue tracker where bugs may be filed general development discussion occurs at the clojure dev google group while anyone can submit bug reports and ideas to contribute patches one must sign the clojure contributor agreement jira tickets are processed by a team of screeners and finally rich hickey approves the changes design philosophy rich hickey developed clojure because he wanted a modern lisp for functional programming symbiotic with the established java platform and designed for concurrency clojures approach to state is characterized by the concept of identities which are represented as a series of immutable states over time since states are immutable values any number of workers can operate on them in parallel and concurrency becomes a question of managing changes from one state to another for this purpose clojure provides several mutable reference types each having welldefined semantics for the transition between states features clojure runs on the java virtual machine and as a result integrates with java and fully supports calling java code from clojure and clojure code can be called from java also the community uses leiningen for project automation providing support for maven integration leiningen handles project package management and dependencies and is configured using clojure syntax like most other lisps clojures syntax is built on sexpressions that are first parsed into data structures by a reader before being compiled clojures reader supports literal syntax for maps sets and vectors in addition to lists and these are compiled to the mentioned structures directly clojure is a lisp and is not intended to be codecompatible with other dialects of lisp since it uses its own set of data structures incompatible with other lisps as a lisp dialect clojure supports functions as firstclass objects a readevalprint loop repl and a macro system clojures macro system is very similar to that in common lisp with the exception that clojures version of the backquote called syntax quote qualifies symbols with their namespace this helps prevent unintended name capture as binding to namespacequalified names is forbidden it is possible to force a capturing macro expansion but it must be done explicitly clojure does not allow userdefined reader macros but the reader supports a more constrained form of syntactic extension clojure supports multimethods and for interfacelike abstractions has a protocol based polymorphism and data type system using records providing highperformance and dynamic polymorphism designed to avoid the expression problem clojure has support for lazy sequences and encourages the principle of immutability and persistent data structures as a functional language emphasis is placed on recursion and higherorder functions instead of sideeffectbased looping automatic tail call optimization is not supported as the jvm does not support it natively it is possible to do so explicitly by using the codice keyword for parallel and concurrent programming clojure provides software transactional memory a reactive agent system and channelbased concurrent programming recently clojure introduced reader conditionals by allowing the embedding of clojure and clojurescript code in the same namespace transducers have been added as a way for composing transformations transducers enable higherorder functions such as map and fold to generalize over any source of input data as traditionally these functions operate on sequences transducers allow them to work on channels and let the user define their own models for transduction platforms and popularity the primary platform of clojure is the jvm but other target implementations exist the most notable of these are clojurescript which compiles to javascript and clojureclr a full port to the common language runtime interoperable with the net ecosystem a survey of the clojure community with  respondents conducted in  found that  of respondents used both clojure and clojurescript when working with clojure in  this number had increased to  in  based on  respondents to  popular clojurescript projects include implementations of the react library such as reagent and om clojure has also been used for creative computing including visual art music games and poetry variant implementations of the clojure language have been developed for platforms other than the above examples hello world defining a function gui hello world by calling the java swing library using unicode hello  world using the cjk code point for that word a threadsafe generator of unique serial numbers though like many other lisp dialects clojure has a builtin codice function that it uses internally an anonymous subclass of codice that doesnt write to anything and a macro using it to silence all prints within it  threads manipulating one shared data structure which consists of  vectors each one containing  initially sequential unique numbers each thread then repeatedly selects two random positions in two random vectors and swaps them all changes to the vectors occur in transactions by making use of clojures software transactional memory system output of prior example